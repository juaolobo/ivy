Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","background","background/ml_explosion","background/standardization","background/why_unify","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","design","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","extensions","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/activations","functional/backends/jax/activations/softmax","functional/backends/jax/constants","functional/backends/jax/converters","functional/backends/jax/converters/IvyModule","functional/backends/jax/converters/to_ivy_module","functional/backends/jax/creation","functional/backends/jax/creation/array","functional/backends/jax/creation/asarray","functional/backends/jax/creation/empty","functional/backends/jax/creation/empty_like","functional/backends/jax/creation/eye","functional/backends/jax/creation/full_like","functional/backends/jax/creation/linspace","functional/backends/jax/creation/logspace","functional/backends/jax/creation/ones","functional/backends/jax/creation/ones_like","functional/backends/jax/creation/tril","functional/backends/jax/creation/triu","functional/backends/jax/creation/zeros","functional/backends/jax/data_type","functional/backends/jax/data_type/Finfo:\n\n    def __init__","functional/backends/jax/data_type/broadcast_to","functional/backends/jax/data_type/finfo","functional/backends/jax/data_type/iinfo","functional/backends/jax/data_type/result_type","functional/backends/jax/device","functional/backends/jax/device/Profiler","functional/backends/jax/device/dev","functional/backends/jax/device/dev_from_str","functional/backends/jax/device/dev_to_str","functional/backends/jax/device/num_gpus","functional/backends/jax/device/to_dev","functional/backends/jax/elementwise","functional/backends/jax/elementwise/abs","functional/backends/jax/elementwise/acos","functional/backends/jax/elementwise/acosh","functional/backends/jax/elementwise/asin","functional/backends/jax/elementwise/asinh","functional/backends/jax/elementwise/atan","functional/backends/jax/elementwise/bitwise_and","functional/backends/jax/elementwise/bitwise_invert","functional/backends/jax/elementwise/bitwise_or","functional/backends/jax/elementwise/ceil","functional/backends/jax/elementwise/cos","functional/backends/jax/elementwise/cosh","functional/backends/jax/elementwise/equal","functional/backends/jax/elementwise/expm1","functional/backends/jax/elementwise/floor","functional/backends/jax/elementwise/greater_equal","functional/backends/jax/elementwise/isfinite","functional/backends/jax/elementwise/isinf","functional/backends/jax/elementwise/isnan","functional/backends/jax/elementwise/less","functional/backends/jax/elementwise/less_equal","functional/backends/jax/elementwise/log","functional/backends/jax/elementwise/log10","functional/backends/jax/elementwise/log1p","functional/backends/jax/elementwise/log2","functional/backends/jax/elementwise/logaddexp","functional/backends/jax/elementwise/logical_and","functional/backends/jax/elementwise/logical_not","functional/backends/jax/elementwise/logical_or","functional/backends/jax/elementwise/logical_xor","functional/backends/jax/elementwise/negative","functional/backends/jax/elementwise/not_equal","functional/backends/jax/elementwise/positive","functional/backends/jax/elementwise/round","functional/backends/jax/elementwise/sin","functional/backends/jax/elementwise/sinh","functional/backends/jax/elementwise/sqrt","functional/backends/jax/elementwise/square","functional/backends/jax/elementwise/tanh","functional/backends/jax/general","functional/backends/jax/general/cumprod","functional/backends/jax/general/gather","functional/backends/jax/general/gather_nd","functional/backends/jax/general/inplace_decrement","functional/backends/jax/general/inplace_increment","functional/backends/jax/general/inplace_update","functional/backends/jax/general/is_array","functional/backends/jax/general/scatter_flat","functional/backends/jax/general/scatter_nd","functional/backends/jax/general/unstack","functional/backends/jax/gradients","functional/backends/jax/gradients/execute_with_gradients","functional/backends/jax/gradients/is_variable","functional/backends/jax/image","functional/backends/jax/image/bilinear_resample","functional/backends/jax/image/gradient_image","functional/backends/jax/image/stack_images","functional/backends/jax/layers","functional/backends/jax/layers/conv1d","functional/backends/jax/layers/conv1d_transpose","functional/backends/jax/layers/conv2d","functional/backends/jax/layers/conv2d_transpose","functional/backends/jax/layers/conv3d","functional/backends/jax/layers/conv3d_transpose","functional/backends/jax/layers/depthwise_conv2d","functional/backends/jax/linear_algebra","functional/backends/jax/linear_algebra/cholesky","functional/backends/jax/linear_algebra/det","functional/backends/jax/linear_algebra/diagonal","functional/backends/jax/linear_algebra/eigvalsh","functional/backends/jax/linear_algebra/matmul","functional/backends/jax/linear_algebra/matrix_norm","functional/backends/jax/linear_algebra/matrix_transpose","functional/backends/jax/linear_algebra/qr","functional/backends/jax/linear_algebra/slogdet","functional/backends/jax/linear_algebra/svd","functional/backends/jax/linear_algebra/svdvals","functional/backends/jax/linear_algebra/trace","functional/backends/jax/linear_algebra/vector_norm","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/manipulation","functional/backends/jax/manipulation/expand_dims","functional/backends/jax/manipulation/flip","functional/backends/jax/manipulation/permute_dims","functional/backends/jax/manipulation/split","functional/backends/jax/old","functional/backends/jax/old/general","functional/backends/jax/old/general/arange","functional/backends/jax/old/general/argmin","functional/backends/jax/old/general/cast","functional/backends/jax/old/general/concatenate","functional/backends/jax/old/general/dtype","functional/backends/jax/old/general/dtype_bits","functional/backends/jax/old/general/dtype_from_str","functional/backends/jax/old/general/dtype_to_str","functional/backends/jax/old/general/full","functional/backends/jax/old/general/identity","functional/backends/jax/old/general/indices_where","functional/backends/jax/old/general/linear_resample","functional/backends/jax/old/general/one_hot","functional/backends/jax/old/general/squeeze","functional/backends/jax/old/general/transpose","functional/backends/jax/old/general/zeros_like","functional/backends/jax/old/linear_algebra","functional/backends/jax/old/reductions","functional/backends/jax/random","functional/backends/jax/random/multinomial","functional/backends/jax/random/randint","functional/backends/jax/random/random_normal","functional/backends/jax/random/random_uniform","functional/backends/jax/random/seed","functional/backends/jax/random/shuffle","functional/backends/jax/searching","functional/backends/jax/searching/argmax","functional/backends/jax/set","functional/backends/jax/sorting","functional/backends/jax/sorting/argsort","functional/backends/jax/statistical","functional/backends/jax/statistical/einsum","functional/backends/jax/statistical/max","functional/backends/jax/statistical/mean","functional/backends/jax/statistical/min","functional/backends/jax/statistical/prod","functional/backends/jax/statistical/sum","functional/backends/jax/statistical/var","functional/backends/jax/utility","functional/backends/jax/utility/all","functional/backends/jax/utility/any","functional/backends/mxnet","functional/backends/mxnet/activations","functional/backends/mxnet/activations/gelu","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/constants","functional/backends/mxnet/creation","functional/backends/mxnet/creation/array","functional/backends/mxnet/creation/asarray","functional/backends/mxnet/creation/empty","functional/backends/mxnet/creation/eye","functional/backends/mxnet/creation/linspace","functional/backends/mxnet/creation/logspace","functional/backends/mxnet/creation/ones","functional/backends/mxnet/creation/ones_like","functional/backends/mxnet/creation/tril","functional/backends/mxnet/creation/zeros","functional/backends/mxnet/data_type","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__","functional/backends/mxnet/data_type/finfo","functional/backends/mxnet/data_type/iinfo","functional/backends/mxnet/device","functional/backends/mxnet/device/Profiler","functional/backends/mxnet/device/dev","functional/backends/mxnet/device/dev_from_str","functional/backends/mxnet/device/dev_to_str","functional/backends/mxnet/device/to_dev","functional/backends/mxnet/elementwise","functional/backends/mxnet/elementwise/acos","functional/backends/mxnet/elementwise/acosh","functional/backends/mxnet/elementwise/bitwise_and","functional/backends/mxnet/elementwise/bitwise_or","functional/backends/mxnet/elementwise/ceil","functional/backends/mxnet/elementwise/floor","functional/backends/mxnet/elementwise/greater_equal","functional/backends/mxnet/elementwise/isfinite","functional/backends/mxnet/elementwise/isinf","functional/backends/mxnet/elementwise/isnan","functional/backends/mxnet/elementwise/less","functional/backends/mxnet/elementwise/logical_and","functional/backends/mxnet/elementwise/logical_not","functional/backends/mxnet/elementwise/logical_or","functional/backends/mxnet/elementwise/logical_xor","functional/backends/mxnet/elementwise/negative","functional/backends/mxnet/elementwise/round","functional/backends/mxnet/elementwise/sin","functional/backends/mxnet/elementwise/sinh","functional/backends/mxnet/elementwise/sqrt","functional/backends/mxnet/elementwise/square","functional/backends/mxnet/elementwise/tanh","functional/backends/mxnet/general","functional/backends/mxnet/general/array_equal","functional/backends/mxnet/general/cumprod","functional/backends/mxnet/general/floormod","functional/backends/mxnet/general/gather","functional/backends/mxnet/general/gather_nd","functional/backends/mxnet/general/inplace_decrement","functional/backends/mxnet/general/inplace_increment","functional/backends/mxnet/general/inplace_update","functional/backends/mxnet/general/is_array","functional/backends/mxnet/general/scatter_flat","functional/backends/mxnet/general/scatter_nd","functional/backends/mxnet/general/unstack","functional/backends/mxnet/gradients","functional/backends/mxnet/gradients/execute_with_gradients","functional/backends/mxnet/gradients/is_variable","functional/backends/mxnet/gradients/stop_gradient","functional/backends/mxnet/gradients/variable","functional/backends/mxnet/image","functional/backends/mxnet/image/bilinear_resample","functional/backends/mxnet/image/gradient_image","functional/backends/mxnet/image/stack_images","functional/backends/mxnet/layers","functional/backends/mxnet/layers/conv1d","functional/backends/mxnet/layers/conv1d_transpose","functional/backends/mxnet/layers/conv2d","functional/backends/mxnet/layers/conv2d_transpose","functional/backends/mxnet/layers/conv3d","functional/backends/mxnet/layers/conv3d_transpose","functional/backends/mxnet/layers/depthwise_conv2d","functional/backends/mxnet/linear_algebra","functional/backends/mxnet/linear_algebra/cholesky","functional/backends/mxnet/linear_algebra/det","functional/backends/mxnet/linear_algebra/diagonal","functional/backends/mxnet/linear_algebra/eigvalsh","functional/backends/mxnet/linear_algebra/matrix_norm","functional/backends/mxnet/linear_algebra/pinv","functional/backends/mxnet/linear_algebra/qr","functional/backends/mxnet/linear_algebra/slogdet","functional/backends/mxnet/linear_algebra/svd","functional/backends/mxnet/linear_algebra/trace","functional/backends/mxnet/linear_algebra/vector_norm","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/manipulation","functional/backends/mxnet/manipulation/constant_pad","functional/backends/mxnet/manipulation/expand_dims","functional/backends/mxnet/manipulation/flip","functional/backends/mxnet/manipulation/repeat","functional/backends/mxnet/manipulation/split","functional/backends/mxnet/manipulation/tile","functional/backends/mxnet/manipulation/zero_pad","functional/backends/mxnet/old","functional/backends/mxnet/old/general","functional/backends/mxnet/old/general/abs","functional/backends/mxnet/old/general/arange","functional/backends/mxnet/old/general/broadcast_to","functional/backends/mxnet/old/general/cast","functional/backends/mxnet/old/general/clip","functional/backends/mxnet/old/general/compile","functional/backends/mxnet/old/general/concatenate","functional/backends/mxnet/old/general/cross","functional/backends/mxnet/old/general/dtype","functional/backends/mxnet/old/general/dtype_bits","functional/backends/mxnet/old/general/dtype_from_str","functional/backends/mxnet/old/general/dtype_to_str","functional/backends/mxnet/old/general/full","functional/backends/mxnet/old/general/identity","functional/backends/mxnet/old/general/indices_where","functional/backends/mxnet/old/general/linear_resample","functional/backends/mxnet/old/general/matmul","functional/backends/mxnet/old/general/meshgrid","functional/backends/mxnet/old/general/squeeze","functional/backends/mxnet/old/general/stack","functional/backends/mxnet/old/general/transpose","functional/backends/mxnet/old/general/where","functional/backends/mxnet/old/general/zeros_like","functional/backends/mxnet/old/linear_algebra","functional/backends/mxnet/old/reductions","functional/backends/mxnet/random","functional/backends/mxnet/random/multinomial","functional/backends/mxnet/random/randint","functional/backends/mxnet/random/random_normal","functional/backends/mxnet/random/random_uniform","functional/backends/mxnet/searching","functional/backends/mxnet/searching/argmax","functional/backends/mxnet/set","functional/backends/mxnet/sorting","functional/backends/mxnet/sorting/argsort","functional/backends/mxnet/statistical","functional/backends/mxnet/statistical/einsum","functional/backends/mxnet/statistical/max","functional/backends/mxnet/statistical/mean","functional/backends/mxnet/statistical/min","functional/backends/mxnet/statistical/prod","functional/backends/mxnet/statistical/std","functional/backends/mxnet/statistical/sum","functional/backends/mxnet/statistical/var","functional/backends/mxnet/utility","functional/backends/mxnet/utility/all","functional/backends/mxnet/utility/any","functional/backends/numpy","functional/backends/numpy/activations","functional/backends/numpy/activations/gelu","functional/backends/numpy/activations/softmax","functional/backends/numpy/constants","functional/backends/numpy/creation","functional/backends/numpy/creation/array","functional/backends/numpy/creation/asarray","functional/backends/numpy/creation/empty","functional/backends/numpy/creation/empty_like","functional/backends/numpy/creation/eye","functional/backends/numpy/creation/full_like","functional/backends/numpy/creation/linspace","functional/backends/numpy/creation/logspace","functional/backends/numpy/creation/ones","functional/backends/numpy/creation/ones_like","functional/backends/numpy/creation/tril","functional/backends/numpy/creation/triu","functional/backends/numpy/creation/zeros","functional/backends/numpy/data_type","functional/backends/numpy/data_type/Finfo:\n\n    def __init__","functional/backends/numpy/data_type/broadcast_to","functional/backends/numpy/data_type/finfo","functional/backends/numpy/data_type/iinfo","functional/backends/numpy/data_type/result_type","functional/backends/numpy/device","functional/backends/numpy/device/Profiler","functional/backends/numpy/elementwise","functional/backends/numpy/elementwise/abs","functional/backends/numpy/elementwise/acos","functional/backends/numpy/elementwise/acosh","functional/backends/numpy/elementwise/asin","functional/backends/numpy/elementwise/asinh","functional/backends/numpy/elementwise/atan","functional/backends/numpy/elementwise/bitwise_and","functional/backends/numpy/elementwise/bitwise_invert","functional/backends/numpy/elementwise/bitwise_or","functional/backends/numpy/elementwise/ceil","functional/backends/numpy/elementwise/cos","functional/backends/numpy/elementwise/cosh","functional/backends/numpy/elementwise/equal","functional/backends/numpy/elementwise/erf","functional/backends/numpy/elementwise/expm1","functional/backends/numpy/elementwise/floor","functional/backends/numpy/elementwise/greater_equal","functional/backends/numpy/elementwise/isfinite","functional/backends/numpy/elementwise/isinf","functional/backends/numpy/elementwise/isnan","functional/backends/numpy/elementwise/less","functional/backends/numpy/elementwise/less_equal","functional/backends/numpy/elementwise/log","functional/backends/numpy/elementwise/log10","functional/backends/numpy/elementwise/log1p","functional/backends/numpy/elementwise/log2","functional/backends/numpy/elementwise/logaddexp","functional/backends/numpy/elementwise/logical_and","functional/backends/numpy/elementwise/logical_not","functional/backends/numpy/elementwise/logical_or","functional/backends/numpy/elementwise/logical_xor","functional/backends/numpy/elementwise/negative","functional/backends/numpy/elementwise/not_equal","functional/backends/numpy/elementwise/positive","functional/backends/numpy/elementwise/round","functional/backends/numpy/elementwise/sin","functional/backends/numpy/elementwise/sinh","functional/backends/numpy/elementwise/sqrt","functional/backends/numpy/elementwise/square","functional/backends/numpy/elementwise/tanh","functional/backends/numpy/general","functional/backends/numpy/general/cumprod","functional/backends/numpy/general/gather","functional/backends/numpy/general/gather_nd","functional/backends/numpy/general/inplace_decrement","functional/backends/numpy/general/inplace_increment","functional/backends/numpy/general/inplace_update","functional/backends/numpy/general/is_array","functional/backends/numpy/general/scatter_flat","functional/backends/numpy/general/scatter_nd","functional/backends/numpy/general/unstack","functional/backends/numpy/gradients","functional/backends/numpy/gradients/execute_with_gradients","functional/backends/numpy/gradients/is_variable","functional/backends/numpy/gradients/stop_gradient","functional/backends/numpy/gradients/variable","functional/backends/numpy/image","functional/backends/numpy/image/bilinear_resample","functional/backends/numpy/image/gradient_image","functional/backends/numpy/image/stack_images","functional/backends/numpy/layers","functional/backends/numpy/layers/conv1d","functional/backends/numpy/layers/conv1d_transpose","functional/backends/numpy/layers/conv2d","functional/backends/numpy/layers/conv2d_transpose","functional/backends/numpy/layers/conv3d","functional/backends/numpy/layers/conv3d_transpose","functional/backends/numpy/layers/depthwise_conv2d","functional/backends/numpy/linear_algebra","functional/backends/numpy/linear_algebra/cholesky","functional/backends/numpy/linear_algebra/det","functional/backends/numpy/linear_algebra/diagonal","functional/backends/numpy/linear_algebra/eigvalsh","functional/backends/numpy/linear_algebra/matmul","functional/backends/numpy/linear_algebra/matrix_norm","functional/backends/numpy/linear_algebra/matrix_transpose","functional/backends/numpy/linear_algebra/qr","functional/backends/numpy/linear_algebra/slogdet","functional/backends/numpy/linear_algebra/svd","functional/backends/numpy/linear_algebra/svdvals","functional/backends/numpy/linear_algebra/trace","functional/backends/numpy/linear_algebra/vector_norm","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/manipulation","functional/backends/numpy/manipulation/expand_dims","functional/backends/numpy/manipulation/flip","functional/backends/numpy/manipulation/permute_dims","functional/backends/numpy/manipulation/split","functional/backends/numpy/old","functional/backends/numpy/old/general","functional/backends/numpy/old/general/arange","functional/backends/numpy/old/general/argmin","functional/backends/numpy/old/general/cast","functional/backends/numpy/old/general/compile","functional/backends/numpy/old/general/concatenate","functional/backends/numpy/old/general/dtype","functional/backends/numpy/old/general/dtype_bits","functional/backends/numpy/old/general/dtype_from_str","functional/backends/numpy/old/general/dtype_to_str","functional/backends/numpy/old/general/full","functional/backends/numpy/old/general/identity","functional/backends/numpy/old/general/indices_where","functional/backends/numpy/old/general/linear_resample","functional/backends/numpy/old/general/one_hot","functional/backends/numpy/old/general/squeeze","functional/backends/numpy/old/general/transpose","functional/backends/numpy/old/general/zeros_like","functional/backends/numpy/old/linear_algebra","functional/backends/numpy/old/reductions","functional/backends/numpy/random","functional/backends/numpy/random/multinomial","functional/backends/numpy/searching","functional/backends/numpy/searching/argmax","functional/backends/numpy/set","functional/backends/numpy/sorting","functional/backends/numpy/sorting/argsort","functional/backends/numpy/statistical","functional/backends/numpy/statistical/einsum","functional/backends/numpy/statistical/max","functional/backends/numpy/statistical/mean","functional/backends/numpy/statistical/min","functional/backends/numpy/statistical/prod","functional/backends/numpy/statistical/sum","functional/backends/numpy/statistical/var","functional/backends/numpy/utility","functional/backends/numpy/utility/all","functional/backends/numpy/utility/any","functional/backends/tensorflow","functional/backends/tensorflow/activations","functional/backends/tensorflow/constants","functional/backends/tensorflow/creation","functional/backends/tensorflow/creation/array","functional/backends/tensorflow/creation/asarray","functional/backends/tensorflow/creation/empty","functional/backends/tensorflow/creation/empty_like","functional/backends/tensorflow/creation/eye","functional/backends/tensorflow/creation/full_like","functional/backends/tensorflow/creation/linspace","functional/backends/tensorflow/creation/logspace","functional/backends/tensorflow/creation/ones","functional/backends/tensorflow/creation/ones_like","functional/backends/tensorflow/creation/tril","functional/backends/tensorflow/creation/triu","functional/backends/tensorflow/creation/zeros","functional/backends/tensorflow/data_type","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__","functional/backends/tensorflow/data_type/broadcast_to ","functional/backends/tensorflow/data_type/finfo","functional/backends/tensorflow/data_type/iinfo","functional/backends/tensorflow/data_type/result_type","functional/backends/tensorflow/device","functional/backends/tensorflow/device/Profiler","functional/backends/tensorflow/device/dev","functional/backends/tensorflow/device/dev_from_str","functional/backends/tensorflow/device/dev_to_str","functional/backends/tensorflow/device/to_dev","functional/backends/tensorflow/device/tpu_is_available","functional/backends/tensorflow/elementwise","functional/backends/tensorflow/elementwise/abs","functional/backends/tensorflow/elementwise/acos","functional/backends/tensorflow/elementwise/acosh","functional/backends/tensorflow/elementwise/asin","functional/backends/tensorflow/elementwise/asinh","functional/backends/tensorflow/elementwise/atan","functional/backends/tensorflow/elementwise/bitwise_and","functional/backends/tensorflow/elementwise/bitwise_invert","functional/backends/tensorflow/elementwise/bitwise_or","functional/backends/tensorflow/elementwise/ceil","functional/backends/tensorflow/elementwise/cos","functional/backends/tensorflow/elementwise/cosh","functional/backends/tensorflow/elementwise/equal","functional/backends/tensorflow/elementwise/expm1","functional/backends/tensorflow/elementwise/floor","functional/backends/tensorflow/elementwise/greater_equal","functional/backends/tensorflow/elementwise/isfinite","functional/backends/tensorflow/elementwise/isinf","functional/backends/tensorflow/elementwise/isnan","functional/backends/tensorflow/elementwise/less","functional/backends/tensorflow/elementwise/less_equal","functional/backends/tensorflow/elementwise/log","functional/backends/tensorflow/elementwise/log10","functional/backends/tensorflow/elementwise/log1p","functional/backends/tensorflow/elementwise/log2","functional/backends/tensorflow/elementwise/logaddexp","functional/backends/tensorflow/elementwise/logical_and","functional/backends/tensorflow/elementwise/logical_not","functional/backends/tensorflow/elementwise/logical_or","functional/backends/tensorflow/elementwise/logical_xor","functional/backends/tensorflow/elementwise/negative","functional/backends/tensorflow/elementwise/not_equal","functional/backends/tensorflow/elementwise/positive","functional/backends/tensorflow/elementwise/round","functional/backends/tensorflow/elementwise/sin","functional/backends/tensorflow/elementwise/sinh","functional/backends/tensorflow/elementwise/sqrt","functional/backends/tensorflow/elementwise/square","functional/backends/tensorflow/elementwise/tanh","functional/backends/tensorflow/general","functional/backends/tensorflow/general/gather","functional/backends/tensorflow/general/gather_nd","functional/backends/tensorflow/general/inplace_decrement","functional/backends/tensorflow/general/inplace_increment","functional/backends/tensorflow/general/inplace_update","functional/backends/tensorflow/general/is_array","functional/backends/tensorflow/general/scatter_flat","functional/backends/tensorflow/general/scatter_nd","functional/backends/tensorflow/general/unstack","functional/backends/tensorflow/gradients","functional/backends/tensorflow/gradients/execute_with_gradients","functional/backends/tensorflow/gradients/is_variable","functional/backends/tensorflow/gradients/stop_gradient","functional/backends/tensorflow/gradients/variable","functional/backends/tensorflow/image","functional/backends/tensorflow/image/bilinear_resample","functional/backends/tensorflow/image/gradient_image","functional/backends/tensorflow/image/stack_images","functional/backends/tensorflow/layers","functional/backends/tensorflow/layers/conv2d","functional/backends/tensorflow/layers/conv3d","functional/backends/tensorflow/layers/depthwise_conv2d","functional/backends/tensorflow/linear_algebra","functional/backends/tensorflow/linear_algebra/cholesky","functional/backends/tensorflow/linear_algebra/det","functional/backends/tensorflow/linear_algebra/diagonal","functional/backends/tensorflow/linear_algebra/eigvalsh","functional/backends/tensorflow/linear_algebra/matmul","functional/backends/tensorflow/linear_algebra/matrix_norm","functional/backends/tensorflow/linear_algebra/matrix_transpose","functional/backends/tensorflow/linear_algebra/qr","functional/backends/tensorflow/linear_algebra/slogdet","functional/backends/tensorflow/linear_algebra/svd","functional/backends/tensorflow/linear_algebra/svdvals","functional/backends/tensorflow/linear_algebra/trace","functional/backends/tensorflow/linear_algebra/vector_norm","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/manipulation","functional/backends/tensorflow/manipulation/constant_pad","functional/backends/tensorflow/manipulation/expand_dims","functional/backends/tensorflow/manipulation/flip","functional/backends/tensorflow/manipulation/permute_dims","functional/backends/tensorflow/manipulation/split","functional/backends/tensorflow/manipulation/swapaxes","functional/backends/tensorflow/manipulation/tile","functional/backends/tensorflow/manipulation/zero_pad","functional/backends/tensorflow/old","functional/backends/tensorflow/old/general","functional/backends/tensorflow/old/general/abs","functional/backends/tensorflow/old/general/arange","functional/backends/tensorflow/old/general/argmin","functional/backends/tensorflow/old/general/cast","functional/backends/tensorflow/old/general/concatenate","functional/backends/tensorflow/old/general/dtype","functional/backends/tensorflow/old/general/dtype_bits","functional/backends/tensorflow/old/general/dtype_from_str","functional/backends/tensorflow/old/general/dtype_to_str","functional/backends/tensorflow/old/general/full","functional/backends/tensorflow/old/general/identity","functional/backends/tensorflow/old/general/linear_resample","functional/backends/tensorflow/old/general/one_hot","functional/backends/tensorflow/old/general/squeeze","functional/backends/tensorflow/old/general/zeros_like","functional/backends/tensorflow/old/linear_algebra","functional/backends/tensorflow/old/reductions","functional/backends/tensorflow/random","functional/backends/tensorflow/random/multinomial","functional/backends/tensorflow/random/randint","functional/backends/tensorflow/random/random_normal","functional/backends/tensorflow/random/random_uniform","functional/backends/tensorflow/searching","functional/backends/tensorflow/searching/argmax","functional/backends/tensorflow/set","functional/backends/tensorflow/sorting","functional/backends/tensorflow/sorting/argsort","functional/backends/tensorflow/statistical","functional/backends/tensorflow/statistical/einsum","functional/backends/tensorflow/statistical/max","functional/backends/tensorflow/statistical/mean","functional/backends/tensorflow/statistical/min","functional/backends/tensorflow/statistical/prod","functional/backends/tensorflow/statistical/sum","functional/backends/tensorflow/statistical/var","functional/backends/tensorflow/utility","functional/backends/tensorflow/utility/all","functional/backends/tensorflow/utility/any","functional/backends/torch","functional/backends/torch/activations","functional/backends/torch/activations/gelu","functional/backends/torch/activations/leaky_relu","functional/backends/torch/activations/relu","functional/backends/torch/activations/sigmoid","functional/backends/torch/activations/softmax","functional/backends/torch/activations/softplus","functional/backends/torch/activations/tanh","functional/backends/torch/constants","functional/backends/torch/converters","functional/backends/torch/converters/IvyModule","functional/backends/torch/converters/to_ivy_module","functional/backends/torch/creation","functional/backends/torch/creation/array","functional/backends/torch/creation/asarray","functional/backends/torch/creation/empty","functional/backends/torch/creation/empty_like","functional/backends/torch/creation/eye","functional/backends/torch/creation/full_like","functional/backends/torch/creation/linspace","functional/backends/torch/creation/logspace","functional/backends/torch/creation/ones","functional/backends/torch/creation/ones_like","functional/backends/torch/creation/tril","functional/backends/torch/creation/triu","functional/backends/torch/creation/zeros","functional/backends/torch/data_type","functional/backends/torch/data_type/Finfo:\n\n    def __init__","functional/backends/torch/data_type/broadcast_to","functional/backends/torch/data_type/finfo","functional/backends/torch/data_type/iinfo","functional/backends/torch/data_type/result_type","functional/backends/torch/device","functional/backends/torch/device/Profiler","functional/backends/torch/device/clear_mem_on_dev","functional/backends/torch/device/dev","functional/backends/torch/device/dev_from_str","functional/backends/torch/device/dev_to_str","functional/backends/torch/device/to_dev","functional/backends/torch/device/tpu_is_available","functional/backends/torch/elementwise","functional/backends/torch/elementwise/abs","functional/backends/torch/elementwise/acos","functional/backends/torch/elementwise/acosh","functional/backends/torch/elementwise/asin","functional/backends/torch/elementwise/asinh","functional/backends/torch/elementwise/atan","functional/backends/torch/elementwise/atan2","functional/backends/torch/elementwise/atanh","functional/backends/torch/elementwise/bitwise_and","functional/backends/torch/elementwise/bitwise_invert","functional/backends/torch/elementwise/bitwise_or","functional/backends/torch/elementwise/ceil","functional/backends/torch/elementwise/cos","functional/backends/torch/elementwise/cosh","functional/backends/torch/elementwise/equal","functional/backends/torch/elementwise/erf","functional/backends/torch/elementwise/exp","functional/backends/torch/elementwise/expm1","functional/backends/torch/elementwise/floor","functional/backends/torch/elementwise/greater_equal","functional/backends/torch/elementwise/isfinite","functional/backends/torch/elementwise/isinf","functional/backends/torch/elementwise/isnan","functional/backends/torch/elementwise/less","functional/backends/torch/elementwise/less_equal","functional/backends/torch/elementwise/log","functional/backends/torch/elementwise/log10","functional/backends/torch/elementwise/log1p","functional/backends/torch/elementwise/log2","functional/backends/torch/elementwise/logaddexp","functional/backends/torch/elementwise/logical_and","functional/backends/torch/elementwise/logical_not","functional/backends/torch/elementwise/logical_or","functional/backends/torch/elementwise/logical_xor","functional/backends/torch/elementwise/negative","functional/backends/torch/elementwise/not_equal","functional/backends/torch/elementwise/positive","functional/backends/torch/elementwise/round","functional/backends/torch/elementwise/sin","functional/backends/torch/elementwise/sinh","functional/backends/torch/elementwise/sqrt","functional/backends/torch/elementwise/square","functional/backends/torch/elementwise/tan","functional/backends/torch/elementwise/tanh","functional/backends/torch/general","functional/backends/torch/general/array_equal","functional/backends/torch/general/container_types","functional/backends/torch/general/copy_array","functional/backends/torch/general/cumprod","functional/backends/torch/general/cumsum","functional/backends/torch/general/floormod","functional/backends/torch/general/gather","functional/backends/torch/general/gather_nd","functional/backends/torch/general/inplace_decrement","functional/backends/torch/general/inplace_increment","functional/backends/torch/general/inplace_update","functional/backends/torch/general/is_array","functional/backends/torch/general/scatter_flat","functional/backends/torch/general/scatter_nd","functional/backends/torch/general/to_list","functional/backends/torch/general/to_numpy","functional/backends/torch/general/to_scalar","functional/backends/torch/general/unstack","functional/backends/torch/gradients","functional/backends/torch/gradients/execute_with_gradients","functional/backends/torch/gradients/is_variable","functional/backends/torch/gradients/stop_gradient","functional/backends/torch/gradients/variable","functional/backends/torch/gradients/variable_data","functional/backends/torch/image","functional/backends/torch/image/bilinear_resample","functional/backends/torch/image/gradient_image","functional/backends/torch/image/stack_images","functional/backends/torch/layers","functional/backends/torch/layers/conv1d","functional/backends/torch/layers/conv1d_transpose","functional/backends/torch/layers/conv2d","functional/backends/torch/layers/conv2d_transpose","functional/backends/torch/layers/conv3d","functional/backends/torch/layers/conv3d_transpose","functional/backends/torch/layers/depthwise_conv2d","functional/backends/torch/linear_algebra","functional/backends/torch/linear_algebra/cholesky","functional/backends/torch/linear_algebra/det","functional/backends/torch/linear_algebra/diagonal","functional/backends/torch/linear_algebra/eigvalsh","functional/backends/torch/linear_algebra/inv","functional/backends/torch/linear_algebra/matmul","functional/backends/torch/linear_algebra/matrix_norm","functional/backends/torch/linear_algebra/matrix_transpose","functional/backends/torch/linear_algebra/pinv","functional/backends/torch/linear_algebra/qr","functional/backends/torch/linear_algebra/slogdet","functional/backends/torch/linear_algebra/svd","functional/backends/torch/linear_algebra/svdvals","functional/backends/torch/linear_algebra/trace","functional/backends/torch/linear_algebra/vector_norm","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/manipulation","functional/backends/torch/manipulation/constant_pad","functional/backends/torch/manipulation/expand_dims","functional/backends/torch/manipulation/flip","functional/backends/torch/manipulation/permute_dims","functional/backends/torch/manipulation/repeat","functional/backends/torch/manipulation/split","functional/backends/torch/manipulation/swapaxes","functional/backends/torch/manipulation/tile","functional/backends/torch/manipulation/zero_pad","functional/backends/torch/old","functional/backends/torch/old/general","functional/backends/torch/old/general/abs","functional/backends/torch/old/general/arange","functional/backends/torch/old/general/argmin","functional/backends/torch/old/general/broadcast_to","functional/backends/torch/old/general/cast","functional/backends/torch/old/general/clip","functional/backends/torch/old/general/compile","functional/backends/torch/old/general/concatenate","functional/backends/torch/old/general/cross","functional/backends/torch/old/general/current_framework_str","functional/backends/torch/old/general/dtype","functional/backends/torch/old/general/dtype_bits","functional/backends/torch/old/general/dtype_from_str","functional/backends/torch/old/general/dtype_to_str","functional/backends/torch/old/general/full","functional/backends/torch/old/general/get_num_dims","functional/backends/torch/old/general/identity","functional/backends/torch/old/general/indices_where","functional/backends/torch/old/general/linear_resample","functional/backends/torch/old/general/maximum","functional/backends/torch/old/general/meshgrid","functional/backends/torch/old/general/minimum","functional/backends/torch/old/general/multiprocessing","functional/backends/torch/old/general/one_hot","functional/backends/torch/old/general/reshape","functional/backends/torch/old/general/shape","functional/backends/torch/old/general/squeeze","functional/backends/torch/old/general/stack","functional/backends/torch/old/general/transpose","functional/backends/torch/old/general/where","functional/backends/torch/old/general/zeros_like","functional/backends/torch/old/linear_algebra","functional/backends/torch/old/reductions","functional/backends/torch/random","functional/backends/torch/random/multinomial","functional/backends/torch/random/randint","functional/backends/torch/random/random_normal","functional/backends/torch/random/random_uniform","functional/backends/torch/random/seed","functional/backends/torch/random/shuffle","functional/backends/torch/searching","functional/backends/torch/searching/argmax","functional/backends/torch/set","functional/backends/torch/sorting","functional/backends/torch/sorting/argsort","functional/backends/torch/statistical","functional/backends/torch/statistical/einsum","functional/backends/torch/statistical/max","functional/backends/torch/statistical/mean","functional/backends/torch/statistical/min","functional/backends/torch/statistical/prod","functional/backends/torch/statistical/sum","functional/backends/torch/statistical/var","functional/backends/torch/utility","functional/backends/torch/utility/all","functional/backends/torch/utility/any","functional/ivy","functional/ivy/activations","functional/ivy/activations/gelu","functional/ivy/activations/leaky_relu","functional/ivy/activations/relu","functional/ivy/activations/sigmoid","functional/ivy/activations/softmax","functional/ivy/activations/softplus","functional/ivy/activations/tanh","functional/ivy/compilation","functional/ivy/compilation/compile","functional/ivy/constants","functional/ivy/creation","functional/ivy/creation/array","functional/ivy/creation/asarray","functional/ivy/creation/empty","functional/ivy/creation/empty_like","functional/ivy/creation/eye","functional/ivy/creation/full_like","functional/ivy/creation/linspace","functional/ivy/creation/logspace","functional/ivy/creation/ones","functional/ivy/creation/ones_like","functional/ivy/creation/tril","functional/ivy/creation/triu","functional/ivy/creation/zeros","functional/ivy/data_type","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/broadcast_to","functional/ivy/data_type/cast","functional/ivy/data_type/closest_valid_dtype","functional/ivy/data_type/convert_dtype","functional/ivy/data_type/default_dtype","functional/ivy/data_type/default_float_dtype","functional/ivy/data_type/default_int_dtype","functional/ivy/data_type/dtype","functional/ivy/data_type/dtype_bits","functional/ivy/data_type/dtype_from_str","functional/ivy/data_type/dtype_to_str","functional/ivy/data_type/finfo","functional/ivy/data_type/iinfo","functional/ivy/data_type/invalid_dtype","functional/ivy/data_type/is_float_dtype","functional/ivy/data_type/is_int_dtype","functional/ivy/data_type/result_type","functional/ivy/data_type/set_default_dtype","functional/ivy/data_type/set_default_float_dtype","functional/ivy/data_type/set_default_int_dtype","functional/ivy/data_type/unset_default_dtype","functional/ivy/data_type/unset_default_float_dtype","functional/ivy/data_type/unset_default_int_dtype","functional/ivy/data_type/valid_dtype","functional/ivy/device","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/device/DevClonedItem","functional/ivy/device/DevClonedIter","functional/ivy/device/DevClonedNest","functional/ivy/device/DevDistItem","functional/ivy/device/DevDistIter","functional/ivy/device/DevDistNest","functional/ivy/device/DevManager:\n\n    def __init__","functional/ivy/device/DevMapper","functional/ivy/device/DevMapperMultiProc","functional/ivy/device/MultiDev:\n\n    def __init__","functional/ivy/device/MultiDevItem","functional/ivy/device/MultiDevIter","functional/ivy/device/MultiDevNest","functional/ivy/device/Profiler","functional/ivy/device/clear_mem_on_dev","functional/ivy/device/default_device","functional/ivy/device/dev","functional/ivy/device/dev_clone","functional/ivy/device/dev_clone_array","functional/ivy/device/dev_clone_iter","functional/ivy/device/dev_clone_nest","functional/ivy/device/dev_dist","functional/ivy/device/dev_dist_array","functional/ivy/device/dev_dist_iter","functional/ivy/device/dev_dist_nest","functional/ivy/device/dev_from_str","functional/ivy/device/dev_to_str","functional/ivy/device/dev_unify","functional/ivy/device/dev_unify_array","functional/ivy/device/dev_unify_iter","functional/ivy/device/dev_unify_nest","functional/ivy/device/dev_util","functional/ivy/device/get_all_arrays_on_dev","functional/ivy/device/gpu_is_available","functional/ivy/device/num_arrays_on_dev","functional/ivy/device/num_cpu_cores","functional/ivy/device/num_gpus","functional/ivy/device/percent_used_mem_on_dev","functional/ivy/device/print_all_arrays_on_dev","functional/ivy/device/set_default_device","functional/ivy/device/set_split_factor","functional/ivy/device/split_factor","functional/ivy/device/split_func_call","functional/ivy/device/to_dev","functional/ivy/device/total_mem_on_dev","functional/ivy/device/tpu_is_available","functional/ivy/device/unset_default_device","functional/ivy/device/used_mem_on_dev","functional/ivy/elementwise","functional/ivy/elementwise/abs","functional/ivy/elementwise/acos","functional/ivy/elementwise/acosh","functional/ivy/elementwise/asin","functional/ivy/elementwise/asinh","functional/ivy/elementwise/atan","functional/ivy/elementwise/atan2","functional/ivy/elementwise/atanh","functional/ivy/elementwise/bitwise_and","functional/ivy/elementwise/bitwise_invert","functional/ivy/elementwise/bitwise_or","functional/ivy/elementwise/ceil","functional/ivy/elementwise/cos","functional/ivy/elementwise/cosh","functional/ivy/elementwise/divide","functional/ivy/elementwise/erf","functional/ivy/elementwise/exp","functional/ivy/elementwise/expm1","functional/ivy/elementwise/floor","functional/ivy/elementwise/greater_equal","functional/ivy/elementwise/isfinite","functional/ivy/elementwise/isinf","functional/ivy/elementwise/isnan","functional/ivy/elementwise/less","functional/ivy/elementwise/less_equal","functional/ivy/elementwise/log","functional/ivy/elementwise/log10","functional/ivy/elementwise/log1p","functional/ivy/elementwise/log2","functional/ivy/elementwise/logaddexp","functional/ivy/elementwise/logical_and","functional/ivy/elementwise/logical_not","functional/ivy/elementwise/logical_or","functional/ivy/elementwise/logical_xor","functional/ivy/elementwise/negative","functional/ivy/elementwise/not_equal","functional/ivy/elementwise/positive","functional/ivy/elementwise/round","functional/ivy/elementwise/sin","functional/ivy/elementwise/sinh","functional/ivy/elementwise/sqrt","functional/ivy/elementwise/square","functional/ivy/elementwise/tan","functional/ivy/elementwise/tanh","functional/ivy/general","functional/ivy/general/all_equal","functional/ivy/general/arg_names","functional/ivy/general/array_equal","functional/ivy/general/arrays_equal","functional/ivy/general/assert_supports_inplace","functional/ivy/general/cache_fn","functional/ivy/general/clip_matrix_norm","functional/ivy/general/clip_vector_norm","functional/ivy/general/container_types","functional/ivy/general/copy_array","functional/ivy/general/cumprod","functional/ivy/general/cumsum","functional/ivy/general/current_framework_str","functional/ivy/general/default","functional/ivy/general/einops_rearrange","functional/ivy/general/einops_reduce","functional/ivy/general/einops_repeat","functional/ivy/general/exists","functional/ivy/general/floormod","functional/ivy/general/fourier_encode","functional/ivy/general/gather","functional/ivy/general/gather_nd","functional/ivy/general/get_all_arrays_in_memory","functional/ivy/general/get_min_base","functional/ivy/general/get_min_denominator","functional/ivy/general/get_referrers_recursive","functional/ivy/general/has_nans","functional/ivy/general/inplace_arrays_supported","functional/ivy/general/inplace_decrement","functional/ivy/general/inplace_increment","functional/ivy/general/inplace_update","functional/ivy/general/inplace_variables_supported","functional/ivy/general/is_array","functional/ivy/general/match_kwargs","functional/ivy/general/num_arrays_in_memory","functional/ivy/general/print_all_arrays_in_memory","functional/ivy/general/queue_timeout","functional/ivy/general/scatter_flat","functional/ivy/general/scatter_nd","functional/ivy/general/set_min_base","functional/ivy/general/set_min_denominator","functional/ivy/general/set_queue_timeout","functional/ivy/general/set_tmp_dir","functional/ivy/general/shape_to_tuple","functional/ivy/general/stable_divide","functional/ivy/general/stable_pow","functional/ivy/general/supports_inplace","functional/ivy/general/tmp_dir","functional/ivy/general/to_list","functional/ivy/general/to_numpy","functional/ivy/general/to_scalar","functional/ivy/general/try_else_none","functional/ivy/general/unstack","functional/ivy/general/value_is_nan","functional/ivy/gradients","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/gradients/adam_step","functional/ivy/gradients/adam_update","functional/ivy/gradients/execute_with_gradients","functional/ivy/gradients/gradient_descent_update","functional/ivy/gradients/is_variable","functional/ivy/gradients/lamb_update","functional/ivy/gradients/lars_update","functional/ivy/gradients/optimizer_update","functional/ivy/gradients/set_with_grads","functional/ivy/gradients/stop_gradient","functional/ivy/gradients/unset_with_grads","functional/ivy/gradients/variable","functional/ivy/gradients/variable_data","functional/ivy/gradients/with_grads","functional/ivy/image","functional/ivy/image/bilinear_resample","functional/ivy/image/float_img_to_uint8_img","functional/ivy/image/gradient_image","functional/ivy/image/random_crop","functional/ivy/image/stack_images","functional/ivy/image/uint8_img_to_float_img","functional/ivy/layers","functional/ivy/layers/conv1d","functional/ivy/layers/conv1d_transpose","functional/ivy/layers/conv2d","functional/ivy/layers/conv2d_transpose","functional/ivy/layers/conv3d","functional/ivy/layers/conv3d_transpose","functional/ivy/layers/depthwise_conv2d","functional/ivy/layers/dropout","functional/ivy/layers/linear","functional/ivy/layers/lstm_update","functional/ivy/layers/multi_head_attention","functional/ivy/layers/scaled_dot_product_attention","functional/ivy/linear_algebra","functional/ivy/linear_algebra/cholesky","functional/ivy/linear_algebra/det","functional/ivy/linear_algebra/diagonal","functional/ivy/linear_algebra/eigvalsh","functional/ivy/linear_algebra/inv","functional/ivy/linear_algebra/matmul","functional/ivy/linear_algebra/matrix_norm","functional/ivy/linear_algebra/matrix_transpose","functional/ivy/linear_algebra/pinv","functional/ivy/linear_algebra/qr","functional/ivy/linear_algebra/slodget","functional/ivy/linear_algebra/svd","functional/ivy/linear_algebra/svdvals","functional/ivy/linear_algebra/trace","functional/ivy/linear_algebra/vector_norm","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix","functional/ivy/losses","functional/ivy/losses/binary_cross_entropy","functional/ivy/losses/cross_entropy","functional/ivy/losses/sparse_cross_entropy","functional/ivy/manipulation","functional/ivy/manipulation/constant_pad","functional/ivy/manipulation/expand_dims","functional/ivy/manipulation/flip","functional/ivy/manipulation/permute_dims","functional/ivy/manipulation/repeat","functional/ivy/manipulation/split","functional/ivy/manipulation/swapaxes","functional/ivy/manipulation/tile","functional/ivy/manipulation/zero_pad","functional/ivy/meta","functional/ivy/meta/fomaml_step","functional/ivy/meta/maml_step","functional/ivy/meta/reptile_step","functional/ivy/nest","functional/ivy/nest/all_nested_indices","functional/ivy/nest/copy_nest","functional/ivy/nest/index_nest","functional/ivy/nest/map","functional/ivy/nest/map_nest_at_index","functional/ivy/nest/map_nest_at_indices","functional/ivy/nest/multi_index_nest","functional/ivy/nest/nested_indices_where","functional/ivy/nest/nested_map","functional/ivy/nest/set_nest_at_index","functional/ivy/nest/set_nest_at_indices","functional/ivy/norms","functional/ivy/norms/layer_norm","functional/ivy/old","functional/ivy/old/dtype","functional/ivy/old/general","functional/ivy/old/general/abs","functional/ivy/old/general/arange","functional/ivy/old/general/argmin","functional/ivy/old/general/broadcast_to","functional/ivy/old/general/clip","functional/ivy/old/general/concatenate","functional/ivy/old/general/cross","functional/ivy/old/general/equal","functional/ivy/old/general/floor","functional/ivy/old/general/full","functional/ivy/old/general/get_num_dims","functional/ivy/old/general/identity","functional/ivy/old/general/indices_where","functional/ivy/old/general/linear_resample","functional/ivy/old/general/matmul","functional/ivy/old/general/maximum","functional/ivy/old/general/meshgrid","functional/ivy/old/general/minimum","functional/ivy/old/general/multiprocessing","functional/ivy/old/general/one_hot","functional/ivy/old/general/ones","functional/ivy/old/general/reshape","functional/ivy/old/general/shape","functional/ivy/old/general/squeeze","functional/ivy/old/general/stack","functional/ivy/old/general/transpose","functional/ivy/old/general/where","functional/ivy/old/general/zeros_like","functional/ivy/old/linalg","functional/ivy/old/reductions","functional/ivy/random","functional/ivy/random/multinomial","functional/ivy/random/randint","functional/ivy/random/random_normal","functional/ivy/random/random_uniform","functional/ivy/random/seed","functional/ivy/random/shuffle","functional/ivy/searching","functional/ivy/searching/argmax","functional/ivy/set","functional/ivy/sorting","functional/ivy/sorting/argsort","functional/ivy/statistical","functional/ivy/statistical/einsum","functional/ivy/statistical/max","functional/ivy/statistical/mean","functional/ivy/statistical/min","functional/ivy/statistical/prod","functional/ivy/statistical/std","functional/ivy/statistical/sum","functional/ivy/statistical/var","functional/ivy/utility","functional/ivy/utility/all","functional/ivy/utility/any","index","index_append","index_prepend","roadmap","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","verbosity","verbosity/cprint"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","background.rst","background/ml_explosion.rst","background/standardization.rst","background/why_unify.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","design.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","extensions.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/activations.rst","functional/backends/jax/activations/softmax.rst","functional/backends/jax/constants.rst","functional/backends/jax/converters.rst","functional/backends/jax/converters/IvyModule.rst","functional/backends/jax/converters/to_ivy_module.rst","functional/backends/jax/creation.rst","functional/backends/jax/creation/array.rst","functional/backends/jax/creation/asarray.rst","functional/backends/jax/creation/empty.rst","functional/backends/jax/creation/empty_like.rst","functional/backends/jax/creation/eye.rst","functional/backends/jax/creation/full_like.rst","functional/backends/jax/creation/linspace.rst","functional/backends/jax/creation/logspace.rst","functional/backends/jax/creation/ones.rst","functional/backends/jax/creation/ones_like.rst","functional/backends/jax/creation/tril.rst","functional/backends/jax/creation/triu.rst","functional/backends/jax/creation/zeros.rst","functional/backends/jax/data_type.rst","functional/backends/jax/data_type/Finfo:\n\n    def __init__.rst","functional/backends/jax/data_type/broadcast_to.rst","functional/backends/jax/data_type/finfo.rst","functional/backends/jax/data_type/iinfo.rst","functional/backends/jax/data_type/result_type.rst","functional/backends/jax/device.rst","functional/backends/jax/device/Profiler.rst","functional/backends/jax/device/dev.rst","functional/backends/jax/device/dev_from_str.rst","functional/backends/jax/device/dev_to_str.rst","functional/backends/jax/device/num_gpus.rst","functional/backends/jax/device/to_dev.rst","functional/backends/jax/elementwise.rst","functional/backends/jax/elementwise/abs.rst","functional/backends/jax/elementwise/acos.rst","functional/backends/jax/elementwise/acosh.rst","functional/backends/jax/elementwise/asin.rst","functional/backends/jax/elementwise/asinh.rst","functional/backends/jax/elementwise/atan.rst","functional/backends/jax/elementwise/bitwise_and.rst","functional/backends/jax/elementwise/bitwise_invert.rst","functional/backends/jax/elementwise/bitwise_or.rst","functional/backends/jax/elementwise/ceil.rst","functional/backends/jax/elementwise/cos.rst","functional/backends/jax/elementwise/cosh.rst","functional/backends/jax/elementwise/equal.rst","functional/backends/jax/elementwise/expm1.rst","functional/backends/jax/elementwise/floor.rst","functional/backends/jax/elementwise/greater_equal.rst","functional/backends/jax/elementwise/isfinite.rst","functional/backends/jax/elementwise/isinf.rst","functional/backends/jax/elementwise/isnan.rst","functional/backends/jax/elementwise/less.rst","functional/backends/jax/elementwise/less_equal.rst","functional/backends/jax/elementwise/log.rst","functional/backends/jax/elementwise/log10.rst","functional/backends/jax/elementwise/log1p.rst","functional/backends/jax/elementwise/log2.rst","functional/backends/jax/elementwise/logaddexp.rst","functional/backends/jax/elementwise/logical_and.rst","functional/backends/jax/elementwise/logical_not.rst","functional/backends/jax/elementwise/logical_or.rst","functional/backends/jax/elementwise/logical_xor.rst","functional/backends/jax/elementwise/negative.rst","functional/backends/jax/elementwise/not_equal.rst","functional/backends/jax/elementwise/positive.rst","functional/backends/jax/elementwise/round.rst","functional/backends/jax/elementwise/sin.rst","functional/backends/jax/elementwise/sinh.rst","functional/backends/jax/elementwise/sqrt.rst","functional/backends/jax/elementwise/square.rst","functional/backends/jax/elementwise/tanh.rst","functional/backends/jax/general.rst","functional/backends/jax/general/cumprod.rst","functional/backends/jax/general/gather.rst","functional/backends/jax/general/gather_nd.rst","functional/backends/jax/general/inplace_decrement.rst","functional/backends/jax/general/inplace_increment.rst","functional/backends/jax/general/inplace_update.rst","functional/backends/jax/general/is_array.rst","functional/backends/jax/general/scatter_flat.rst","functional/backends/jax/general/scatter_nd.rst","functional/backends/jax/general/unstack.rst","functional/backends/jax/gradients.rst","functional/backends/jax/gradients/execute_with_gradients.rst","functional/backends/jax/gradients/is_variable.rst","functional/backends/jax/image.rst","functional/backends/jax/image/bilinear_resample.rst","functional/backends/jax/image/gradient_image.rst","functional/backends/jax/image/stack_images.rst","functional/backends/jax/layers.rst","functional/backends/jax/layers/conv1d.rst","functional/backends/jax/layers/conv1d_transpose.rst","functional/backends/jax/layers/conv2d.rst","functional/backends/jax/layers/conv2d_transpose.rst","functional/backends/jax/layers/conv3d.rst","functional/backends/jax/layers/conv3d_transpose.rst","functional/backends/jax/layers/depthwise_conv2d.rst","functional/backends/jax/linear_algebra.rst","functional/backends/jax/linear_algebra/cholesky.rst","functional/backends/jax/linear_algebra/det.rst","functional/backends/jax/linear_algebra/diagonal.rst","functional/backends/jax/linear_algebra/eigvalsh.rst","functional/backends/jax/linear_algebra/matmul.rst","functional/backends/jax/linear_algebra/matrix_norm.rst","functional/backends/jax/linear_algebra/matrix_transpose.rst","functional/backends/jax/linear_algebra/qr.rst","functional/backends/jax/linear_algebra/slogdet.rst","functional/backends/jax/linear_algebra/svd.rst","functional/backends/jax/linear_algebra/svdvals.rst","functional/backends/jax/linear_algebra/trace.rst","functional/backends/jax/linear_algebra/vector_norm.rst","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/manipulation.rst","functional/backends/jax/manipulation/expand_dims.rst","functional/backends/jax/manipulation/flip.rst","functional/backends/jax/manipulation/permute_dims.rst","functional/backends/jax/manipulation/split.rst","functional/backends/jax/old.rst","functional/backends/jax/old/general.rst","functional/backends/jax/old/general/arange.rst","functional/backends/jax/old/general/argmin.rst","functional/backends/jax/old/general/cast.rst","functional/backends/jax/old/general/concatenate.rst","functional/backends/jax/old/general/dtype.rst","functional/backends/jax/old/general/dtype_bits.rst","functional/backends/jax/old/general/dtype_from_str.rst","functional/backends/jax/old/general/dtype_to_str.rst","functional/backends/jax/old/general/full.rst","functional/backends/jax/old/general/identity.rst","functional/backends/jax/old/general/indices_where.rst","functional/backends/jax/old/general/linear_resample.rst","functional/backends/jax/old/general/one_hot.rst","functional/backends/jax/old/general/squeeze.rst","functional/backends/jax/old/general/transpose.rst","functional/backends/jax/old/general/zeros_like.rst","functional/backends/jax/old/linear_algebra.rst","functional/backends/jax/old/reductions.rst","functional/backends/jax/random.rst","functional/backends/jax/random/multinomial.rst","functional/backends/jax/random/randint.rst","functional/backends/jax/random/random_normal.rst","functional/backends/jax/random/random_uniform.rst","functional/backends/jax/random/seed.rst","functional/backends/jax/random/shuffle.rst","functional/backends/jax/searching.rst","functional/backends/jax/searching/argmax.rst","functional/backends/jax/set.rst","functional/backends/jax/sorting.rst","functional/backends/jax/sorting/argsort.rst","functional/backends/jax/statistical.rst","functional/backends/jax/statistical/einsum.rst","functional/backends/jax/statistical/max.rst","functional/backends/jax/statistical/mean.rst","functional/backends/jax/statistical/min.rst","functional/backends/jax/statistical/prod.rst","functional/backends/jax/statistical/sum.rst","functional/backends/jax/statistical/var.rst","functional/backends/jax/utility.rst","functional/backends/jax/utility/all.rst","functional/backends/jax/utility/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/activations.rst","functional/backends/mxnet/activations/gelu.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/constants.rst","functional/backends/mxnet/creation.rst","functional/backends/mxnet/creation/array.rst","functional/backends/mxnet/creation/asarray.rst","functional/backends/mxnet/creation/empty.rst","functional/backends/mxnet/creation/eye.rst","functional/backends/mxnet/creation/linspace.rst","functional/backends/mxnet/creation/logspace.rst","functional/backends/mxnet/creation/ones.rst","functional/backends/mxnet/creation/ones_like.rst","functional/backends/mxnet/creation/tril.rst","functional/backends/mxnet/creation/zeros.rst","functional/backends/mxnet/data_type.rst","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/data_type/finfo.rst","functional/backends/mxnet/data_type/iinfo.rst","functional/backends/mxnet/device.rst","functional/backends/mxnet/device/Profiler.rst","functional/backends/mxnet/device/dev.rst","functional/backends/mxnet/device/dev_from_str.rst","functional/backends/mxnet/device/dev_to_str.rst","functional/backends/mxnet/device/to_dev.rst","functional/backends/mxnet/elementwise.rst","functional/backends/mxnet/elementwise/acos.rst","functional/backends/mxnet/elementwise/acosh.rst","functional/backends/mxnet/elementwise/bitwise_and.rst","functional/backends/mxnet/elementwise/bitwise_or.rst","functional/backends/mxnet/elementwise/ceil.rst","functional/backends/mxnet/elementwise/floor.rst","functional/backends/mxnet/elementwise/greater_equal.rst","functional/backends/mxnet/elementwise/isfinite.rst","functional/backends/mxnet/elementwise/isinf.rst","functional/backends/mxnet/elementwise/isnan.rst","functional/backends/mxnet/elementwise/less.rst","functional/backends/mxnet/elementwise/logical_and.rst","functional/backends/mxnet/elementwise/logical_not.rst","functional/backends/mxnet/elementwise/logical_or.rst","functional/backends/mxnet/elementwise/logical_xor.rst","functional/backends/mxnet/elementwise/negative.rst","functional/backends/mxnet/elementwise/round.rst","functional/backends/mxnet/elementwise/sin.rst","functional/backends/mxnet/elementwise/sinh.rst","functional/backends/mxnet/elementwise/sqrt.rst","functional/backends/mxnet/elementwise/square.rst","functional/backends/mxnet/elementwise/tanh.rst","functional/backends/mxnet/general.rst","functional/backends/mxnet/general/array_equal.rst","functional/backends/mxnet/general/cumprod.rst","functional/backends/mxnet/general/floormod.rst","functional/backends/mxnet/general/gather.rst","functional/backends/mxnet/general/gather_nd.rst","functional/backends/mxnet/general/inplace_decrement.rst","functional/backends/mxnet/general/inplace_increment.rst","functional/backends/mxnet/general/inplace_update.rst","functional/backends/mxnet/general/is_array.rst","functional/backends/mxnet/general/scatter_flat.rst","functional/backends/mxnet/general/scatter_nd.rst","functional/backends/mxnet/general/unstack.rst","functional/backends/mxnet/gradients.rst","functional/backends/mxnet/gradients/execute_with_gradients.rst","functional/backends/mxnet/gradients/is_variable.rst","functional/backends/mxnet/gradients/stop_gradient.rst","functional/backends/mxnet/gradients/variable.rst","functional/backends/mxnet/image.rst","functional/backends/mxnet/image/bilinear_resample.rst","functional/backends/mxnet/image/gradient_image.rst","functional/backends/mxnet/image/stack_images.rst","functional/backends/mxnet/layers.rst","functional/backends/mxnet/layers/conv1d.rst","functional/backends/mxnet/layers/conv1d_transpose.rst","functional/backends/mxnet/layers/conv2d.rst","functional/backends/mxnet/layers/conv2d_transpose.rst","functional/backends/mxnet/layers/conv3d.rst","functional/backends/mxnet/layers/conv3d_transpose.rst","functional/backends/mxnet/layers/depthwise_conv2d.rst","functional/backends/mxnet/linear_algebra.rst","functional/backends/mxnet/linear_algebra/cholesky.rst","functional/backends/mxnet/linear_algebra/det.rst","functional/backends/mxnet/linear_algebra/diagonal.rst","functional/backends/mxnet/linear_algebra/eigvalsh.rst","functional/backends/mxnet/linear_algebra/matrix_norm.rst","functional/backends/mxnet/linear_algebra/pinv.rst","functional/backends/mxnet/linear_algebra/qr.rst","functional/backends/mxnet/linear_algebra/slogdet.rst","functional/backends/mxnet/linear_algebra/svd.rst","functional/backends/mxnet/linear_algebra/trace.rst","functional/backends/mxnet/linear_algebra/vector_norm.rst","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/manipulation.rst","functional/backends/mxnet/manipulation/constant_pad.rst","functional/backends/mxnet/manipulation/expand_dims.rst","functional/backends/mxnet/manipulation/flip.rst","functional/backends/mxnet/manipulation/repeat.rst","functional/backends/mxnet/manipulation/split.rst","functional/backends/mxnet/manipulation/tile.rst","functional/backends/mxnet/manipulation/zero_pad.rst","functional/backends/mxnet/old.rst","functional/backends/mxnet/old/general.rst","functional/backends/mxnet/old/general/abs.rst","functional/backends/mxnet/old/general/arange.rst","functional/backends/mxnet/old/general/broadcast_to.rst","functional/backends/mxnet/old/general/cast.rst","functional/backends/mxnet/old/general/clip.rst","functional/backends/mxnet/old/general/compile.rst","functional/backends/mxnet/old/general/concatenate.rst","functional/backends/mxnet/old/general/cross.rst","functional/backends/mxnet/old/general/dtype.rst","functional/backends/mxnet/old/general/dtype_bits.rst","functional/backends/mxnet/old/general/dtype_from_str.rst","functional/backends/mxnet/old/general/dtype_to_str.rst","functional/backends/mxnet/old/general/full.rst","functional/backends/mxnet/old/general/identity.rst","functional/backends/mxnet/old/general/indices_where.rst","functional/backends/mxnet/old/general/linear_resample.rst","functional/backends/mxnet/old/general/matmul.rst","functional/backends/mxnet/old/general/meshgrid.rst","functional/backends/mxnet/old/general/squeeze.rst","functional/backends/mxnet/old/general/stack.rst","functional/backends/mxnet/old/general/transpose.rst","functional/backends/mxnet/old/general/where.rst","functional/backends/mxnet/old/general/zeros_like.rst","functional/backends/mxnet/old/linear_algebra.rst","functional/backends/mxnet/old/reductions.rst","functional/backends/mxnet/random.rst","functional/backends/mxnet/random/multinomial.rst","functional/backends/mxnet/random/randint.rst","functional/backends/mxnet/random/random_normal.rst","functional/backends/mxnet/random/random_uniform.rst","functional/backends/mxnet/searching.rst","functional/backends/mxnet/searching/argmax.rst","functional/backends/mxnet/set.rst","functional/backends/mxnet/sorting.rst","functional/backends/mxnet/sorting/argsort.rst","functional/backends/mxnet/statistical.rst","functional/backends/mxnet/statistical/einsum.rst","functional/backends/mxnet/statistical/max.rst","functional/backends/mxnet/statistical/mean.rst","functional/backends/mxnet/statistical/min.rst","functional/backends/mxnet/statistical/prod.rst","functional/backends/mxnet/statistical/std.rst","functional/backends/mxnet/statistical/sum.rst","functional/backends/mxnet/statistical/var.rst","functional/backends/mxnet/utility.rst","functional/backends/mxnet/utility/all.rst","functional/backends/mxnet/utility/any.rst","functional/backends/numpy.rst","functional/backends/numpy/activations.rst","functional/backends/numpy/activations/gelu.rst","functional/backends/numpy/activations/softmax.rst","functional/backends/numpy/constants.rst","functional/backends/numpy/creation.rst","functional/backends/numpy/creation/array.rst","functional/backends/numpy/creation/asarray.rst","functional/backends/numpy/creation/empty.rst","functional/backends/numpy/creation/empty_like.rst","functional/backends/numpy/creation/eye.rst","functional/backends/numpy/creation/full_like.rst","functional/backends/numpy/creation/linspace.rst","functional/backends/numpy/creation/logspace.rst","functional/backends/numpy/creation/ones.rst","functional/backends/numpy/creation/ones_like.rst","functional/backends/numpy/creation/tril.rst","functional/backends/numpy/creation/triu.rst","functional/backends/numpy/creation/zeros.rst","functional/backends/numpy/data_type.rst","functional/backends/numpy/data_type/Finfo:\n\n    def __init__.rst","functional/backends/numpy/data_type/broadcast_to.rst","functional/backends/numpy/data_type/finfo.rst","functional/backends/numpy/data_type/iinfo.rst","functional/backends/numpy/data_type/result_type.rst","functional/backends/numpy/device.rst","functional/backends/numpy/device/Profiler.rst","functional/backends/numpy/elementwise.rst","functional/backends/numpy/elementwise/abs.rst","functional/backends/numpy/elementwise/acos.rst","functional/backends/numpy/elementwise/acosh.rst","functional/backends/numpy/elementwise/asin.rst","functional/backends/numpy/elementwise/asinh.rst","functional/backends/numpy/elementwise/atan.rst","functional/backends/numpy/elementwise/bitwise_and.rst","functional/backends/numpy/elementwise/bitwise_invert.rst","functional/backends/numpy/elementwise/bitwise_or.rst","functional/backends/numpy/elementwise/ceil.rst","functional/backends/numpy/elementwise/cos.rst","functional/backends/numpy/elementwise/cosh.rst","functional/backends/numpy/elementwise/equal.rst","functional/backends/numpy/elementwise/erf.rst","functional/backends/numpy/elementwise/expm1.rst","functional/backends/numpy/elementwise/floor.rst","functional/backends/numpy/elementwise/greater_equal.rst","functional/backends/numpy/elementwise/isfinite.rst","functional/backends/numpy/elementwise/isinf.rst","functional/backends/numpy/elementwise/isnan.rst","functional/backends/numpy/elementwise/less.rst","functional/backends/numpy/elementwise/less_equal.rst","functional/backends/numpy/elementwise/log.rst","functional/backends/numpy/elementwise/log10.rst","functional/backends/numpy/elementwise/log1p.rst","functional/backends/numpy/elementwise/log2.rst","functional/backends/numpy/elementwise/logaddexp.rst","functional/backends/numpy/elementwise/logical_and.rst","functional/backends/numpy/elementwise/logical_not.rst","functional/backends/numpy/elementwise/logical_or.rst","functional/backends/numpy/elementwise/logical_xor.rst","functional/backends/numpy/elementwise/negative.rst","functional/backends/numpy/elementwise/not_equal.rst","functional/backends/numpy/elementwise/positive.rst","functional/backends/numpy/elementwise/round.rst","functional/backends/numpy/elementwise/sin.rst","functional/backends/numpy/elementwise/sinh.rst","functional/backends/numpy/elementwise/sqrt.rst","functional/backends/numpy/elementwise/square.rst","functional/backends/numpy/elementwise/tanh.rst","functional/backends/numpy/general.rst","functional/backends/numpy/general/cumprod.rst","functional/backends/numpy/general/gather.rst","functional/backends/numpy/general/gather_nd.rst","functional/backends/numpy/general/inplace_decrement.rst","functional/backends/numpy/general/inplace_increment.rst","functional/backends/numpy/general/inplace_update.rst","functional/backends/numpy/general/is_array.rst","functional/backends/numpy/general/scatter_flat.rst","functional/backends/numpy/general/scatter_nd.rst","functional/backends/numpy/general/unstack.rst","functional/backends/numpy/gradients.rst","functional/backends/numpy/gradients/execute_with_gradients.rst","functional/backends/numpy/gradients/is_variable.rst","functional/backends/numpy/gradients/stop_gradient.rst","functional/backends/numpy/gradients/variable.rst","functional/backends/numpy/image.rst","functional/backends/numpy/image/bilinear_resample.rst","functional/backends/numpy/image/gradient_image.rst","functional/backends/numpy/image/stack_images.rst","functional/backends/numpy/layers.rst","functional/backends/numpy/layers/conv1d.rst","functional/backends/numpy/layers/conv1d_transpose.rst","functional/backends/numpy/layers/conv2d.rst","functional/backends/numpy/layers/conv2d_transpose.rst","functional/backends/numpy/layers/conv3d.rst","functional/backends/numpy/layers/conv3d_transpose.rst","functional/backends/numpy/layers/depthwise_conv2d.rst","functional/backends/numpy/linear_algebra.rst","functional/backends/numpy/linear_algebra/cholesky.rst","functional/backends/numpy/linear_algebra/det.rst","functional/backends/numpy/linear_algebra/diagonal.rst","functional/backends/numpy/linear_algebra/eigvalsh.rst","functional/backends/numpy/linear_algebra/matmul.rst","functional/backends/numpy/linear_algebra/matrix_norm.rst","functional/backends/numpy/linear_algebra/matrix_transpose.rst","functional/backends/numpy/linear_algebra/qr.rst","functional/backends/numpy/linear_algebra/slogdet.rst","functional/backends/numpy/linear_algebra/svd.rst","functional/backends/numpy/linear_algebra/svdvals.rst","functional/backends/numpy/linear_algebra/trace.rst","functional/backends/numpy/linear_algebra/vector_norm.rst","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/manipulation.rst","functional/backends/numpy/manipulation/expand_dims.rst","functional/backends/numpy/manipulation/flip.rst","functional/backends/numpy/manipulation/permute_dims.rst","functional/backends/numpy/manipulation/split.rst","functional/backends/numpy/old.rst","functional/backends/numpy/old/general.rst","functional/backends/numpy/old/general/arange.rst","functional/backends/numpy/old/general/argmin.rst","functional/backends/numpy/old/general/cast.rst","functional/backends/numpy/old/general/compile.rst","functional/backends/numpy/old/general/concatenate.rst","functional/backends/numpy/old/general/dtype.rst","functional/backends/numpy/old/general/dtype_bits.rst","functional/backends/numpy/old/general/dtype_from_str.rst","functional/backends/numpy/old/general/dtype_to_str.rst","functional/backends/numpy/old/general/full.rst","functional/backends/numpy/old/general/identity.rst","functional/backends/numpy/old/general/indices_where.rst","functional/backends/numpy/old/general/linear_resample.rst","functional/backends/numpy/old/general/one_hot.rst","functional/backends/numpy/old/general/squeeze.rst","functional/backends/numpy/old/general/transpose.rst","functional/backends/numpy/old/general/zeros_like.rst","functional/backends/numpy/old/linear_algebra.rst","functional/backends/numpy/old/reductions.rst","functional/backends/numpy/random.rst","functional/backends/numpy/random/multinomial.rst","functional/backends/numpy/searching.rst","functional/backends/numpy/searching/argmax.rst","functional/backends/numpy/set.rst","functional/backends/numpy/sorting.rst","functional/backends/numpy/sorting/argsort.rst","functional/backends/numpy/statistical.rst","functional/backends/numpy/statistical/einsum.rst","functional/backends/numpy/statistical/max.rst","functional/backends/numpy/statistical/mean.rst","functional/backends/numpy/statistical/min.rst","functional/backends/numpy/statistical/prod.rst","functional/backends/numpy/statistical/sum.rst","functional/backends/numpy/statistical/var.rst","functional/backends/numpy/utility.rst","functional/backends/numpy/utility/all.rst","functional/backends/numpy/utility/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/activations.rst","functional/backends/tensorflow/constants.rst","functional/backends/tensorflow/creation.rst","functional/backends/tensorflow/creation/array.rst","functional/backends/tensorflow/creation/asarray.rst","functional/backends/tensorflow/creation/empty.rst","functional/backends/tensorflow/creation/empty_like.rst","functional/backends/tensorflow/creation/eye.rst","functional/backends/tensorflow/creation/full_like.rst","functional/backends/tensorflow/creation/linspace.rst","functional/backends/tensorflow/creation/logspace.rst","functional/backends/tensorflow/creation/ones.rst","functional/backends/tensorflow/creation/ones_like.rst","functional/backends/tensorflow/creation/tril.rst","functional/backends/tensorflow/creation/triu.rst","functional/backends/tensorflow/creation/zeros.rst","functional/backends/tensorflow/data_type.rst","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/data_type/broadcast_to .rst","functional/backends/tensorflow/data_type/finfo.rst","functional/backends/tensorflow/data_type/iinfo.rst","functional/backends/tensorflow/data_type/result_type.rst","functional/backends/tensorflow/device.rst","functional/backends/tensorflow/device/Profiler.rst","functional/backends/tensorflow/device/dev.rst","functional/backends/tensorflow/device/dev_from_str.rst","functional/backends/tensorflow/device/dev_to_str.rst","functional/backends/tensorflow/device/to_dev.rst","functional/backends/tensorflow/device/tpu_is_available.rst","functional/backends/tensorflow/elementwise.rst","functional/backends/tensorflow/elementwise/abs.rst","functional/backends/tensorflow/elementwise/acos.rst","functional/backends/tensorflow/elementwise/acosh.rst","functional/backends/tensorflow/elementwise/asin.rst","functional/backends/tensorflow/elementwise/asinh.rst","functional/backends/tensorflow/elementwise/atan.rst","functional/backends/tensorflow/elementwise/bitwise_and.rst","functional/backends/tensorflow/elementwise/bitwise_invert.rst","functional/backends/tensorflow/elementwise/bitwise_or.rst","functional/backends/tensorflow/elementwise/ceil.rst","functional/backends/tensorflow/elementwise/cos.rst","functional/backends/tensorflow/elementwise/cosh.rst","functional/backends/tensorflow/elementwise/equal.rst","functional/backends/tensorflow/elementwise/expm1.rst","functional/backends/tensorflow/elementwise/floor.rst","functional/backends/tensorflow/elementwise/greater_equal.rst","functional/backends/tensorflow/elementwise/isfinite.rst","functional/backends/tensorflow/elementwise/isinf.rst","functional/backends/tensorflow/elementwise/isnan.rst","functional/backends/tensorflow/elementwise/less.rst","functional/backends/tensorflow/elementwise/less_equal.rst","functional/backends/tensorflow/elementwise/log.rst","functional/backends/tensorflow/elementwise/log10.rst","functional/backends/tensorflow/elementwise/log1p.rst","functional/backends/tensorflow/elementwise/log2.rst","functional/backends/tensorflow/elementwise/logaddexp.rst","functional/backends/tensorflow/elementwise/logical_and.rst","functional/backends/tensorflow/elementwise/logical_not.rst","functional/backends/tensorflow/elementwise/logical_or.rst","functional/backends/tensorflow/elementwise/logical_xor.rst","functional/backends/tensorflow/elementwise/negative.rst","functional/backends/tensorflow/elementwise/not_equal.rst","functional/backends/tensorflow/elementwise/positive.rst","functional/backends/tensorflow/elementwise/round.rst","functional/backends/tensorflow/elementwise/sin.rst","functional/backends/tensorflow/elementwise/sinh.rst","functional/backends/tensorflow/elementwise/sqrt.rst","functional/backends/tensorflow/elementwise/square.rst","functional/backends/tensorflow/elementwise/tanh.rst","functional/backends/tensorflow/general.rst","functional/backends/tensorflow/general/gather.rst","functional/backends/tensorflow/general/gather_nd.rst","functional/backends/tensorflow/general/inplace_decrement.rst","functional/backends/tensorflow/general/inplace_increment.rst","functional/backends/tensorflow/general/inplace_update.rst","functional/backends/tensorflow/general/is_array.rst","functional/backends/tensorflow/general/scatter_flat.rst","functional/backends/tensorflow/general/scatter_nd.rst","functional/backends/tensorflow/general/unstack.rst","functional/backends/tensorflow/gradients.rst","functional/backends/tensorflow/gradients/execute_with_gradients.rst","functional/backends/tensorflow/gradients/is_variable.rst","functional/backends/tensorflow/gradients/stop_gradient.rst","functional/backends/tensorflow/gradients/variable.rst","functional/backends/tensorflow/image.rst","functional/backends/tensorflow/image/bilinear_resample.rst","functional/backends/tensorflow/image/gradient_image.rst","functional/backends/tensorflow/image/stack_images.rst","functional/backends/tensorflow/layers.rst","functional/backends/tensorflow/layers/conv2d.rst","functional/backends/tensorflow/layers/conv3d.rst","functional/backends/tensorflow/layers/depthwise_conv2d.rst","functional/backends/tensorflow/linear_algebra.rst","functional/backends/tensorflow/linear_algebra/cholesky.rst","functional/backends/tensorflow/linear_algebra/det.rst","functional/backends/tensorflow/linear_algebra/diagonal.rst","functional/backends/tensorflow/linear_algebra/eigvalsh.rst","functional/backends/tensorflow/linear_algebra/matmul.rst","functional/backends/tensorflow/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/linear_algebra/matrix_transpose.rst","functional/backends/tensorflow/linear_algebra/qr.rst","functional/backends/tensorflow/linear_algebra/slogdet.rst","functional/backends/tensorflow/linear_algebra/svd.rst","functional/backends/tensorflow/linear_algebra/svdvals.rst","functional/backends/tensorflow/linear_algebra/trace.rst","functional/backends/tensorflow/linear_algebra/vector_norm.rst","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/manipulation.rst","functional/backends/tensorflow/manipulation/constant_pad.rst","functional/backends/tensorflow/manipulation/expand_dims.rst","functional/backends/tensorflow/manipulation/flip.rst","functional/backends/tensorflow/manipulation/permute_dims.rst","functional/backends/tensorflow/manipulation/split.rst","functional/backends/tensorflow/manipulation/swapaxes.rst","functional/backends/tensorflow/manipulation/tile.rst","functional/backends/tensorflow/manipulation/zero_pad.rst","functional/backends/tensorflow/old.rst","functional/backends/tensorflow/old/general.rst","functional/backends/tensorflow/old/general/abs.rst","functional/backends/tensorflow/old/general/arange.rst","functional/backends/tensorflow/old/general/argmin.rst","functional/backends/tensorflow/old/general/cast.rst","functional/backends/tensorflow/old/general/concatenate.rst","functional/backends/tensorflow/old/general/dtype.rst","functional/backends/tensorflow/old/general/dtype_bits.rst","functional/backends/tensorflow/old/general/dtype_from_str.rst","functional/backends/tensorflow/old/general/dtype_to_str.rst","functional/backends/tensorflow/old/general/full.rst","functional/backends/tensorflow/old/general/identity.rst","functional/backends/tensorflow/old/general/linear_resample.rst","functional/backends/tensorflow/old/general/one_hot.rst","functional/backends/tensorflow/old/general/squeeze.rst","functional/backends/tensorflow/old/general/zeros_like.rst","functional/backends/tensorflow/old/linear_algebra.rst","functional/backends/tensorflow/old/reductions.rst","functional/backends/tensorflow/random.rst","functional/backends/tensorflow/random/multinomial.rst","functional/backends/tensorflow/random/randint.rst","functional/backends/tensorflow/random/random_normal.rst","functional/backends/tensorflow/random/random_uniform.rst","functional/backends/tensorflow/searching.rst","functional/backends/tensorflow/searching/argmax.rst","functional/backends/tensorflow/set.rst","functional/backends/tensorflow/sorting.rst","functional/backends/tensorflow/sorting/argsort.rst","functional/backends/tensorflow/statistical.rst","functional/backends/tensorflow/statistical/einsum.rst","functional/backends/tensorflow/statistical/max.rst","functional/backends/tensorflow/statistical/mean.rst","functional/backends/tensorflow/statistical/min.rst","functional/backends/tensorflow/statistical/prod.rst","functional/backends/tensorflow/statistical/sum.rst","functional/backends/tensorflow/statistical/var.rst","functional/backends/tensorflow/utility.rst","functional/backends/tensorflow/utility/all.rst","functional/backends/tensorflow/utility/any.rst","functional/backends/torch.rst","functional/backends/torch/activations.rst","functional/backends/torch/activations/gelu.rst","functional/backends/torch/activations/leaky_relu.rst","functional/backends/torch/activations/relu.rst","functional/backends/torch/activations/sigmoid.rst","functional/backends/torch/activations/softmax.rst","functional/backends/torch/activations/softplus.rst","functional/backends/torch/activations/tanh.rst","functional/backends/torch/constants.rst","functional/backends/torch/converters.rst","functional/backends/torch/converters/IvyModule.rst","functional/backends/torch/converters/to_ivy_module.rst","functional/backends/torch/creation.rst","functional/backends/torch/creation/array.rst","functional/backends/torch/creation/asarray.rst","functional/backends/torch/creation/empty.rst","functional/backends/torch/creation/empty_like.rst","functional/backends/torch/creation/eye.rst","functional/backends/torch/creation/full_like.rst","functional/backends/torch/creation/linspace.rst","functional/backends/torch/creation/logspace.rst","functional/backends/torch/creation/ones.rst","functional/backends/torch/creation/ones_like.rst","functional/backends/torch/creation/tril.rst","functional/backends/torch/creation/triu.rst","functional/backends/torch/creation/zeros.rst","functional/backends/torch/data_type.rst","functional/backends/torch/data_type/Finfo:\n\n    def __init__.rst","functional/backends/torch/data_type/broadcast_to.rst","functional/backends/torch/data_type/finfo.rst","functional/backends/torch/data_type/iinfo.rst","functional/backends/torch/data_type/result_type.rst","functional/backends/torch/device.rst","functional/backends/torch/device/Profiler.rst","functional/backends/torch/device/clear_mem_on_dev.rst","functional/backends/torch/device/dev.rst","functional/backends/torch/device/dev_from_str.rst","functional/backends/torch/device/dev_to_str.rst","functional/backends/torch/device/to_dev.rst","functional/backends/torch/device/tpu_is_available.rst","functional/backends/torch/elementwise.rst","functional/backends/torch/elementwise/abs.rst","functional/backends/torch/elementwise/acos.rst","functional/backends/torch/elementwise/acosh.rst","functional/backends/torch/elementwise/asin.rst","functional/backends/torch/elementwise/asinh.rst","functional/backends/torch/elementwise/atan.rst","functional/backends/torch/elementwise/atan2.rst","functional/backends/torch/elementwise/atanh.rst","functional/backends/torch/elementwise/bitwise_and.rst","functional/backends/torch/elementwise/bitwise_invert.rst","functional/backends/torch/elementwise/bitwise_or.rst","functional/backends/torch/elementwise/ceil.rst","functional/backends/torch/elementwise/cos.rst","functional/backends/torch/elementwise/cosh.rst","functional/backends/torch/elementwise/equal.rst","functional/backends/torch/elementwise/erf.rst","functional/backends/torch/elementwise/exp.rst","functional/backends/torch/elementwise/expm1.rst","functional/backends/torch/elementwise/floor.rst","functional/backends/torch/elementwise/greater_equal.rst","functional/backends/torch/elementwise/isfinite.rst","functional/backends/torch/elementwise/isinf.rst","functional/backends/torch/elementwise/isnan.rst","functional/backends/torch/elementwise/less.rst","functional/backends/torch/elementwise/less_equal.rst","functional/backends/torch/elementwise/log.rst","functional/backends/torch/elementwise/log10.rst","functional/backends/torch/elementwise/log1p.rst","functional/backends/torch/elementwise/log2.rst","functional/backends/torch/elementwise/logaddexp.rst","functional/backends/torch/elementwise/logical_and.rst","functional/backends/torch/elementwise/logical_not.rst","functional/backends/torch/elementwise/logical_or.rst","functional/backends/torch/elementwise/logical_xor.rst","functional/backends/torch/elementwise/negative.rst","functional/backends/torch/elementwise/not_equal.rst","functional/backends/torch/elementwise/positive.rst","functional/backends/torch/elementwise/round.rst","functional/backends/torch/elementwise/sin.rst","functional/backends/torch/elementwise/sinh.rst","functional/backends/torch/elementwise/sqrt.rst","functional/backends/torch/elementwise/square.rst","functional/backends/torch/elementwise/tan.rst","functional/backends/torch/elementwise/tanh.rst","functional/backends/torch/general.rst","functional/backends/torch/general/array_equal.rst","functional/backends/torch/general/container_types.rst","functional/backends/torch/general/copy_array.rst","functional/backends/torch/general/cumprod.rst","functional/backends/torch/general/cumsum.rst","functional/backends/torch/general/floormod.rst","functional/backends/torch/general/gather.rst","functional/backends/torch/general/gather_nd.rst","functional/backends/torch/general/inplace_decrement.rst","functional/backends/torch/general/inplace_increment.rst","functional/backends/torch/general/inplace_update.rst","functional/backends/torch/general/is_array.rst","functional/backends/torch/general/scatter_flat.rst","functional/backends/torch/general/scatter_nd.rst","functional/backends/torch/general/to_list.rst","functional/backends/torch/general/to_numpy.rst","functional/backends/torch/general/to_scalar.rst","functional/backends/torch/general/unstack.rst","functional/backends/torch/gradients.rst","functional/backends/torch/gradients/execute_with_gradients.rst","functional/backends/torch/gradients/is_variable.rst","functional/backends/torch/gradients/stop_gradient.rst","functional/backends/torch/gradients/variable.rst","functional/backends/torch/gradients/variable_data.rst","functional/backends/torch/image.rst","functional/backends/torch/image/bilinear_resample.rst","functional/backends/torch/image/gradient_image.rst","functional/backends/torch/image/stack_images.rst","functional/backends/torch/layers.rst","functional/backends/torch/layers/conv1d.rst","functional/backends/torch/layers/conv1d_transpose.rst","functional/backends/torch/layers/conv2d.rst","functional/backends/torch/layers/conv2d_transpose.rst","functional/backends/torch/layers/conv3d.rst","functional/backends/torch/layers/conv3d_transpose.rst","functional/backends/torch/layers/depthwise_conv2d.rst","functional/backends/torch/linear_algebra.rst","functional/backends/torch/linear_algebra/cholesky.rst","functional/backends/torch/linear_algebra/det.rst","functional/backends/torch/linear_algebra/diagonal.rst","functional/backends/torch/linear_algebra/eigvalsh.rst","functional/backends/torch/linear_algebra/inv.rst","functional/backends/torch/linear_algebra/matmul.rst","functional/backends/torch/linear_algebra/matrix_norm.rst","functional/backends/torch/linear_algebra/matrix_transpose.rst","functional/backends/torch/linear_algebra/pinv.rst","functional/backends/torch/linear_algebra/qr.rst","functional/backends/torch/linear_algebra/slogdet.rst","functional/backends/torch/linear_algebra/svd.rst","functional/backends/torch/linear_algebra/svdvals.rst","functional/backends/torch/linear_algebra/trace.rst","functional/backends/torch/linear_algebra/vector_norm.rst","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/manipulation.rst","functional/backends/torch/manipulation/constant_pad.rst","functional/backends/torch/manipulation/expand_dims.rst","functional/backends/torch/manipulation/flip.rst","functional/backends/torch/manipulation/permute_dims.rst","functional/backends/torch/manipulation/repeat.rst","functional/backends/torch/manipulation/split.rst","functional/backends/torch/manipulation/swapaxes.rst","functional/backends/torch/manipulation/tile.rst","functional/backends/torch/manipulation/zero_pad.rst","functional/backends/torch/old.rst","functional/backends/torch/old/general.rst","functional/backends/torch/old/general/abs.rst","functional/backends/torch/old/general/arange.rst","functional/backends/torch/old/general/argmin.rst","functional/backends/torch/old/general/broadcast_to.rst","functional/backends/torch/old/general/cast.rst","functional/backends/torch/old/general/clip.rst","functional/backends/torch/old/general/compile.rst","functional/backends/torch/old/general/concatenate.rst","functional/backends/torch/old/general/cross.rst","functional/backends/torch/old/general/current_framework_str.rst","functional/backends/torch/old/general/dtype.rst","functional/backends/torch/old/general/dtype_bits.rst","functional/backends/torch/old/general/dtype_from_str.rst","functional/backends/torch/old/general/dtype_to_str.rst","functional/backends/torch/old/general/full.rst","functional/backends/torch/old/general/get_num_dims.rst","functional/backends/torch/old/general/identity.rst","functional/backends/torch/old/general/indices_where.rst","functional/backends/torch/old/general/linear_resample.rst","functional/backends/torch/old/general/maximum.rst","functional/backends/torch/old/general/meshgrid.rst","functional/backends/torch/old/general/minimum.rst","functional/backends/torch/old/general/multiprocessing.rst","functional/backends/torch/old/general/one_hot.rst","functional/backends/torch/old/general/reshape.rst","functional/backends/torch/old/general/shape.rst","functional/backends/torch/old/general/squeeze.rst","functional/backends/torch/old/general/stack.rst","functional/backends/torch/old/general/transpose.rst","functional/backends/torch/old/general/where.rst","functional/backends/torch/old/general/zeros_like.rst","functional/backends/torch/old/linear_algebra.rst","functional/backends/torch/old/reductions.rst","functional/backends/torch/random.rst","functional/backends/torch/random/multinomial.rst","functional/backends/torch/random/randint.rst","functional/backends/torch/random/random_normal.rst","functional/backends/torch/random/random_uniform.rst","functional/backends/torch/random/seed.rst","functional/backends/torch/random/shuffle.rst","functional/backends/torch/searching.rst","functional/backends/torch/searching/argmax.rst","functional/backends/torch/set.rst","functional/backends/torch/sorting.rst","functional/backends/torch/sorting/argsort.rst","functional/backends/torch/statistical.rst","functional/backends/torch/statistical/einsum.rst","functional/backends/torch/statistical/max.rst","functional/backends/torch/statistical/mean.rst","functional/backends/torch/statistical/min.rst","functional/backends/torch/statistical/prod.rst","functional/backends/torch/statistical/sum.rst","functional/backends/torch/statistical/var.rst","functional/backends/torch/utility.rst","functional/backends/torch/utility/all.rst","functional/backends/torch/utility/any.rst","functional/ivy.rst","functional/ivy/activations.rst","functional/ivy/activations/gelu.rst","functional/ivy/activations/leaky_relu.rst","functional/ivy/activations/relu.rst","functional/ivy/activations/sigmoid.rst","functional/ivy/activations/softmax.rst","functional/ivy/activations/softplus.rst","functional/ivy/activations/tanh.rst","functional/ivy/compilation.rst","functional/ivy/compilation/compile.rst","functional/ivy/constants.rst","functional/ivy/creation.rst","functional/ivy/creation/array.rst","functional/ivy/creation/asarray.rst","functional/ivy/creation/empty.rst","functional/ivy/creation/empty_like.rst","functional/ivy/creation/eye.rst","functional/ivy/creation/full_like.rst","functional/ivy/creation/linspace.rst","functional/ivy/creation/logspace.rst","functional/ivy/creation/ones.rst","functional/ivy/creation/ones_like.rst","functional/ivy/creation/tril.rst","functional/ivy/creation/triu.rst","functional/ivy/creation/zeros.rst","functional/ivy/data_type.rst","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/broadcast_to.rst","functional/ivy/data_type/cast.rst","functional/ivy/data_type/closest_valid_dtype.rst","functional/ivy/data_type/convert_dtype.rst","functional/ivy/data_type/default_dtype.rst","functional/ivy/data_type/default_float_dtype.rst","functional/ivy/data_type/default_int_dtype.rst","functional/ivy/data_type/dtype.rst","functional/ivy/data_type/dtype_bits.rst","functional/ivy/data_type/dtype_from_str.rst","functional/ivy/data_type/dtype_to_str.rst","functional/ivy/data_type/finfo.rst","functional/ivy/data_type/iinfo.rst","functional/ivy/data_type/invalid_dtype.rst","functional/ivy/data_type/is_float_dtype.rst","functional/ivy/data_type/is_int_dtype.rst","functional/ivy/data_type/result_type.rst","functional/ivy/data_type/set_default_dtype.rst","functional/ivy/data_type/set_default_float_dtype.rst","functional/ivy/data_type/set_default_int_dtype.rst","functional/ivy/data_type/unset_default_dtype.rst","functional/ivy/data_type/unset_default_float_dtype.rst","functional/ivy/data_type/unset_default_int_dtype.rst","functional/ivy/data_type/valid_dtype.rst","functional/ivy/device.rst","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/device/DevClonedItem.rst","functional/ivy/device/DevClonedIter.rst","functional/ivy/device/DevClonedNest.rst","functional/ivy/device/DevDistItem.rst","functional/ivy/device/DevDistIter.rst","functional/ivy/device/DevDistNest.rst","functional/ivy/device/DevManager:\n\n    def __init__.rst","functional/ivy/device/DevMapper.rst","functional/ivy/device/DevMapperMultiProc.rst","functional/ivy/device/MultiDev:\n\n    def __init__.rst","functional/ivy/device/MultiDevItem.rst","functional/ivy/device/MultiDevIter.rst","functional/ivy/device/MultiDevNest.rst","functional/ivy/device/Profiler.rst","functional/ivy/device/clear_mem_on_dev.rst","functional/ivy/device/default_device.rst","functional/ivy/device/dev.rst","functional/ivy/device/dev_clone.rst","functional/ivy/device/dev_clone_array.rst","functional/ivy/device/dev_clone_iter.rst","functional/ivy/device/dev_clone_nest.rst","functional/ivy/device/dev_dist.rst","functional/ivy/device/dev_dist_array.rst","functional/ivy/device/dev_dist_iter.rst","functional/ivy/device/dev_dist_nest.rst","functional/ivy/device/dev_from_str.rst","functional/ivy/device/dev_to_str.rst","functional/ivy/device/dev_unify.rst","functional/ivy/device/dev_unify_array.rst","functional/ivy/device/dev_unify_iter.rst","functional/ivy/device/dev_unify_nest.rst","functional/ivy/device/dev_util.rst","functional/ivy/device/get_all_arrays_on_dev.rst","functional/ivy/device/gpu_is_available.rst","functional/ivy/device/num_arrays_on_dev.rst","functional/ivy/device/num_cpu_cores.rst","functional/ivy/device/num_gpus.rst","functional/ivy/device/percent_used_mem_on_dev.rst","functional/ivy/device/print_all_arrays_on_dev.rst","functional/ivy/device/set_default_device.rst","functional/ivy/device/set_split_factor.rst","functional/ivy/device/split_factor.rst","functional/ivy/device/split_func_call.rst","functional/ivy/device/to_dev.rst","functional/ivy/device/total_mem_on_dev.rst","functional/ivy/device/tpu_is_available.rst","functional/ivy/device/unset_default_device.rst","functional/ivy/device/used_mem_on_dev.rst","functional/ivy/elementwise.rst","functional/ivy/elementwise/abs.rst","functional/ivy/elementwise/acos.rst","functional/ivy/elementwise/acosh.rst","functional/ivy/elementwise/asin.rst","functional/ivy/elementwise/asinh.rst","functional/ivy/elementwise/atan.rst","functional/ivy/elementwise/atan2.rst","functional/ivy/elementwise/atanh.rst","functional/ivy/elementwise/bitwise_and.rst","functional/ivy/elementwise/bitwise_invert.rst","functional/ivy/elementwise/bitwise_or.rst","functional/ivy/elementwise/ceil.rst","functional/ivy/elementwise/cos.rst","functional/ivy/elementwise/cosh.rst","functional/ivy/elementwise/divide.rst","functional/ivy/elementwise/erf.rst","functional/ivy/elementwise/exp.rst","functional/ivy/elementwise/expm1.rst","functional/ivy/elementwise/floor.rst","functional/ivy/elementwise/greater_equal.rst","functional/ivy/elementwise/isfinite.rst","functional/ivy/elementwise/isinf.rst","functional/ivy/elementwise/isnan.rst","functional/ivy/elementwise/less.rst","functional/ivy/elementwise/less_equal.rst","functional/ivy/elementwise/log.rst","functional/ivy/elementwise/log10.rst","functional/ivy/elementwise/log1p.rst","functional/ivy/elementwise/log2.rst","functional/ivy/elementwise/logaddexp.rst","functional/ivy/elementwise/logical_and.rst","functional/ivy/elementwise/logical_not.rst","functional/ivy/elementwise/logical_or.rst","functional/ivy/elementwise/logical_xor.rst","functional/ivy/elementwise/negative.rst","functional/ivy/elementwise/not_equal.rst","functional/ivy/elementwise/positive.rst","functional/ivy/elementwise/round.rst","functional/ivy/elementwise/sin.rst","functional/ivy/elementwise/sinh.rst","functional/ivy/elementwise/sqrt.rst","functional/ivy/elementwise/square.rst","functional/ivy/elementwise/tan.rst","functional/ivy/elementwise/tanh.rst","functional/ivy/general.rst","functional/ivy/general/all_equal.rst","functional/ivy/general/arg_names.rst","functional/ivy/general/array_equal.rst","functional/ivy/general/arrays_equal.rst","functional/ivy/general/assert_supports_inplace.rst","functional/ivy/general/cache_fn.rst","functional/ivy/general/clip_matrix_norm.rst","functional/ivy/general/clip_vector_norm.rst","functional/ivy/general/container_types.rst","functional/ivy/general/copy_array.rst","functional/ivy/general/cumprod.rst","functional/ivy/general/cumsum.rst","functional/ivy/general/current_framework_str.rst","functional/ivy/general/default.rst","functional/ivy/general/einops_rearrange.rst","functional/ivy/general/einops_reduce.rst","functional/ivy/general/einops_repeat.rst","functional/ivy/general/exists.rst","functional/ivy/general/floormod.rst","functional/ivy/general/fourier_encode.rst","functional/ivy/general/gather.rst","functional/ivy/general/gather_nd.rst","functional/ivy/general/get_all_arrays_in_memory.rst","functional/ivy/general/get_min_base.rst","functional/ivy/general/get_min_denominator.rst","functional/ivy/general/get_referrers_recursive.rst","functional/ivy/general/has_nans.rst","functional/ivy/general/inplace_arrays_supported.rst","functional/ivy/general/inplace_decrement.rst","functional/ivy/general/inplace_increment.rst","functional/ivy/general/inplace_update.rst","functional/ivy/general/inplace_variables_supported.rst","functional/ivy/general/is_array.rst","functional/ivy/general/match_kwargs.rst","functional/ivy/general/num_arrays_in_memory.rst","functional/ivy/general/print_all_arrays_in_memory.rst","functional/ivy/general/queue_timeout.rst","functional/ivy/general/scatter_flat.rst","functional/ivy/general/scatter_nd.rst","functional/ivy/general/set_min_base.rst","functional/ivy/general/set_min_denominator.rst","functional/ivy/general/set_queue_timeout.rst","functional/ivy/general/set_tmp_dir.rst","functional/ivy/general/shape_to_tuple.rst","functional/ivy/general/stable_divide.rst","functional/ivy/general/stable_pow.rst","functional/ivy/general/supports_inplace.rst","functional/ivy/general/tmp_dir.rst","functional/ivy/general/to_list.rst","functional/ivy/general/to_numpy.rst","functional/ivy/general/to_scalar.rst","functional/ivy/general/try_else_none.rst","functional/ivy/general/unstack.rst","functional/ivy/general/value_is_nan.rst","functional/ivy/gradients.rst","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/gradients/adam_step.rst","functional/ivy/gradients/adam_update.rst","functional/ivy/gradients/execute_with_gradients.rst","functional/ivy/gradients/gradient_descent_update.rst","functional/ivy/gradients/is_variable.rst","functional/ivy/gradients/lamb_update.rst","functional/ivy/gradients/lars_update.rst","functional/ivy/gradients/optimizer_update.rst","functional/ivy/gradients/set_with_grads.rst","functional/ivy/gradients/stop_gradient.rst","functional/ivy/gradients/unset_with_grads.rst","functional/ivy/gradients/variable.rst","functional/ivy/gradients/variable_data.rst","functional/ivy/gradients/with_grads.rst","functional/ivy/image.rst","functional/ivy/image/bilinear_resample.rst","functional/ivy/image/float_img_to_uint8_img.rst","functional/ivy/image/gradient_image.rst","functional/ivy/image/random_crop.rst","functional/ivy/image/stack_images.rst","functional/ivy/image/uint8_img_to_float_img.rst","functional/ivy/layers.rst","functional/ivy/layers/conv1d.rst","functional/ivy/layers/conv1d_transpose.rst","functional/ivy/layers/conv2d.rst","functional/ivy/layers/conv2d_transpose.rst","functional/ivy/layers/conv3d.rst","functional/ivy/layers/conv3d_transpose.rst","functional/ivy/layers/depthwise_conv2d.rst","functional/ivy/layers/dropout.rst","functional/ivy/layers/linear.rst","functional/ivy/layers/lstm_update.rst","functional/ivy/layers/multi_head_attention.rst","functional/ivy/layers/scaled_dot_product_attention.rst","functional/ivy/linear_algebra.rst","functional/ivy/linear_algebra/cholesky.rst","functional/ivy/linear_algebra/det.rst","functional/ivy/linear_algebra/diagonal.rst","functional/ivy/linear_algebra/eigvalsh.rst","functional/ivy/linear_algebra/inv.rst","functional/ivy/linear_algebra/matmul.rst","functional/ivy/linear_algebra/matrix_norm.rst","functional/ivy/linear_algebra/matrix_transpose.rst","functional/ivy/linear_algebra/pinv.rst","functional/ivy/linear_algebra/qr.rst","functional/ivy/linear_algebra/slodget.rst","functional/ivy/linear_algebra/svd.rst","functional/ivy/linear_algebra/svdvals.rst","functional/ivy/linear_algebra/trace.rst","functional/ivy/linear_algebra/vector_norm.rst","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/ivy/losses.rst","functional/ivy/losses/binary_cross_entropy.rst","functional/ivy/losses/cross_entropy.rst","functional/ivy/losses/sparse_cross_entropy.rst","functional/ivy/manipulation.rst","functional/ivy/manipulation/constant_pad.rst","functional/ivy/manipulation/expand_dims.rst","functional/ivy/manipulation/flip.rst","functional/ivy/manipulation/permute_dims.rst","functional/ivy/manipulation/repeat.rst","functional/ivy/manipulation/split.rst","functional/ivy/manipulation/swapaxes.rst","functional/ivy/manipulation/tile.rst","functional/ivy/manipulation/zero_pad.rst","functional/ivy/meta.rst","functional/ivy/meta/fomaml_step.rst","functional/ivy/meta/maml_step.rst","functional/ivy/meta/reptile_step.rst","functional/ivy/nest.rst","functional/ivy/nest/all_nested_indices.rst","functional/ivy/nest/copy_nest.rst","functional/ivy/nest/index_nest.rst","functional/ivy/nest/map.rst","functional/ivy/nest/map_nest_at_index.rst","functional/ivy/nest/map_nest_at_indices.rst","functional/ivy/nest/multi_index_nest.rst","functional/ivy/nest/nested_indices_where.rst","functional/ivy/nest/nested_map.rst","functional/ivy/nest/set_nest_at_index.rst","functional/ivy/nest/set_nest_at_indices.rst","functional/ivy/norms.rst","functional/ivy/norms/layer_norm.rst","functional/ivy/old.rst","functional/ivy/old/dtype.rst","functional/ivy/old/general.rst","functional/ivy/old/general/abs.rst","functional/ivy/old/general/arange.rst","functional/ivy/old/general/argmin.rst","functional/ivy/old/general/broadcast_to.rst","functional/ivy/old/general/clip.rst","functional/ivy/old/general/concatenate.rst","functional/ivy/old/general/cross.rst","functional/ivy/old/general/equal.rst","functional/ivy/old/general/floor.rst","functional/ivy/old/general/full.rst","functional/ivy/old/general/get_num_dims.rst","functional/ivy/old/general/identity.rst","functional/ivy/old/general/indices_where.rst","functional/ivy/old/general/linear_resample.rst","functional/ivy/old/general/matmul.rst","functional/ivy/old/general/maximum.rst","functional/ivy/old/general/meshgrid.rst","functional/ivy/old/general/minimum.rst","functional/ivy/old/general/multiprocessing.rst","functional/ivy/old/general/one_hot.rst","functional/ivy/old/general/ones.rst","functional/ivy/old/general/reshape.rst","functional/ivy/old/general/shape.rst","functional/ivy/old/general/squeeze.rst","functional/ivy/old/general/stack.rst","functional/ivy/old/general/transpose.rst","functional/ivy/old/general/where.rst","functional/ivy/old/general/zeros_like.rst","functional/ivy/old/linalg.rst","functional/ivy/old/reductions.rst","functional/ivy/random.rst","functional/ivy/random/multinomial.rst","functional/ivy/random/randint.rst","functional/ivy/random/random_normal.rst","functional/ivy/random/random_uniform.rst","functional/ivy/random/seed.rst","functional/ivy/random/shuffle.rst","functional/ivy/searching.rst","functional/ivy/searching/argmax.rst","functional/ivy/set.rst","functional/ivy/sorting.rst","functional/ivy/sorting/argsort.rst","functional/ivy/statistical.rst","functional/ivy/statistical/einsum.rst","functional/ivy/statistical/max.rst","functional/ivy/statistical/mean.rst","functional/ivy/statistical/min.rst","functional/ivy/statistical/prod.rst","functional/ivy/statistical/std.rst","functional/ivy/statistical/sum.rst","functional/ivy/statistical/var.rst","functional/ivy/utility.rst","functional/ivy/utility/all.rst","functional/ivy/utility/any.rst","index.rst","index_append.rst","index_prepend.rst","roadmap.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","verbosity.rst","verbosity/cprint.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[45,1,1,""],MultiDevContainer:[46,1,1,""]},"ivy.container.Container":{"var":[45,3,1,""],__init__:[45,3,1,""],all_false:[45,3,1,""],all_key_chains:[45,3,1,""],all_true:[45,3,1,""],arrays_as_lists:[45,3,1,""],as_arrays:[45,3,1,""],as_bools:[45,3,1,""],as_ones:[45,3,1,""],as_random_uniform:[45,3,1,""],as_variables:[45,3,1,""],as_zeros:[45,3,1,""],assert_contains_sub_container:[45,3,1,""],assert_contains_sub_structure:[45,3,1,""],assert_identical:[45,3,1,""],assert_identical_structure:[45,3,1,""],at_key_chain:[45,3,1,""],at_key_chains:[45,3,1,""],at_keys:[45,3,1,""],clip:[45,3,1,""],clip_vector_norm:[45,3,1,""],combine:[45,3,1,""],common_key_chains:[45,3,1,""],concat:[45,3,1,""],config:[45,3,1,""],contains_sub_container:[45,3,1,""],contains_sub_structure:[45,3,1,""],copy:[45,3,1,""],create_if_absent:[45,3,1,""],cutoff_at_depth:[45,3,1,""],cutoff_at_height:[45,3,1,""],deep_copy:[45,3,1,""],dev:[45,3,1,""],dev_clone:[45,3,1,""],dev_dist:[45,3,1,""],dev_str:[45,3,1,""],diff:[45,3,1,""],dtype:[45,3,1,""],einops_rearrange:[45,3,1,""],einops_reduce:[45,3,1,""],einops_repeat:[45,3,1,""],einsum:[45,3,1,""],expand_dims:[45,3,1,""],find_sub_container:[45,3,1,""],find_sub_structure:[45,3,1,""],flatten_key_chain:[45,3,1,""],flatten_key_chains:[45,3,1,""],flip:[45,3,1,""],format_key_chains:[45,3,1,""],from_disk_as_hdf5:[45,3,1,""],from_disk_as_json:[45,3,1,""],from_disk_as_pickled:[45,3,1,""],from_flat_list:[45,3,1,""],from_numpy:[45,3,1,""],gather:[45,3,1,""],gather_nd:[45,3,1,""],h5_file_size:[45,3,1,""],has_key:[45,3,1,""],has_key_chain:[45,3,1,""],has_nans:[45,3,1,""],identical:[45,3,1,""],identical_array_shapes:[45,3,1,""],identical_configs:[45,3,1,""],identical_structure:[45,3,1,""],if_exists:[45,3,1,""],inplace_update:[45,3,1,""],ivy:[45,3,1,""],key_chains_containing:[45,3,1,""],list_join:[45,3,1,""],list_stack:[45,3,1,""],map:[45,3,1,""],map_conts:[45,3,1,""],matrix_norm:[45,3,1,""],max_depth:[45,3,1,""],maximum:[45,3,1,""],mean:[45,3,1,""],minimum:[45,3,1,""],multi_map:[45,3,1,""],num_arrays:[45,3,1,""],overwrite_at_key_chain:[45,3,1,""],overwrite_at_key_chains:[45,3,1,""],prod:[45,3,1,""],prune_empty:[45,3,1,""],prune_key_chain:[45,3,1,""],prune_key_chains:[45,3,1,""],prune_key_from_key_chains:[45,3,1,""],prune_keys:[45,3,1,""],prune_keys_from_key_chains:[45,3,1,""],reduce:[45,3,1,""],reduce_max:[45,3,1,""],reduce_min:[45,3,1,""],remove_key_length_limit:[45,3,1,""],remove_print_limit:[45,3,1,""],repeat:[45,3,1,""],reshape:[45,3,1,""],reshape_like:[45,3,1,""],restructure:[45,3,1,""],restructure_key_chains:[45,3,1,""],set_at_key_chain:[45,3,1,""],set_at_key_chains:[45,3,1,""],set_at_keys:[45,3,1,""],set_framework:[45,3,1,""],set_ivy_backend:[45,3,1,""],shape:[45,3,1,""],shapes:[45,3,1,""],show:[45,3,1,""],show_sub_container:[45,3,1,""],shuffle:[45,3,1,""],shuffle_h5_file:[45,3,1,""],size_ordered_arrays:[45,3,1,""],slice_keys:[45,3,1,""],slice_via_key:[45,3,1,""],sort_by_key:[45,3,1,""],split:[45,3,1,""],stack:[45,3,1,""],std:[45,3,1,""],stop_gradients:[45,3,1,""],structural_diff:[45,3,1,""],sum:[45,3,1,""],swapaxes:[45,3,1,""],to_dev:[45,3,1,""],to_dict:[45,3,1,""],to_disk_as_hdf5:[45,3,1,""],to_disk_as_json:[45,3,1,""],to_disk_as_pickled:[45,3,1,""],to_flat_list:[45,3,1,""],to_iterator:[45,3,1,""],to_iterator_keys:[45,3,1,""],to_iterator_values:[45,3,1,""],to_ivy:[45,3,1,""],to_jsonable:[45,3,1,""],to_list:[45,3,1,""],to_multi_dev:[45,3,1,""],to_native:[45,3,1,""],to_numpy:[45,3,1,""],to_raw:[45,3,1,""],trim_key:[45,3,1,""],try_kc:[45,3,1,""],unify:[45,3,1,""],unstack:[45,3,1,""],update_config:[45,3,1,""],vector_norm:[45,3,1,""],with_default_key_color:[45,3,1,""],with_entries_as_lists:[45,3,1,""],with_ivy_backend:[45,3,1,""],with_key_length_limit:[45,3,1,""],with_print_indent:[45,3,1,""],with_print_limit:[45,3,1,""],with_print_line_spacing:[45,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[46,3,1,""],at_dev:[46,3,1,""],at_devs:[46,3,1,""]},"ivy.debugger":{debug_mode:[49,2,1,""],set_breakpoint_debug_mode:[50,2,1,""],set_debug_mode:[51,2,1,""],set_exception_debug_mode:[52,2,1,""],unset_debug_mode:[53,2,1,""]},"ivy.framework_handler":{ContextManager:[65,1,1,""],choose_random_framework:[67,2,1,""],clear_framework_stack:[68,2,1,""],current_framework:[69,2,1,""],get_framework:[70,2,1,""],set_framework:[71,2,1,""],try_import_ivy_jax:[72,2,1,""],try_import_ivy_mxnet:[73,2,1,""],try_import_ivy_numpy:[74,2,1,""],try_import_ivy_tf:[75,2,1,""],try_import_ivy_torch:[76,2,1,""],unset_framework:[77,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[65,3,1,""]},"ivy.functional":{backends:[79,0,0,"-"],ivy:[917,0,0,"-"]},"ivy.functional.backends.numpy":{activations:[398,0,0,"-"],constants:[401,0,0,"-"],creation:[402,0,0,"-"],data_type:[416,0,0,"-"],device:[422,0,0,"-"],general:[465,0,0,"-"]},"ivy.functional.backends.numpy.activations":{gelu:[399,2,1,""],leaky_relu:[398,2,1,""],relu:[398,2,1,""],sigmoid:[398,2,1,""],softmax:[400,2,1,""],softplus:[398,2,1,""]},"ivy.functional.backends.numpy.creation":{array:[403,2,1,""],asarray:[404,2,1,""],empty:[405,2,1,""],empty_like:[406,2,1,""],eye:[407,2,1,""],full_like:[408,2,1,""],linspace:[409,2,1,""],logspace:[410,2,1,""],ones:[411,2,1,""],ones_like:[412,2,1,""],tril:[413,2,1,""],triu:[414,2,1,""],zeros:[415,2,1,""]},"ivy.functional.backends.numpy.data_type":{Finfo:[416,1,1,""],broadcast_to:[418,2,1,""],finfo:[419,2,1,""],iinfo:[420,2,1,""],result_type:[421,2,1,""]},"ivy.functional.backends.numpy.data_type.Finfo":{__init__:[416,3,1,""],bits:[416,3,1,""],eps:[416,3,1,""],max:[416,3,1,""],min:[416,3,1,""],smallest_normal:[416,3,1,""]},"ivy.functional.backends.numpy.device":{Profiler:[423,1,1,""],clear_mem_on_dev:[422,2,1,""],dev:[422,2,1,""],dev_from_str:[422,2,1,""],dev_to_str:[422,2,1,""],gpu_is_available:[422,2,1,""],num_gpus:[422,2,1,""],to_dev:[422,2,1,""],tpu_is_available:[422,2,1,""]},"ivy.functional.backends.numpy.device.Profiler":{__init__:[423,3,1,""],start:[423,3,1,""],stop:[423,3,1,""]},"ivy.functional.backends.numpy.general":{container_types:[465,2,1,""],copy_array:[465,2,1,""],cumprod:[466,2,1,""],floormod:[465,2,1,""],gather:[467,2,1,""],gather_nd:[468,2,1,""],inplace_arrays_supported:[465,2,1,""],inplace_decrement:[469,2,1,""],inplace_increment:[470,2,1,""],inplace_update:[471,2,1,""],inplace_variables_supported:[465,2,1,""],is_array:[472,2,1,""],scatter_flat:[473,2,1,""],scatter_nd:[474,2,1,""],to_list:[465,2,1,""],to_numpy:[465,2,1,""],to_scalar:[465,2,1,""],unstack:[475,2,1,""]},"ivy.functional.backends.numpy.old":{general:[514,0,0,"-"],linear_algebra:[532,0,0,"-"]},"ivy.functional.backends.numpy.old.general":{abs:[514,2,1,""],arange:[515,2,1,""],argmin:[516,2,1,""],astype:[514,2,1,""],cast:[517,2,1,""],clip:[514,2,1,""],compile:[518,2,1,""],concatenate:[519,2,1,""],current_framework_str:[514,2,1,""],dtype:[520,2,1,""],dtype_bits:[521,2,1,""],dtype_from_str:[522,2,1,""],dtype_to_str:[523,2,1,""],full:[524,2,1,""],get_num_dims:[514,2,1,""],identity:[525,2,1,""],indices_where:[526,2,1,""],linear_resample:[527,2,1,""],meshgrid:[514,2,1,""],multiprocessing:[514,2,1,""],one_hot:[528,2,1,""],shape:[514,2,1,""],squeeze:[529,2,1,""],transpose:[530,2,1,""],where:[514,2,1,""],zeros_like:[531,2,1,""]},"ivy.functional.ivy":{activations:[918,0,0,"-"],compilation:[926,0,0,"-"],constants:[928,0,0,"-"],creation:[929,0,0,"-"],data_type:[943,0,0,"-"],device:[971,0,0,"-"],elementwise:[1021,0,0,"-"],general:[1066,0,0,"-"],gradients:[1121,0,0,"-"],image:[1137,0,0,"-"],layers:[1144,0,0,"-"],linear_algebra:[1157,0,0,"-"],losses:[1174,0,0,"-"],manipulation:[1178,0,0,"-"],meta:[1188,0,0,"-"],nest:[1192,0,0,"-"],norms:[1204,0,0,"-"],old:[1206,0,0,"-"],random:[1239,0,0,"-"],searching:[1246,0,0,"-"],set:[1248,0,0,"-"],sorting:[1249,0,0,"-"],statistical:[1251,0,0,"-"],utility:[1260,0,0,"-"]},"ivy.functional.ivy.activations":{gelu:[919,2,1,""],leaky_relu:[920,2,1,""],relu:[921,2,1,""],sigmoid:[922,2,1,""],softmax:[923,2,1,""],softplus:[924,2,1,""],tanh:[925,2,1,""]},"ivy.functional.ivy.compilation":{compile:[927,2,1,""]},"ivy.functional.ivy.constants":{e:[928,4,1,""],nan:[928,4,1,""],pi:[928,4,1,""]},"ivy.functional.ivy.creation":{array:[930,2,1,""],asarray:[931,2,1,""],empty:[932,2,1,""],empty_like:[933,2,1,""],eye:[934,2,1,""],full_like:[935,2,1,""],linspace:[936,2,1,""],logspace:[937,2,1,""],ones:[938,2,1,""],ones_like:[939,2,1,""],tril:[940,2,1,""],triu:[941,2,1,""],zeros:[942,2,1,""]},"ivy.functional.ivy.data_type":{DefaultDtype:[943,1,1,""],DefaultFloatDtype:[943,1,1,""],DefaultIntDtype:[943,1,1,""],astype:[943,2,1,""],broadcast_to:[947,2,1,""],cast:[948,2,1,""],closest_valid_dtype:[949,2,1,""],convert_dtype:[950,2,1,""],default_dtype:[951,2,1,""],default_float_dtype:[952,2,1,""],default_int_dtype:[953,2,1,""],dtype:[954,2,1,""],dtype_bits:[955,2,1,""],dtype_from_str:[956,2,1,""],dtype_to_str:[957,2,1,""],finfo:[958,2,1,""],iinfo:[959,2,1,""],invalid_dtype:[960,2,1,""],is_float_dtype:[961,2,1,""],is_int_dtype:[962,2,1,""],result_type:[963,2,1,""],set_default_dtype:[964,2,1,""],set_default_float_dtype:[965,2,1,""],set_default_int_dtype:[966,2,1,""],unset_default_dtype:[967,2,1,""],unset_default_float_dtype:[968,2,1,""],unset_default_int_dtype:[969,2,1,""],valid_dtype:[970,2,1,""]},"ivy.functional.ivy.data_type.DefaultDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.data_type.DefaultFloatDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.data_type.DefaultIntDtype":{__init__:[943,3,1,""]},"ivy.functional.ivy.device":{DefaultDevice:[971,1,1,""],DevClonedItem:[973,1,1,""],DevClonedIter:[974,1,1,""],DevClonedNest:[975,1,1,""],DevDistItem:[976,1,1,""],DevDistIter:[977,1,1,""],DevDistNest:[978,1,1,""],DevManager:[971,1,1,""],DevMapper:[980,1,1,""],DevMapperMultiProc:[981,1,1,""],MultiDev:[971,1,1,""],MultiDevItem:[983,1,1,""],MultiDevIter:[984,1,1,""],MultiDevNest:[985,1,1,""],Profiler:[986,1,1,""],clear_mem_on_dev:[987,2,1,""],default_device:[988,2,1,""],dev:[989,2,1,""],dev_clone:[990,2,1,""],dev_clone_array:[991,2,1,""],dev_clone_iter:[992,2,1,""],dev_clone_nest:[993,2,1,""],dev_dist:[994,2,1,""],dev_dist_array:[995,2,1,""],dev_dist_iter:[996,2,1,""],dev_dist_nest:[997,2,1,""],dev_from_str:[998,2,1,""],dev_to_str:[999,2,1,""],dev_unify:[1000,2,1,""],dev_unify_array:[1001,2,1,""],dev_unify_iter:[1002,2,1,""],dev_unify_nest:[1003,2,1,""],dev_util:[1004,2,1,""],get_all_arrays_on_dev:[1005,2,1,""],gpu_is_available:[1006,2,1,""],num_arrays_on_dev:[1007,2,1,""],num_cpu_cores:[1008,2,1,""],num_gpus:[1009,2,1,""],percent_used_mem_on_dev:[1010,2,1,""],print_all_arrays_on_dev:[1011,2,1,""],set_default_device:[1012,2,1,""],set_split_factor:[1013,2,1,""],split_factor:[1014,2,1,""],split_func_call:[1015,2,1,""],to_dev:[1016,2,1,""],total_mem_on_dev:[1017,2,1,""],tpu_is_available:[1018,2,1,""],unset_default_device:[1019,2,1,""],used_mem_on_dev:[1020,2,1,""]},"ivy.functional.ivy.device.DefaultDevice":{__init__:[971,3,1,""]},"ivy.functional.ivy.device.DevManager":{__init__:[971,3,1,""],da_tune_step:[971,3,1,""],dim_size:[971,3,1,""],ds_tune_step:[971,3,1,""],map:[971,3,1,""],repeated_config_check:[971,3,1,""],tune_step:[971,3,1,""],tuned:[971,3,1,""]},"ivy.functional.ivy.device.DevMapper":{__init__:[980,3,1,""],map:[980,3,1,""]},"ivy.functional.ivy.device.DevMapperMultiProc":{__init__:[981,3,1,""]},"ivy.functional.ivy.device.MultiDev":{__init__:[971,3,1,""]},"ivy.functional.ivy.device.MultiDevItem":{__init__:[983,3,1,""],items:[983,3,1,""],keys:[983,3,1,""],shape:[983,3,1,""],values:[983,3,1,""]},"ivy.functional.ivy.device.MultiDevIter":{__init__:[984,3,1,""],at_dev:[984,3,1,""],at_devs:[984,3,1,""]},"ivy.functional.ivy.device.MultiDevNest":{__init__:[985,3,1,""],at_dev:[985,3,1,""]},"ivy.functional.ivy.device.Profiler":{__init__:[986,3,1,""],start:[986,3,1,""],stop:[986,3,1,""]},"ivy.functional.ivy.elementwise":{abs:[1022,2,1,""],acos:[1023,2,1,""],acosh:[1024,2,1,""],asin:[1025,2,1,""],asinh:[1026,2,1,""],atan2:[1028,2,1,""],atan:[1027,2,1,""],atanh:[1029,2,1,""],bitwise_and:[1030,2,1,""],bitwise_invert:[1031,2,1,""],bitwise_or:[1032,2,1,""],ceil:[1033,2,1,""],cos:[1034,2,1,""],cosh:[1035,2,1,""],divide:[1036,2,1,""],erf:[1037,2,1,""],exp:[1038,2,1,""],expm1:[1039,2,1,""],floor:[1040,2,1,""],greater_equal:[1041,2,1,""],isfinite:[1042,2,1,""],isinf:[1043,2,1,""],isnan:[1044,2,1,""],less:[1045,2,1,""],less_equal:[1046,2,1,""],log10:[1048,2,1,""],log1p:[1049,2,1,""],log2:[1050,2,1,""],log:[1047,2,1,""],logaddexp:[1051,2,1,""],logical_and:[1052,2,1,""],logical_not:[1053,2,1,""],logical_or:[1054,2,1,""],logical_xor:[1055,2,1,""],negative:[1056,2,1,""],not_equal:[1057,2,1,""],positive:[1058,2,1,""],round:[1059,2,1,""],sin:[1060,2,1,""],sinh:[1061,2,1,""],sqrt:[1062,2,1,""],square:[1063,2,1,""],tan:[1064,2,1,""],tanh:[1065,2,1,""]},"ivy.functional.ivy.general":{"default":[1080,2,1,""],all_equal:[1067,2,1,""],arg_names:[1068,2,1,""],array_equal:[1069,2,1,""],arrays_equal:[1070,2,1,""],assert_supports_inplace:[1071,2,1,""],cache_fn:[1072,2,1,""],clip_matrix_norm:[1073,2,1,""],clip_vector_norm:[1074,2,1,""],container_types:[1075,2,1,""],copy_array:[1076,2,1,""],cumprod:[1077,2,1,""],cumsum:[1078,2,1,""],current_framework_str:[1079,2,1,""],einops_rearrange:[1081,2,1,""],einops_reduce:[1082,2,1,""],einops_repeat:[1083,2,1,""],exists:[1084,2,1,""],floormod:[1085,2,1,""],fourier_encode:[1086,2,1,""],gather:[1087,2,1,""],gather_nd:[1088,2,1,""],get_all_arrays_in_memory:[1089,2,1,""],get_min_base:[1090,2,1,""],get_min_denominator:[1091,2,1,""],get_referrers_recursive:[1092,2,1,""],has_nans:[1093,2,1,""],inplace_arrays_supported:[1094,2,1,""],inplace_decrement:[1095,2,1,""],inplace_increment:[1096,2,1,""],inplace_update:[1097,2,1,""],inplace_variables_supported:[1098,2,1,""],is_array:[1099,2,1,""],match_kwargs:[1100,2,1,""],num_arrays_in_memory:[1101,2,1,""],print_all_arrays_in_memory:[1102,2,1,""],queue_timeout:[1103,2,1,""],scatter_flat:[1104,2,1,""],scatter_nd:[1105,2,1,""],set_min_base:[1106,2,1,""],set_min_denominator:[1107,2,1,""],set_queue_timeout:[1108,2,1,""],set_tmp_dir:[1109,2,1,""],shape_to_tuple:[1110,2,1,""],stable_divide:[1111,2,1,""],stable_pow:[1112,2,1,""],supports_inplace:[1113,2,1,""],tmp_dir:[1114,2,1,""],to_list:[1115,2,1,""],to_numpy:[1116,2,1,""],to_scalar:[1117,2,1,""],try_else_none:[1118,2,1,""],unstack:[1119,2,1,""],value_is_nan:[1120,2,1,""]},"ivy.functional.ivy.gradients":{GradientTracking:[1121,1,1,""],adam_step:[1123,2,1,""],adam_update:[1124,2,1,""],execute_with_gradients:[1125,2,1,""],gradient_descent_update:[1126,2,1,""],is_variable:[1127,2,1,""],lamb_update:[1128,2,1,""],lars_update:[1129,2,1,""],optimizer_update:[1130,2,1,""],set_with_grads:[1131,2,1,""],stop_gradient:[1132,2,1,""],unset_with_grads:[1133,2,1,""],variable:[1134,2,1,""],variable_data:[1135,2,1,""],with_grads:[1136,2,1,""]},"ivy.functional.ivy.gradients.GradientTracking":{__init__:[1121,3,1,""]},"ivy.functional.ivy.image":{bilinear_resample:[1138,2,1,""],float_img_to_uint8_img:[1139,2,1,""],gradient_image:[1140,2,1,""],random_crop:[1141,2,1,""],stack_images:[1142,2,1,""],uint8_img_to_float_img:[1143,2,1,""]},"ivy.functional.ivy.layers":{conv1d:[1145,2,1,""],conv1d_transpose:[1146,2,1,""],conv2d:[1147,2,1,""],conv2d_transpose:[1148,2,1,""],conv3d:[1149,2,1,""],conv3d_transpose:[1150,2,1,""],depthwise_conv2d:[1151,2,1,""],dropout:[1152,2,1,""],linear:[1153,2,1,""],lstm_update:[1154,2,1,""],multi_head_attention:[1155,2,1,""],scaled_dot_product_attention:[1156,2,1,""]},"ivy.functional.ivy.linear_algebra":{cholesky:[1158,2,1,""],det:[1159,2,1,""],diagonal:[1160,2,1,""],eigvalsh:[1161,2,1,""],inv:[1162,2,1,""],matmul:[1163,2,1,""],matrix_norm:[1164,2,1,""],matrix_transpose:[1165,2,1,""],pinv:[1166,2,1,""],qr:[1167,2,1,""],slodget:[1168,2,1,""],svd:[1169,2,1,""],svdvals:[1170,2,1,""],trace:[1171,2,1,""],vector_norm:[1172,2,1,""],vector_to_skew_symmetric_matrix:[1173,2,1,""]},"ivy.functional.ivy.losses":{binary_cross_entropy:[1175,2,1,""],cross_entropy:[1176,2,1,""],sparse_cross_entropy:[1177,2,1,""]},"ivy.functional.ivy.manipulation":{constant_pad:[1179,2,1,""],expand_dims:[1180,2,1,""],flip:[1181,2,1,""],permute_dims:[1182,2,1,""],repeat:[1183,2,1,""],split:[1184,2,1,""],swapaxes:[1185,2,1,""],tile:[1186,2,1,""],zero_pad:[1187,2,1,""]},"ivy.functional.ivy.meta":{fomaml_step:[1189,2,1,""],maml_step:[1190,2,1,""],reptile_step:[1191,2,1,""]},"ivy.functional.ivy.nest":{all_nested_indices:[1193,2,1,""],copy_nest:[1194,2,1,""],index_nest:[1195,2,1,""],map:[1196,2,1,""],map_nest_at_index:[1197,2,1,""],map_nest_at_indices:[1198,2,1,""],multi_index_nest:[1199,2,1,""],nested_indices_where:[1200,2,1,""],nested_map:[1201,2,1,""],set_nest_at_index:[1202,2,1,""],set_nest_at_indices:[1203,2,1,""]},"ivy.functional.ivy.norms":{layer_norm:[1205,2,1,""]},"ivy.functional.ivy.old":{dtype:[1207,0,0,"-"],general:[1208,0,0,"-"],linalg:[1237,0,0,"-"],reductions:[1238,0,0,"-"]},"ivy.functional.ivy.old.general":{abs:[1209,2,1,""],arange:[1210,2,1,""],argmin:[1211,2,1,""],broadcast_to:[1212,2,1,""],clip:[1213,2,1,""],concatenate:[1214,2,1,""],cross:[1215,2,1,""],equal:[1216,2,1,""],floor:[1217,2,1,""],full:[1218,2,1,""],get_num_dims:[1219,2,1,""],identity:[1220,2,1,""],indices_where:[1221,2,1,""],linear_resample:[1222,2,1,""],matmul:[1223,2,1,""],maximum:[1224,2,1,""],meshgrid:[1225,2,1,""],minimum:[1226,2,1,""],multiprocessing:[1227,2,1,""],one_hot:[1228,2,1,""],ones:[1229,2,1,""],reshape:[1230,2,1,""],shape:[1231,2,1,""],squeeze:[1232,2,1,""],stack:[1233,2,1,""],transpose:[1234,2,1,""],where:[1235,2,1,""],zeros_like:[1236,2,1,""]},"ivy.functional.ivy.random":{multinomial:[1240,2,1,""],randint:[1241,2,1,""],random_normal:[1242,2,1,""],random_uniform:[1243,2,1,""],seed:[1244,2,1,""],shuffle:[1245,2,1,""]},"ivy.functional.ivy.searching":{argmax:[1247,2,1,""]},"ivy.functional.ivy.sorting":{argsort:[1250,2,1,""]},"ivy.functional.ivy.statistical":{"var":[1259,2,1,""],einsum:[1252,2,1,""],max:[1253,2,1,""],mean:[1254,2,1,""],min:[1255,2,1,""],prod:[1256,2,1,""],std:[1257,2,1,""],sum:[1258,2,1,""]},"ivy.functional.ivy.utility":{all:[1261,2,1,""],any:[1262,2,1,""]},"ivy.stateful":{activations:[1267,0,0,"-"],converters:[1270,0,0,"-"],initializers:[1272,0,0,"-"],layers:[1281,0,0,"-"],module:[1293,0,0,"-"],norms:[1295,0,0,"-"],optimizers:[1297,0,0,"-"],sequential:[1303,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1268,1,1,""],GELU:[1269,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1268,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1269,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1271,2,1,""]},"ivy.stateful.initializers":{Constant:[1272,1,1,""],FirstLayerSiren:[1274,1,1,""],GlorotUniform:[1275,1,1,""],KaimingNormal:[1272,1,1,""],Ones:[1277,1,1,""],Siren:[1278,1,1,""],Uniform:[1272,1,1,""],Zeros:[1280,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1272,3,1,""],create_variables:[1272,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1274,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1275,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1272,3,1,""],create_variables:[1272,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1277,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1278,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1272,3,1,""],create_variables:[1272,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1280,3,1,""]},"ivy.stateful.layers":{Conv1D:[1282,1,1,""],Conv1DTranspose:[1283,1,1,""],Conv2D:[1284,1,1,""],Conv2DTranspose:[1285,1,1,""],Conv3D:[1286,1,1,""],Conv3DTranspose:[1287,1,1,""],DepthwiseConv2D:[1288,1,1,""],Dropout:[1289,1,1,""],LSTM:[1290,1,1,""],Linear:[1291,1,1,""],MultiHeadAttention:[1292,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1282,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1283,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1284,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1285,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1286,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1287,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1288,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1289,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1290,3,1,""],get_initial_state:[1290,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1291,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1292,3,1,""]},"ivy.stateful.module":{Module:[1294,1,1,""]},"ivy.stateful.module.Module":{__init__:[1294,3,1,""],build:[1294,3,1,""],build_mode:[1294,3,1,""],built:[1294,3,1,""],check_submod_rets:[1294,3,1,""],get_mod_key:[1294,3,1,""],mod_depth:[1294,3,1,""],mod_height:[1294,3,1,""],mod_with_top_mod_key_chain:[1294,3,1,""],save_weights:[1294,3,1,""],show_mod_in_top_mod:[1294,3,1,""],show_structure:[1294,3,1,""],show_v_in_top_v:[1294,3,1,""],sub_mods:[1294,3,1,""],track_submod_call_order:[1294,3,1,""],track_submod_rets:[1294,3,1,""],v_with_top_v_key_chains:[1294,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1296,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1296,3,1,""]},"ivy.stateful.optimizers":{Adam:[1298,1,1,""],LAMB:[1299,1,1,""],LARS:[1300,1,1,""],Optimizer:[1301,1,1,""],SGD:[1302,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1298,3,1,""],set_state:[1298,3,1,""],state:[1298,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1299,3,1,""],set_state:[1299,3,1,""],state:[1299,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1300,3,1,""],set_state:[1300,3,1,""],state:[1300,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1301,3,1,""],set_state:[1301,3,1,""],step:[1301,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1302,3,1,""],set_state:[1302,3,1,""],state:[1302,3,1,""]},"ivy.stateful.sequential":{Sequential:[1304,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1304,3,1,""]},"ivy.verbosity":{cprint:[1307,2,1,""]},ivy:{"debugger":[48,0,0,"-"],container:[44,0,0,"-"],framework_handler:[65,0,0,"-"],func_wrapper:[78,0,0,"-"],verbosity:[1306,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1297,1298,1299],"02886":1263,"100":[42,43,1263],"141592653589793":928,"2006":41,"2015":42,"2019":[1021,1039],"2021":1263,"2102":1263,"360":[1021,1064],"70s":42,"718281828459045":928,"754":[42,928,943,958,1021,1039,1062],"80s":42,"90s":42,"999":[1121,1123,1124,1128,1297,1298,1299],"\u03c0":[1021,1023,1027],"abstract":[41,971,986,1263,1297,1301],"boolean":[44,45,943,960,970,971,1006,1018,1021,1030,1031,1032,1052,1053,1054,1055,1066,1067,1069,1070,1093,1094,1098,1099,1113,1120,1121,1127,1188,1189,1190,1208,1221],"break":47,"case":[15,18,19,42,44,45,46,47,971,1010,1017,1020,1021,1022,1023,1024,1026,1027,1033,1034,1039,1040,1048,1050,1051,1060,1061,1062,1066,1104,1105,1157,1164,1192,1195,1199,1208,1210,1230,1251,1253,1263,1281,1292,1293,1294,1297,1301],"catch":[1066,1080],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,64,65,416,422,423,943,959,971,973,974,975,976,977,978,980,981,983,984,985,986,998,999,1066,1068,1100,1121,1135,1174,1176,1177,1192,1194,1201,1263,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],"default":[15,18,19,44,45,46,47,918,919,923,926,927,929,931,932,933,934,935,937,938,939,940,941,942,943,951,952,953,954,971,980,981,988,989,993,994,995,996,997,1000,1001,1002,1003,1010,1013,1014,1015,1020,1066,1067,1073,1074,1077,1078,1086,1087,1093,1100,1103,1104,1105,1108,1111,1112,1119,1120,1121,1124,1126,1127,1128,1129,1130,1132,1136,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1160,1164,1167,1172,1174,1175,1176,1177,1178,1179,1181,1183,1184,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1204,1205,1208,1210,1211,1214,1215,1218,1219,1220,1222,1225,1227,1229,1231,1234,1239,1240,1242,1243,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],"final":[44,45,47,929,936,937,1066,1086,1281,1292],"float":[44,45,46,47,402,408,918,920,928,929,932,934,935,937,938,942,943,952,958,961,963,971,980,981,1004,1010,1013,1017,1020,1021,1023,1024,1026,1027,1033,1034,1036,1039,1040,1048,1050,1051,1060,1061,1062,1066,1073,1074,1086,1090,1091,1106,1107,1108,1111,1112,1121,1123,1124,1126,1128,1129,1130,1137,1139,1143,1144,1152,1155,1156,1157,1158,1159,1161,1167,1172,1174,1175,1176,1177,1178,1179,1188,1189,1190,1191,1204,1205,1208,1210,1218,1239,1242,1243,1251,1253,1256,1258,1259,1281,1289,1292,1295,1296,1297,1298,1299,1300,1301,1302],"function":[15,41,44,45,47,54,64,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,465,466,467,468,469,470,471,472,473,474,475,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,973,974,975,976,977,978,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1267,1268,1269,1297,1300,1301,1302],"import":[42,47,1263,1266],"int":[44,45,46,47,402,405,407,408,411,413,414,415,416,418,918,923,926,927,929,932,934,935,936,937,938,940,941,942,943,947,953,955,958,959,962,971,993,994,995,996,997,1000,1001,1002,1003,1008,1009,1015,1066,1077,1078,1081,1082,1083,1086,1087,1104,1105,1110,1119,1121,1123,1124,1128,1137,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1155,1157,1160,1164,1171,1172,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1201,1204,1205,1208,1211,1212,1214,1218,1219,1220,1222,1228,1229,1230,1231,1232,1233,1234,1239,1240,1241,1243,1244,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1259,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1295,1296],"long":[47,1144,1154],"new":[41,42,43,44,45,47,54,929,932,935,938,939,942,943,948,1021,1029,1035,1049,1058,1065,1066,1081,1082,1083,1086,1087,1088,1104,1105,1106,1107,1111,1112,1121,1124,1126,1128,1129,1130,1137,1139,1141,1143,1178,1180,1192,1202,1203,1204,1205,1208,1209,1212,1218,1229,1230,1233,1239,1240,1263,1270,1271,1281,1291,1295,1296,1297,1298,1299,1300,1301,1302],"public":[1066,1075],"return":[15,16,17,18,19,44,45,46,47,918,919,920,921,922,923,924,925,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,960,961,962,963,970,971,980,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1006,1007,1009,1010,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1093,1094,1095,1096,1097,1098,1099,1100,1101,1104,1105,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240,1241,1242,1243,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1270,1271,1281,1290,1291,1297,1301],"short":[47,1144,1154,1263],"static":[44,45,926,927],"true":[44,45,46,398,399,514,518,918,919,926,927,971,1021,1042,1043,1044,1053,1054,1066,1067,1071,1072,1084,1086,1093,1120,1121,1124,1126,1127,1128,1129,1130,1132,1144,1152,1157,1158,1164,1169,1172,1174,1175,1176,1177,1188,1189,1190,1191,1192,1193,1200,1208,1221,1235,1239,1240,1246,1247,1249,1250,1251,1253,1254,1256,1257,1260,1261,1262,1281,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302],"try":[40,42,43,44,45,1066,1118],"var":[44,45,1188,1189,1190,1251],"while":[41,42,44,45,46,1021,1053,1054],AND:[1021,1030,1052,1260,1261],AWS:42,For:[41,42,43,47,1021,1022,1023,1024,1026,1027,1033,1034,1039,1040,1048,1050,1051,1060,1061,1062,1121,1127,1135,1208,1210,1213,1233,1251,1253,1263,1270,1271],NOT:[1021,1053],Not:928,One:[44,45,47,1066,1082,1208,1230,1239,1241],Ones:1272,PRs:47,Such:[1066,1075],The:[15,16,17,18,19,40,41,43,44,45,46,47,54,918,919,920,921,922,923,924,925,926,927,929,930,937,940,941,943,948,949,950,955,956,957,960,970,971,980,981,987,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1010,1013,1014,1015,1016,1017,1020,1021,1022,1023,1024,1025,1026,1027,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1064,1066,1069,1072,1073,1074,1076,1079,1080,1086,1087,1088,1095,1096,1097,1099,1104,1105,1106,1107,1108,1110,1111,1112,1120,1121,1123,1124,1126,1128,1129,1130,1132,1135,1137,1139,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1164,1165,1167,1168,1169,1170,1171,1172,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1186,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1210,1212,1214,1215,1216,1220,1222,1223,1225,1227,1229,1230,1232,1233,1236,1239,1240,1242,1243,1246,1247,1249,1250,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301],There:[41,47,1263],These:[41,42,43,47,1263,1266],Use:47,Used:[1192,1193,1200,1293,1294],Using:1263,With:[42,43,44,45,1157,1164,1246,1247,1251,1254,1257,1263],__array__:[929,930],__call__:[1281,1292,1293,1294],__init__:[44,45,46,47,65,66,102,265,416,417,422,423,570,737,943,944,945,946,971,972,979,980,981,982,983,984,985,986,1121,1122,1263,1267,1268,1269,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],__pow__:47,_base:[1192,1193,1200],_cur_framework:47,_forward:1263,_handle_flat_arrays_in_out:47,_index:[1192,1193,1200],_min_bas:[1066,1112,1204,1205,1295,1296],_min_denomin:[1066,1111],_native_wrapp:47,_step:[1297,1301],abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,971,980,986,1293,1294,1297,1301],abil:1263,abl:[44,45],about:[43,943,958,959],abov:[47,929,940,941,1157,1160,1239,1241,1251,1256,1258],above_height:[44,45],abs:[514,1021,1157,1172,1208],absolut:[44,45,1021,1022,1157,1168,1208,1209],abund:43,accept:[15,47,1021,1053,1054,1263],access:[44,45,47],accord:[44,45,943,958,1066,1087,1104,1105,1178,1179,1187,1208,1234],accordingli:[1021,1039,1157,1172,1251,1253,1256,1260,1261,1262],accur:[65,416,422,423,943,971,983,984,985,986,1021,1039,1121,1272,1274,1275,1277,1278,1280],aco:1021,acosh:1021,across:[44,45,971,980,981,990,991,993,994,995,996,997,1003,1013,1014,1066,1069,1070,1192,1196,1208,1211],act:47,activ:[399,400,919,920,921,922,923,924,925,1268,1269],adam:[1121,1123,1124,1128,1263,1297,1299],adam_step:1121,adam_upd:1121,adapt:[42,1121,1129,1297,1300],add:[44,45,47,1174,1175,1176,1177,1204,1205,1263,1266,1295,1296],added:[47,1066,1111,1112,1303,1304],adding:[42,47,1208,1212],addit:[44,45,47,1066,1081,1082,1083,1204,1205,1281,1291],addition:47,address:[43,47],adher:[41,42,47],adjac:[1208,1210],adjust:[1251,1259],adopt:[42,47,1066,1075],affect:[1208,1210],affin:[1295,1296],after:[1021,1062,1121,1124,1125,1126,1128,1129,1130,1137,1138,1204,1205,1208,1222,1297,1298,1299,1300,1301,1302],after_1:[1178,1179,1187],after_n:[1178,1179,1187],again:[42,43,47],against:[41,44,45,1157,1163,1164,1246,1247,1251,1254,1257],agnost:[47,1263],algorithm:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],align:[44,45,47,1208,1212,1266],aliv:[971,1005,1007,1011,1066,1089,1101,1102],all:[15,16,17,18,19,41,42,43,44,45,47,926,927,929,934,940,941,971,980,1005,1011,1066,1067,1069,1070,1075,1089,1102,1144,1154,1157,1172,1178,1181,1188,1189,1190,1191,1192,1193,1194,1200,1201,1208,1209,1220,1232,1239,1240,1243,1251,1254,1257,1260,1263],all_depth:[44,45],all_equ:1066,all_fals:[44,45],all_key_chain:[44,45],all_nested_indic:1192,all_tru:[44,45],alloc:[47,929,940,941,971],allow:[42,929,936,937,1066,1100,1293,1294],allow_dupl:[1066,1100],allud:42,almost:41,alon:[971,1010,1020,1263],along:[44,45,47,929,936,937,971,994,995,996,997,1000,1001,1002,1003,1015,1066,1077,1078,1087,1119,1157,1164,1171,1172,1178,1181,1183,1184,1186,1188,1189,1190,1191,1208,1214,1222,1233,1239,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262],alongsid:42,alpha:[398,918,920],alphabet:[44,45,46],alphabetical_kei:[44,45,46],alreadi:[44,45,47,971,1021,1033,1040],also:[41,42,44,45,47,1121,1124,1144,1153,1188,1189,1190,1191,1192,1193,1194,1200,1201,1208,1210,1263,1281,1291],alwai:[44,45,47,1121,1127,1132],among:[43,44,45],amount:[971,1017,1263],angl:[1021,1028,1061],ani:[15,16,17,18,19,41,42,43,44,45,47,926,927,929,930,931,971,973,976,980,981,983,992,993,996,997,1002,1021,1041,1046,1066,1067,1080,1081,1082,1083,1084,1093,1099,1100,1111,1112,1121,1125,1192,1193,1196,1200,1201,1202,1203,1208,1210,1216,1239,1243,1260,1263,1270,1271,1293,1294],anoth:[42,44,45,47,943,950,1263],another_backend:47,anyon:42,anyth:47,anywai:47,apach:42,apart:47,api:[40,41,54,1263,1266],appear:[47,1178,1180],append:[44,45,1157,1160,1163],appli:[15,18,19,44,45,64,918,919,920,921,922,923,924,925,943,963,1066,1081,1082,1083,1121,1128,1129,1144,1153,1155,1156,1157,1169,1188,1189,1190,1192,1196,1199,1201,1204,1205,1263,1267,1268,1269,1295,1296],applic:[1144,1155,1156,1192,1196,1201,1263],appropri:[1246,1247],approxim:[47,398,399,918,919,1021,1023,1024,1026,1027,1034,1039,1048,1049,1050,1060,1061],arang:[514,929,936,937,1208],arbitrari:[44,45,943,963,971,1000,1001,1003],arc:[1021,1028],area:[42,64,1021,1024,1026,1263],arg:[15,16,17,44,45,47,65,69,971,980,993,997,1003,1015,1066,1081,1082,1083,1105,1270,1271,1293,1294],arg_nam:1066,arg_stateful_idx:[1293,1294],argmax:1246,argmin:[514,1208],args_to_ivi:15,args_to_n:15,argsort:1249,argument:[15,16,17,18,19,41,44,45,46,47,65,69,926,927,943,963,971,980,981,993,997,1003,1066,1068,1072,1080,1100,1105,1192,1196,1208,1210,1270,1271,1293,1294],aris:[42,1263],arithmet:[47,1251,1254,1257],arithmetic_oper:[0,1,2,47],aros:42,around:[44,45,46,47],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,54,402,918,919,920,921,922,923,924,925,929,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,954,958,959,961,962,963,971,989,990,991,994,995,996,997,1000,1001,1002,1003,1005,1007,1011,1015,1016,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1073,1074,1076,1077,1078,1081,1082,1083,1085,1086,1087,1088,1089,1093,1094,1095,1096,1097,1099,1101,1102,1104,1105,1113,1115,1116,1117,1119,1120,1121,1123,1124,1127,1128,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1192,1194,1201,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240,1241,1242,1243,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1281,1289,1290,1292,1297,1301],arrang:[1066,1081],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,47],array_api_methods_to_test:47,array_builtin:47,array_equ:1066,array_lik:[929,930],array_modul:47,array_oper:[0,3,4],arrays_and_dtyp:[416,421,943,963],arrays_as_list:[44,45],arrays_equ:[44,45,1066],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:20,arraywithgener:22,arraywithgradi:24,arraywithimag:26,arraywithlinalg:28,arraywithlog:30,arraywithmath:32,arraywithmeta:34,arraywithrandom:36,arraywithreduct:38,arriv:[44,45,46],articl:1263,arxiv:1263,as_arrai:[44,45,1208,1219,1231],as_bool:[44,45],as_on:[44,45],as_random_uniform:[44,45],as_str:[422,514,520,943,951,952,953,954,971,989],as_tensor:514,as_vari:[44,45],as_zero:[44,45],asarrai:[402,929],ascend:[1249,1250],asin:1021,asinh:1021,ask:43,aspect:[1137,1142],assert:[44,45,1066,1071],assert_contains_sub_contain:[44,45],assert_contains_sub_structur:[44,45],assert_ident:[44,45],assert_identical_structur:[44,45],assert_is_bool:[44,45],assert_supports_inplac:1066,associ:[47,1157,1173],assum:[1021,1034,1060],astyp:[514,943],asynchron:[44,45,46],at_dev:[44,46,971,984,985],at_kei:[44,45],at_key_chain:[44,45],atan2:1021,atan:1021,atanh:1021,attent:[42,47,1144,1155,1156,1281,1292],attribut:[0,6,44,45,943,958,959,1208,1236],audienc:1263,author:1263,automat:[43,47,54],avail:[41,44,45,47,971,1006,1008,1009,1018,1066,1082],averag:[1121,1123,1124,1128,1188,1189,1190,1251,1254],average_across_step:[1188,1189,1190],avoid:[47,971,1021,1039],awesom:43,axes:[44,45,47,514,530,971,1015,1157,1164,1172,1178,1179,1180,1181,1182,1185,1187,1208,1211,1234,1246,1247,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262],axes_length:[44,45,1066,1081,1082,1083],axi:[44,45,398,400,402,409,410,465,466,467,475,514,516,519,527,529,918,923,929,936,937,971,973,976,983,994,995,996,997,1000,1001,1002,1003,1015,1066,1077,1078,1087,1119,1157,1160,1171,1172,1174,1176,1177,1178,1179,1180,1181,1183,1184,1185,1186,1187,1208,1211,1214,1215,1222,1232,1233,1239,1245,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262],axis0:[44,45,1178,1185],axis1:[44,45,1157,1160,1178,1185],axis2:[1157,1160],back:[42,47,54,1266,1293,1294,1297,1301],backend:[15,17,19,44,45,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,465,466,467,468,469,470,471,472,473,474,475,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,943,950,960,970,971,1006,1009,1018,1066,1094,1098,1121,1124,1126,1128,1129,1130,1135,1263,1270,1271,1297,1298,1299,1300,1301,1302],backend_nam:47,background:1263,backward:[1260,1261,1262],band:[1066,1086],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,65,402,410,416,422,423,929,937,943,971,973,974,975,976,977,978,980,981,983,984,985,986,1021,1048,1049,1050,1066,1090,1106,1112,1121,1251,1252,1263,1267,1268,1269,1272,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],basi:47,batch:[44,45,971,1013,1014,1066,1086,1137,1141,1144,1153,1157,1169,1172,1188,1189,1190,1191,1204,1205,1208,1220,1295,1296],batch_shap:[514,525,1137,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1173,1208,1220,1228,1239,1240,1281,1290],batch_siz:[1144,1145,1146,1147,1148,1149,1150,1151,1239,1240],becaus:[47,1208,1210],becom:[41,43,47,1021,1028,1208,1213],been:[1066,1081,1082,1083,1239,1240],befor:[44,45,47,971,1015,1144,1155,1156,1188,1189,1190,1192,1201,1251,1254,1256,1257,1258],before_1:[1178,1179,1187],before_n:[1178,1179,1187],begin:[1192,1193,1200],behaviour:47,behind:[1121,1124,1126,1128,1129,1130,1263],being:[42,43,44,45,47,1066,1103,1108,1208,1210],believ:[42,47],belong:[44,45],below:[47,929,940,941,1157,1160,1263],below_depth:[44,45],benefit:[42,43,1263],bernoul:[1144,1152,1281,1289],best:[47,1066,1100,1263],beta1:[1121,1123,1124,1128,1297,1298,1299],beta2:[1121,1123,1124,1128,1297,1298,1299],beta:[1204,1205],better:43,between:[41,44,45,46,54,943,958,1174,1176,1177,1192,1196,1208,1210,1239,1241,1297,1299],bia:[1144,1153,1154,1281,1282,1283,1284,1285,1286,1287,1288,1291],bias_initi:[1281,1282,1283,1284,1285,1286,1287,1288,1291],bilinear:[1137,1138],bilinear_resampl:1137,bilinearli:[1137,1138],binari:[1021,1030,1032,1055,1174,1175],binary_cross_entropi:1174,bio:42,bit:[416,943,955,958,959,1021,1031,1137,1139,1143,1251,1256,1258,1263],bitwis:[1021,1030,1032,1055],bitwise_and:1021,bitwise_invert:1021,bitwise_oper:[0,7,8],bitwise_or:1021,block:[54,1263],bluetooth:42,bool:[15,18,19,44,45,46,47,918,919,926,927,943,951,952,953,954,960,961,962,970,971,989,1002,1006,1010,1015,1018,1020,1021,1041,1042,1043,1044,1045,1046,1052,1053,1054,1057,1066,1067,1069,1070,1077,1080,1084,1086,1093,1099,1100,1119,1120,1121,1124,1125,1126,1127,1128,1129,1130,1132,1144,1152,1157,1158,1164,1169,1172,1178,1184,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1208,1216,1219,1231,1235,1239,1240,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1259,1260,1261,1262,1270,1271,1281,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302],both:[47,1157,1163,1208,1215],bottleneck:41,bottom:1263,boundari:[44,45,1239,1243],branch:[47,926,927],bring:42,brittl:47,broadcast:[44,45,47,943,947,1021,1028,1030,1032,1036,1041,1045,1046,1051,1054,1055,1057,1157,1163,1164,1172,1178,1183,1208,1212,1216,1224,1225,1226,1246,1247,1251,1253,1254,1256,1257,1260,1261,1262],broadcast_to:[416,943,1208],btx:42,build:[42,54,1263,1281,1292,1293,1294],build_mod:[1281,1292,1293,1294],builder:[47,64,1263],built:[971,1208,1210,1281,1292,1293,1294],builtin:47,builtin_pow:47,builtin_some_op:47,bumpi:42,bus:42,busi:47,cach:[971,987,1066,1072],cache_fn:1066,calcul:[42,44,45,46,47,1021,1022,1023,1024,1026,1027,1034,1036,1039,1048,1049,1050,1051,1060,1061,1062,1251,1253,1256,1258,1259],call:[42,47,971,1015,1066,1103,1108,1118,1121,1125,1192,1193,1196,1200,1281,1292,1293,1294,1297,1301],callabl:[44,45,926,927,971,980,981,1015,1066,1072,1080,1082,1100,1118,1144,1155,1188,1189,1190,1191,1192,1196,1197,1198,1200,1201],can:[41,42,43,47,54,929,931,971,1013,1014,1015,1137,1139,1208,1230,1263,1266],cannot:47,captur:1263,care:42,cast:[44,45,514,943,1137,1139,1143,1208,1214,1251,1256,1258],catalyst:43,catch_except:[1066,1080],categori:[47,54],caus:47,ceil:[1021,1208,1210],celebr:42,cell:[1144,1154,1281,1290],central:42,certain:[44,45,929,936,937,1208,1210],certainli:42,chain:[44,45,1188,1189,1190,1303,1304],chang:[43,47,971,1192,1194,1201,1208,1230,1263,1266],channel:[1066,1086,1137,1139,1140,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291],charact:42,charger:42,check:[15,16,17,18,19,41,42,43,44,45,47,943,949,960,970,971,1010,1020,1066,1071,1084,1093,1099,1113,1120,1121,1127,1192,1193,1200,1263],check_nest:[1192,1200],check_shap:[44,45],check_submod_ret:[1293,1294],check_typ:[44,45],choic:[43,1263],choleski:1157,choos:[1021,1028,1053,1054,1208,1235,1251,1253,1263],choose_random_framework:65,chosen:[44,45,1208,1210,1235],chunk:[971,1013,1014,1015],chunk_siz:[971,1015],circl:[1021,1025],clark:1263,clear:[41,42,43,47,971,987],clear_framework_stack:65,clear_mem_on_dev:[422,971],clearli:42,click:1263,clip:[44,45,514,1066,1073,1074,1208,1224,1226,1263],clip_matrix_norm:1066,clip_max:[44,45],clip_min:[44,45],clip_vector_norm:[44,45,1066],clone:[44,45,971,990,991,992,993],close:[47,1021,1025,1039,1137,1142],closest:[943,949,1021,1033,1040],closest_valid_dtyp:943,cloth:41,code:[41,42,43,44,45,46,47,54,64,1263,1266],codebas:[43,54,971,1013,1014,1263],codomain:[1021,1023,1024,1026,1027,1034,1039,1048,1050,1060,1061,1062],colab:1263,collabor:[40,41,42],collect:[15,44,45,398,422,465,514,918,926,971,1066,1121,1137,1144,1174,1192,1204,1208,1238,1239,1267,1281,1295,1297],color:[44,45,46,1306,1307],column:[929,934,1157,1167,1208,1220],combin:[44,45,46,1137,1142,1263],combo:1266,come:[64,1266],comic:42,command:1263,comment:47,common:[41,44,45,47,1021,1028],common_key_chain:[44,45],commun:[42,47,1263,1266],communuti:47,compani:42,compar:[44,45,1066,1067,1069,1070,1249,1250],comparison_oper:[0,9,10],compat:[42,47,943,947,1021,1030,1032,1036,1041,1045,1046,1051,1052,1054,1055,1057,1157,1172,1208,1216,1230,1251,1253,1256,1260,1261,1262,1263],compil:[54,514,1293,1294,1297,1298,1299,1300,1301,1302],compile_on_next_step:[1293,1294,1297,1298,1299,1300,1301,1302],complet:[42,44,45,47,1157,1167],complianc:42,compliant:[1021,1039,1053,1054,1251,1253],compon:[42,1208,1215],composit:47,comput:[42,43,44,45,971,1015,1021,1025,1028,1030,1032,1037,1038,1041,1045,1046,1047,1052,1053,1054,1055,1056,1057,1064,1066,1073,1074,1077,1078,1121,1123,1124,1125,1126,1128,1129,1130,1132,1134,1137,1140,1144,1145,1146,1147,1148,1149,1150,1151,1153,1155,1157,1158,1161,1162,1163,1164,1166,1167,1168,1171,1172,1174,1175,1176,1177,1192,1196,1208,1216,1223,1251,1252,1253,1254,1255,1256,1257,1258,1259],concat:[44,45,971,1000,1001,1002,1003,1015,1066,1086],concaten:[44,45,514,1066,1086,1208,1263],concatten:[44,45,971,1000,1001,1002,1003,1015],conda:42,condit:[514,926,927,1192,1200,1208,1235],conditon:[1192,1200],config:[44,45],configur:[44,45],conflict:47,conform:[47,1021,1039],confus:43,connect:[42,1281,1291,1292],consid:[41,42,44,45,1021,1053,1054],consider:41,consist:[41,44,45,971,1003,1251,1252,1293,1294],consortium:[40,42,1266],constant:[971,980,981,1174,1175,1176,1177,1178,1179,1192,1196,1204,1205,1272,1273,1277,1280,1293,1294,1295,1296],constant_pad:1178,constantli:41,constitu:[44,45],construct:[1178,1186,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],constructor:[44,45,46,1066,1068,1303,1304],consum:971,cont_feat_dim:[1144,1155],contaienr:[44,45],contain:[15,18,19,41,46,47,54,929,933,938,940,941,942,943,948,971,990,994,1015,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1066,1073,1074,1075,1093,1111,1112,1121,1123,1124,1126,1128,1129,1130,1157,1158,1159,1160,1161,1163,1165,1167,1170,1172,1178,1182,1188,1189,1190,1191,1208,1209,1211,1213,1216,1224,1226,1239,1240,1246,1247,1251,1253,1254,1255,1256,1257,1258,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],container0:[44,45],container_combine_method:[44,45,46],container_rightmost:[44,45],container_typ:[465,1066],contains_sub_contain:[44,45],contains_sub_structur:[44,45],content:[44,45],context:[514,1144,1155,1208,1227,1281,1292],context_dim:[1281,1292],contextmanag:[65,66],continu:[42,43,47],contract:[44,45,1251,1252],contrari:42,contribut:1266,contributor:[47,1263],control:1263,conv1d:[1144,1281],conv1d_transpos:1144,conv1dtranspos:1281,conv2d:[1144,1281],conv2d_transpos:1144,conv2dtranspos:1281,conv3d:[1144,1281],conv3d_transpos:1144,conv3dtranspos:1281,convent:[41,44,45,1157,1163,1251,1252],conver:[971,987,998,1010,1017,1020],converg:43,convers:[16,17,18,19,43,44,45,54,1266],convert:[15,16,17,18,19,43,44,45,47,929,931,943,950,956,957,971,998,999,1066,1110,1116,1117,1137,1139,1143,1157,1173,1192,1194,1201,1271],convert_dtyp:943,convinc:42,convolut:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],cool:47,cooler:47,coordin:[1021,1025,1028,1208,1225],copi:[44,45,47,402,404,1066,1076,1192,1194],copy_arrai:[465,1066],copy_nest:1192,core:[41,971,1008,1263],corner:47,correct:[47,1251,1259,1263],correctli:[44,45,47,1021,1028,1157,1164,1246,1247,1251,1254,1257],correspond:[44,45,47,1208,1214,1239,1240,1246,1247,1251,1256,1258],cos:[1021,1064,1066,1086],cosh:1021,cosin:[1021,1023,1024,1034,1035],cost:[1121,1123,1124,1126,1128,1129,1130,1188,1189,1190,1191],cost_fn:[1188,1191],could:[42,43],count:[44,45,1178,1181,1260,1261,1262],cours:47,cprint:1306,cpu:[44,45,47,929,930,936,937,971,1008,1010,1016,1017,1020,1066,1087,1088,1104,1105,1208,1210,1220,1228,1229,1236,1239,1240,1241,1242,1243,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],creat:[42,44,45,64,929,930,931,932,933,934,935,936,937,938,939,942,971,980,981,1066,1087,1088,1104,1105,1115,1121,1134,1208,1210,1218,1220,1228,1229,1236,1239,1240,1241,1242,1243,1263,1266,1270,1271,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],create_if_abs:[44,45],create_vari:1272,creation:[44,45,46,47,403,404,405,406,407,408,409,410,411,412,413,414,415,930,931,932,933,934,935,936,937,938,939,940,941,942],crop:[1137,1141],crop_siz:[1137,1141],cross:[1174,1175,1176,1177,1208],cross_entropi:1174,cuda:[44,45,929,930,936,937,971,980,999,1016,1066,1087,1088,1104,1105,1208,1210,1220,1228,1229,1236,1239,1240,1241,1242,1243,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],cumprod:[465,1066],cumsum:1066,cumul:[1066,1077,1078],cupi:42,current:[43,44,45,46,47,943,950,960,970,971,980,1004,1005,1007,1011,1066,1079,1089,1094,1098,1101,1102,1192,1193,1200,1263],current_framework:65,current_framework_str:[514,1066],custom:[42,47],cut:41,cutoff_at_depth:[44,45],cutoff_at_height:[44,45],d_in:[1144,1145,1146,1147,1148,1149,1150],d_out:[1144,1145,1146,1147,1148,1149,1150],da_dim_s:971,da_tune_step:971,daniel:1263,dask:42,data:[40,42,44,45,46,47,929,930,931,932,933,934,935,938,939,940,941,942,947,948,949,950,954,955,956,957,958,959,960,961,962,970,971,973,974,975,976,977,978,983,984,985,999,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1066,1099,1113,1121,1127,1135,1144,1153,1157,1158,1159,1160,1161,1163,1165,1167,1172,1178,1181,1182,1208,1210,1216,1218,1220,1229,1230,1232,1236,1246,1247,1249,1250,1251,1253,1256,1258,1259,1260,1261,1262,1263,1266],data_format:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],data_typ:[416,418,419,420,421,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970],dataload:64,dataset:[44,45,64],datatyp:[44,45,929,931,943,949,961,962],dcdw:[1121,1123,1124,1126,1128,1129],debug_mod:48,debug_mode_in:[48,51],debugg:[49,50,51,52,53],decai:[1121,1128,1129,1297,1299,1300],decay_lambda:[1121,1128,1129,1297,1299,1300],decid:[44,45],decomposit:[1157,1158,1167,1169],decor:47,decrement:[1066,1095],dedic:[1121,1135,1270,1271],deep:[41,44,45,1263],deep_copi:[44,45],deeper:[41,971,993,997,1003,1192,1201,1263],deepli:[1192,1194],deepmind:43,def:[47,66,102,265,417,570,737,944,945,946,972,979,982,1122,1263,1273,1276,1279],default_dev:47,default_devic:971,default_dtyp:[47,943],default_float_dtyp:943,default_int_dtyp:943,default_key_color:[44,45,46],default_v:[1066,1080],defaultdevic:[971,972],defaultdtyp:[943,944],defaultfloatdtyp:[943,945],defaultintdtyp:[943,946],defer:47,defin:[47,1208,1215,1228,1236,1239,1241,1251,1253],definit:[47,1157,1158],degre:[1021,1064,1251,1259],delai:47,delet:47,delta:[1121,1123],demo:1263,denomin:[1066,1085,1091,1107,1111,1112,1204,1205,1295,1296],denot:47,dens:[1281,1291],depend:[42,47,1021,1022,1023,1024,1026,1027,1034,1039,1048,1049,1050,1060,1061,1157,1167,1169,1208,1235,1249,1250,1263],depth:[44,45,514,528,971,993,997,1003,1066,1092,1192,1201,1208,1228,1293,1294],depth_cutoff:[44,45],depthwis:[1144,1151,1281,1288],depthwise_conv2d:1144,depthwiseconv2d:1281,deriv:[929,933,935,939,1121,1123,1124,1126,1128,1129,1130,1192,1194,1201,1263,1293,1297,1301,1303],descend:[1157,1169,1170,1249,1250],descent:[1121,1126,1297,1302],describ:[44,45,1251,1252,1256,1258],descript:[1157,1172],design:[41,42],desir:[41,44,45,929,930,943,948,971,1016,1137,1142,1208,1210,1220,1221,1229,1236,1251,1254,1257],desired_aspect_ratio:[1137,1142],despit:42,det:1157,detect:[44,45,1192,1193,1200],detect_key_diff:[44,45],detect_shape_diff:[44,45],detect_value_diff:[44,45],determin:[41,44,45,47,929,930,943,948,949,955,960,961,962,970,971,1006,1008,1009,1018,1021,1023,1024,1026,1027,1030,1032,1034,1036,1039,1042,1043,1044,1048,1050,1051,1055,1060,1061,1062,1066,1067,1069,1070,1093,1094,1098,1099,1113,1120,1121,1127,1144,1155,1157,1158,1159,1160,1163,1168,1172,1188,1189,1190,1191,1208,1210,1260,1261,1262],dev:[44,45,46,47,402,403,404,406,409,410,412,422,465,467,468,473,474,514,515,525,528,531,929,930,931,933,936,937,939,971,974,975,977,978,980,981,984,985,987,988,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1010,1011,1012,1013,1014,1015,1016,1017,1020,1066,1087,1088,1104,1105,1121,1136,1208,1210,1220,1228,1229,1236,1239,1240,1241,1242,1243,1270,1271,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],dev_clon:[44,45,971],dev_clone_arrai:971,dev_clone_it:971,dev_clone_nest:971,dev_dist:[44,45,971],dev_dist_arrai:971,dev_dist_it:971,dev_dist_nest:971,dev_from_str:[47,422,971],dev_mapp:971,dev_str:[44,45],dev_to_str:[422,971],dev_unifi:971,dev_unify_arrai:971,dev_unify_it:971,dev_unify_nest:971,dev_util:971,devclonedit:971,devcloneditem:971,devclonednest:971,devdistit:971,devdistitem:971,devdistnest:971,develop:[41,42,43,47,1263],deviat:[43,44,45,1204,1205,1239,1242,1251,1257,1295,1296],devic:[21,42,44,45,47,402,405,407,408,411,415,423,514,524,929,930,931,932,933,934,935,936,937,938,939,940,941,942,973,974,975,976,977,978,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1066,1087,1088,1104,1105,1121,1136,1208,1210,1218,1220,1228,1229,1236,1239,1240,1241,1242,1243,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],devmanag:[971,979],devmapp:[971,981],devmappermultiproc:971,diag:[1157,1169],diagon:[929,934,940,941,1157,1171,1208,1220],dict:[15,16,17,18,19,44,45,46,971,973,976,980,981,983,993,994,995,996,997,1066,1081,1082,1083,1100,1188,1189,1190,1192,1194,1195,1196,1199,1201,1270,1271],dict_in:[44,45,46],dictat:47,dictionari:[44,45,46],did:42,diff:[44,45],diff_kei:[44,45],differ:[41,42,43,44,45,46,47,943,958,971,990,991,994,995,1144,1153,1251,1256,1258,1263],differenti:1263,dilat:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],dim:[44,45,47,1137,1138,1142,1157,1169,1208,1228,1281,1292],dim_siz:[44,45,971],dimens:[44,45,46,918,923,929,940,941,971,1002,1066,1081,1082,1083,1086,1119,1137,1141,1144,1145,1146,1147,1148,1149,1150,1151,1154,1157,1158,1159,1160,1161,1163,1164,1165,1167,1169,1170,1172,1174,1176,1177,1178,1180,1181,1182,1183,1184,1188,1189,1190,1191,1208,1212,1214,1215,1219,1222,1228,1230,1232,1233,1234,1239,1245,1246,1247,1251,1252,1253,1254,1256,1257,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288,1291,1292],dimension:[44,45,929,934,1157,1159,1163,1169,1172,1178,1184,1208,1232,1246,1247,1251,1253,1256,1258,1260,1261,1262],directli:[43,47,1192,1201],directori:[1066,1109,1114],discord:[41,42,43,47],discret:[1174,1176],discuss:[41,42,43,47],disk:[44,45,1137,1139],distanc:[1208,1210],distinct:[42,54],distribut:[44,45,971,990,994,995,996,997,1144,1152,1239,1240,1241,1242,1243,1281,1289,1293,1294],distributedarrai:[44,45],distrubt:[1174,1176],dive:1263,divid:[44,45,1021,1066,1111,1178,1184],dividend:[1021,1036],divis:[1021,1036,1066,1085,1091,1107,1111,1112,1121,1123,1124,1128,1297,1298,1299],divisor:[1021,1036,1121,1123,1124,1128,1297,1298,1299],doc:1263,docstr:47,document:47,doe:[42,44,45,47,1178,1184,1208,1210],doesn:1263,doing:[42,47],domain:[1021,1023,1024,1026,1027,1034,1039,1048,1050,1060,1061,1062],don:[43,47,1263],done:47,dopamin:43,dot:[1144,1155,1156,1157,1162,1281,1292],downscal:[1066,1073,1074],drag:1263,draw:[1239,1240,1242,1243],drawn:[1239,1240,1241,1242,1243],drop:1263,dropout:[1144,1281,1292],dropout_r:[1281,1292],ds_tune_step:971,dtype:[44,45,47,402,403,404,405,406,407,408,411,412,415,416,419,420,421,514,515,517,524,525,531,929,930,931,932,933,934,935,938,939,942,943,948,949,950,951,952,953,955,956,957,958,959,960,961,962,963,964,965,966,970,1208,1210,1218,1220,1228,1229,1236,1246,1247,1251,1256,1258],dtype_bit:[514,943],dtype_from_str:[47,514,943],dtype_in:[514,521,522,523,943,950,955,956,957,960,961,962,970],dtype_to_str:[514,943],due:42,duplic:[44,45,47],dure:[44,45,47,926,927,1066,1118,1121,1123,1124,1128,1157,1163,1188,1189,1190,1191,1293,1294,1297,1298,1299,1301],dynam:[47,514,518,926,927],each:[41,42,43,44,45,46,47,54,971,980,981,990,991,992,993,994,995,996,1002,1014,1015,1021,1022,1023,1024,1025,1026,1027,1030,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1063,1066,1067,1121,1124,1126,1128,1129,1130,1137,1140,1144,1145,1146,1147,1148,1149,1150,1151,1152,1157,1158,1159,1163,1165,1169,1178,1179,1183,1184,1186,1187,1192,1196,1208,1209,1216,1233,1239,1240,1251,1252,1266,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],easi:42,easili:[42,1263],ecosystem:1266,edg:[1178,1179,1187,1208,1213],effect:[42,1121,1130],effective_grad:[1121,1130],effort:42,eigenvalu:[1157,1161],eigvalsh:1157,einop:[42,44,45,1066,1081,1082,1083],einops_rearrang:[44,45,1066],einops_reduc:[44,45,1066],einops_repeat:[44,45,1066],einstein:[44,45,1251,1252],einsum:[44,45,1251],either:[44,45,47,1021,1043,1048,1050,1051,1060,1066,1080,1100,1157,1163,1188,1189,1190,1191,1208,1225,1227,1251,1256,1258,1281,1292,1293,1294],electron:42,element:[44,45,47,918,919,920,921,922,923,924,925,929,934,935,940,941,943,948,971,992,996,1002,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1069,1070,1073,1074,1077,1078,1085,1117,1144,1152,1157,1163,1167,1178,1181,1183,1184,1208,1209,1210,1211,1213,1216,1217,1220,1221,1224,1226,1235,1251,1252,1253,1254,1255,1256,1260,1261,1262,1281,1289],elementwis:[44,45,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065],elementwise_affin:[1295,1296],elemtn:[1239,1240],els:[47,1066,1071,1080,1084],elsewher:[929,934,1208,1235],email:42,emphas:1263,empti:[44,45,402,929,1260,1261,1262],empty_lik:[402,929],enabl:[42,44,45,46,47,54,1263],encapsul:[943,959],encod:[42,1066,1086,1137,1139],encourag:[42,1266],end:[54,1208,1210,1263,1266],engag:[42,47],ensur:47,entir:[42,43,44,45,971,1015,1251,1253,1256,1258,1259,1260,1261,1262,1263,1281,1290],entri:[44,45,929,936,937,1178,1184,1208,1232],entropi:[1174,1175,1176,1177],environ:1263,eps:[416,943,958],epsilon:[1121,1123,1124,1128,1174,1175,1176,1177,1204,1205,1295,1296,1297,1298,1299],equal:[44,45,929,934,935,1021,1042,1043,1064,1066,1067,1069,1070,1157,1160,1178,1179,1184,1187,1208,1239,1243,1249,1250],equality_matrix:[1066,1067],equat:[44,45,1251,1252],equival:[1021,1053,1054,1064,1157,1172,1208,1210],erf:1021,erron:43,error:[43,44,45,47,918,919,971,1021,1037,1208,1232,1251,1253,1293,1294,1297,1301],especi:41,essenti:[41,42,47],etc:[43,44,45,47,929,930,936,937,971,1016,1066,1087,1088,1104,1105,1208,1210,1220,1228,1229,1236,1239,1240,1241,1242,1243,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],euclidean:[1157,1172],euler:928,evalu:[44,45,1021,1039,1048,1049,1050,1056,1063,1192,1193,1200,1208,1225,1260,1261,1262],even:[42,43,47],evenli:[44,45,929,936,937,1178,1184,1208,1210],everi:[47,929,935,1066,1067],everyon:43,everyth:43,evolv:41,exact:[44,45],exactli:[41,43,1266],exampl:[43,47,926,927,1208,1213,1233,1263],example_input:[514,518,926,927],exce:[1208,1226],except:[44,45,48,51,929,934,943,947,1066,1071,1080,1118,1208,1210,1214,1260,1261,1262],exchang:42,excit:[42,1263],exclud:[65,67,1208,1210,1239,1243],exclus:[44,45,465,466,472,1066,1077,1099,1121,1127,1239,1241],execut:[47,1066,1118],execute_with_gradi:[1121,1263],exist:[41,42,44,45,1066,1080,1263,1297,1301],exp:[1021,1039,1051],expand:[44,45,1066,1086,1178,1180],expand_dim:[44,45,1178],expect:[43,1066,1068],explain:[47,1266],explicitli:[47,1281,1290,1292,1293,1294],explod:[40,41],explos:[40,42],expm1:1021,expon:[47,1066,1112],exponenti:[47,1021,1037,1038,1051],expos:[41,929,930,1066,1075],express:[1021,1023,1027,1034,1060,1208,1225],exsit:[44,45],extend:47,extens:47,extra:[44,45,46,1121,1125],eye:[402,929,1157,1162],eyebrow:42,fabian:1263,fabio:1263,factor:[42,971,980,1013,1014,1015,1121,1123,1124,1128,1129,1144,1145,1146,1147,1148,1149,1150,1151,1157,1158,1169,1281,1282,1283,1284,1285,1286,1287,1288,1297,1298,1299,1300],fail:47,falck:1263,fall:[54,1293,1294,1297,1301],fallback_to_non_compil:[1293,1294,1297,1301],fals:[15,18,19,44,45,46,65,72,73,74,75,76,422,465,466,472,475,514,520,943,951,952,953,954,971,989,1002,1010,1015,1020,1021,1042,1043,1044,1053,1054,1066,1067,1077,1080,1084,1086,1099,1100,1119,1121,1124,1125,1126,1127,1128,1129,1130,1157,1158,1164,1172,1178,1184,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1208,1219,1231,1235,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1270,1271,1293,1294,1297,1298,1299,1300,1301,1302],fan_in:1272,fan_mod:1272,fan_out:1272,faq:[41,42,43],far:[1192,1193,1200],fastai:43,faster:[926,927],favourit:1263,fdlibm:[1021,1039],feasibl:42,feat_dim:[1144,1155,1156],fed:[971,1015],feed:[971,1015],few:[43,47,64,1266],field:[1157,1167],file:[44,45,47,1066,1109,1114,1293,1294],filepath:[44,45],fill:[44,45,929,932,935,938,939,942,1208,1218,1229,1239,1241],fill_valu:[402,408,514,524,929,935,1208,1218],filter:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],filter_s:[1281,1282,1283],filter_shap:[1281,1284,1285,1286,1287,1288],find:[41,44,45,47],find_sub_contain:[44,45],find_sub_structur:[44,45],finfo:[102,265,416,417,570,737,943],finish:1263,finit:[1021,1042],first:[41,42,44,45,47,926,927,929,936,937,971,1002,1021,1030,1032,1041,1045,1046,1051,1052,1054,1055,1057,1066,1069,1121,1125,1157,1160,1163,1167,1169,1178,1185,1188,1189,1190,1191,1192,1193,1200,1208,1214,1215,1216,1233,1239,1245,1246,1247,1281,1292,1293,1294,1297,1301],firstlayersiren:1272,fist:[971,1015],fit:[44,45,398,422,465,514,1137,1142,1178,1183],fix:47,flag:[44,45,47,1121,1127],flat:[44,45,47,1066,1104,1178,1183],flat_list:[44,45],flatten:[44,45,1066,1086,1157,1172,1178,1183,1246,1247,1251,1254,1257],flatten_key_chain:[44,45,1293,1294],flax:43,flexibl:1263,flip:[44,45,1021,1031,1178],float32:[47,514,525,929,930,943,948,956,957,1208,1210,1220,1229,1236],float_dtyp:[943,952,965],float_img_to_uint8_img:1137,floor:[1021,1066,1085,1208],floormod:[465,1066],folder:[47,1263],follow:[41,42,44,45,47,54,943,959,971,1015,1066,1095,1096,1097,1111,1112,1121,1124,1126,1128,1129,1130,1144,1155,1156,1157,1167,1172,1192,1196,1201,1263,1281,1291,1297,1301],followng:[943,958],fomaml_step:1188,forget:[1121,1123,1124,1128,1297,1298,1299],forgiven:42,fork:[1208,1227],forkserv:[1208,1227],form:[15,16,17,18,19,42,44,45,929,930,931,940,941,1121,1124,1126,1128,1129,1130,1144,1157,1158,1159,1160,1161,1165,1167,1170,1192,1194,1201],format:[44,45,47,929,930,943,948,950,954,971,989,1208,1210,1220,1229,1236,1251,1252,1263],format_fn:[44,45],format_key_chain:[44,45],forward:[1293,1294,1297,1301],found:[44,45,46],foundat:42,fourier:[1066,1086],fourier_encod:1066,frame:42,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,221,222,223,224,225,226,228,231,233,234,235,236,237,238,239,241,242,245,254,255,256,257,258,259,260,261,262,263,265,266,267,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,376,377,378,379,381,384,386,387,388,389,390,391,392,393,395,396,399,400,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,489,490,491,492,494,495,496,497,498,499,500,501,502,503,504,505,506,507,509,510,511,512,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,535,537,540,542,543,544,545,546,547,548,550,551,556,557,558,559,560,561,562,563,564,565,566,567,568,570,571,572,573,574,576,577,578,579,580,581,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,623,624,625,626,627,628,629,630,631,633,634,635,636,638,639,640,642,643,644,646,647,648,649,650,651,652,653,654,655,656,657,658,659,661,662,663,664,665,666,667,668,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,689,690,691,692,694,697,699,700,701,702,703,704,705,707,708,711,712,713,714,715,716,717,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,746,747,748,749,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,821,822,823,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,895,896,897,898,899,900,902,905,907,908,909,910,911,912,913,915,916,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240,1241,1242,1243,1244,1245,1247,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1266,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1298,1299,1300,1301,1302,1304,1305,1307],framework_handl:[65,67,68,69,70,71,72,73,74,75,76,77],framewrk:[1208,1227],frantic:43,free:47,freed:47,freedom:[1251,1259],freeli:47,frequenc:[1066,1086],from:[41,42,43,44,45,46,47,929,931,933,935,939,943,950,963,971,980,981,1015,1021,1062,1066,1080,1087,1088,1115,1121,1124,1128,1137,1141,1144,1152,1155,1157,1160,1178,1181,1188,1189,1190,1191,1192,1194,1201,1208,1220,1230,1232,1235,1239,1240,1241,1242,1243,1251,1255,1256,1258,1260,1261,1262,1263,1266,1270,1271,1281,1289,1292,1297,1301],from_cal:[1293,1294],from_disk_as_hdf5:[44,45],from_disk_as_json:[44,45],from_disk_as_pickl:[44,45],from_flat_list:[44,45],from_numpi:[44,45],front:[41,54,1266],frustrat:47,fulfil:54,full:[42,43,47,514,943,958,1157,1167,1208,1263],full_lik:[402,929],full_matric:[1157,1169],fulli:[43,47,1263,1281,1291,1292],func:[44,45,514,518,926,927,971,1015,1066,1072,1121,1125],fundament:41,funni:42,further:[42,43,47,54],futur:[41,43],gain:1272,gamma:[1204,1205],gather:[44,45,465,1066,1088],gather_nd:[44,45,465,1066],gauss:[1021,1037],gaussian:[918,919],geglu:1267,gelu:[398,918,1267],gener:[23,44,45,47,422,466,467,468,469,470,471,472,473,474,475,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,926,929,936,937,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1127,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1239,1241,1243,1244,1297,1301],geometr:[1066,1086],get:[43,44,45,47,943,954,955,958,959,971,980,981,989,1004,1005,1010,1014,1017,1020,1066,1068,1089,1090,1091,1103,1263,1266,1281,1290],get_all_arrays_in_memori:1066,get_all_arrays_on_dev:971,get_framework:65,get_initial_st:[1281,1290],get_min_bas:1066,get_min_denomin:1066,get_mod_kei:[1293,1294],get_num_dim:[514,1208],get_referrers_recurs:1066,gist:1263,github:41,give:[43,47,1208,1230],given:[42,43,44,45,47,929,930,932,936,937,943,948,971,1004,1010,1013,1014,1015,1017,1020,1066,1077,1078,1088,1104,1105,1119,1121,1123,1124,1126,1128,1129,1130,1144,1145,1146,1147,1148,1149,1150,1151,1157,1162,1173,1178,1181,1183,1184,1186,1192,1197,1198,1208,1210,1213,1229,1234,1236,1239,1242,1243,1245,1251,1254,1257,1270,1271],global:[44,45,46,943,951,952,953,971,980,981,988,1013,1014,1015,1066,1079,1090,1091,1103,1106,1107,1108,1111,1112,1121,1136,1204,1205,1295,1296],global_framework:[65,69],global_norm:[44,45],glorotuniform:[1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291],gmail:42,goal:42,gone:42,good:47,googl:[42,1263],got:[47,1263],gpu0:47,gpu2:47,gpu:[971,1006,1009],gpu_is_avail:[422,971],grad:[1263,1297,1301],gradient:[25,44,45,971,1015,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1140,1188,1189,1190,1191,1297,1298,1299,1300,1301,1302],gradient_descent_upd:[1121,1188,1189,1190,1191],gradient_imag:1137,gradienttrack:[1121,1122],graph:[43,1121,1124,1126,1128,1129,1130,1293,1294],great:[42,43],greater:[44,45,1021,1023,1040,1208,1210,1217,1232,1239,1243],greater_equ:1021,greatest:[1021,1040],green:[44,45,46,1306,1307],grid:[1208,1225],ground:41,group:[1137,1142],grown:41,growth:42,guarante:43,guid:47,gym:1263,h5_file_s:[44,45],h5_obj_or_filepath:[44,45],h5py:[44,45],haiku:43,half:[1208,1210,1239,1243],hand:1263,handl:[44,45,46,47,926,927,971,987,989,998,999,1010,1017,1020,1121,1124,1126,1128,1129,1130,1297,1298,1299,1300,1301,1302],handler:54,happen:[43,47],happi:43,hardwar:42,has:[41,42,43,44,45,47,1021,1022,1157,1163,1168,1208,1233,1251,1256,1258],has_kei:[44,45],has_key_chain:[44,45],has_nan:[44,45,1066],hasn:43,have:[40,41,42,43,44,45,47,929,932,933,935,938,939,940,941,942,943,947,958,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1066,1081,1082,1083,1121,1127,1135,1157,1158,1159,1160,1161,1163,1165,1167,1169,1170,1172,1178,1181,1182,1208,1214,1215,1216,1218,1233,1246,1247,1249,1250,1251,1253,1256,1258,1259,1260,1261,1262,1263],haven:47,hdf5:[44,45,1293,1294],head:[1144,1155,1281,1292],head_dim:[1281,1292],height:[1137,1142],height_cutoff:[44,45],help:[47,64,65,416,422,423,943,971,983,984,985,986,1121,1263,1272,1274,1275,1277,1278,1280],here:[47,1263],hidden:[1144,1154,1281,1290],hierarch:[1066,1075],hierarchi:[44,45],high:[43,44,45,1239,1241,1243],higher:[1121,1124,1126,1128,1129,1130,1157,1169],highest:[1239,1241],highli:1263,hinder:41,hint:47,hold:[929,930,943,948,1066,1104,1105,1208,1210],honk:43,hope:42,hopefulli:[41,42,43],host:[42,1263],hot:[1208,1228],hour:[43,47],how:[41,43,1263,1266,1281,1292,1293,1294],howev:[42,47],html:42,huge:[40,42],hyperbol:[918,925,1021,1024,1026,1029,1035,1061,1065],hypothet:47,icon:1263,idea:[43,1263],ident:[41,43,44,45,47,514,1208],identical_array_shap:[44,45],identical_config:[44,45],identical_structur:[44,45],ieee:[42,928,943,958,1021,1039,1062],if_exist:[44,45],ignit:43,ignor:[44,45,1297,1301],ignore_key_error:[44,45],ignore_miss:[1297,1301],ignore_non:[44,45],iii:47,iinfo:[416,943],imag:[27,54,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1208,1222],image_dim:[1137,1141],immedi:1263,implement:[47,943,963,1021,1022,1023,1024,1026,1027,1034,1039,1048,1049,1050,1060,1061,1249,1250,1251,1253,1263],improv:43,in_featur:[1144,1153],inadvert:47,includ:[42,44,45,47,929,931,1066,1093,1111,1112,1120,1157,1172,1192,1193,1208,1210,1239,1243,1251,1253,1256,1260,1261,1262,1281,1291,1292,1295,1296],include_deriv:[1192,1194,1201],include_empti:[44,45],include_inf:[44,45,1066,1093,1120],include_nest:[1192,1193],include_self:[44,45],inclus:[47,1239,1241],incom:[1144,1153],incompat:[943,947],increas:[41,971,993,997,1003,1178,1179,1180,1187,1192,1201],increment:[1066,1096],inde:1263,indent:[44,45,46],independ:[1239,1240],index:[44,45,514,929,934,1066,1087,1088,1192,1195,1197,1198,1199,1202,1208,1211,1225,1232,1233,1246,1247,1249,1250],index_nest:1192,indic:[44,45,465,467,468,473,474,514,528,918,923,1066,1087,1088,1104,1105,1144,1145,1146,1147,1148,1149,1150,1151,1157,1172,1192,1193,1195,1197,1198,1199,1200,1202,1203,1204,1205,1208,1211,1221,1228,1239,1240,1246,1247,1249,1250,1281,1282,1283,1284,1285,1286,1287,1288,1293,1294],indices_wher:[514,1208],indistinguish:[1021,1062],industri:42,inevit:43,inf:[44,45,1066,1093,1120,1157,1172],infer:[926,927,929,931,933,935,939,1137,1141,1208,1219,1220,1230,1231,1251,1255],infin:[1021,1022,1024,1026,1027,1033,1034,1039,1040,1042,1043,1048,1050,1051,1060,1061,1062,1157,1172,1251,1253,1260,1261,1262],infinit:[1021,1062],inform:[943,958,959,1121,1132],init_c:[1144,1154],init_h:[1144,1154],init_on_first_step:[1297,1301],initi:[42,44,45,46,47,65,416,422,423,943,971,983,984,985,986,1121,1144,1154,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1297,1301],initialz:[1293,1294],inner:[1157,1163,1188,1189,1190,1191],inner_batch_fn:[1188,1189,1190],inner_batch_shap:[1144,1153],inner_cost_fn:[1188,1189,1190],inner_grad_step:[1188,1189,1190,1191],inner_learning_r:[1188,1189,1190,1191],inner_optimization_step:[1188,1189,1190,1191],inner_v:[1188,1189,1190],innermost:[929,940,941,1157,1158,1159,1160,1161,1165,1167,1170],innov:42,inplac:[44,45,1066,1071,1094,1098,1113,1121,1124,1126,1128,1129,1130,1270,1271,1297,1298,1299,1300,1301,1302],inplace_arrays_support:[465,1066],inplace_decr:[465,1066],inplace_incr:[465,1066],inplace_oper:[0,11,12],inplace_upd:[44,45,465,1066,1270,1271],inplace_variables_support:[465,1066],input:[15,18,19,44,45,46,47,918,919,920,921,922,923,924,925,926,927,929,931,933,935,939,940,941,943,948,949,951,952,953,954,955,961,962,963,971,980,981,988,989,990,993,994,997,1003,1015,1016,1021,1022,1023,1024,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1071,1073,1074,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1093,1095,1096,1097,1099,1110,1113,1115,1116,1117,1119,1120,1121,1125,1127,1132,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1167,1169,1170,1172,1178,1179,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1204,1205,1208,1209,1211,1212,1213,1214,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1231,1232,1233,1234,1239,1240,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1295,1296],input_ax:[971,1015],input_channel:[1281,1282,1283,1284,1285,1286,1287,1290,1291],insert:[1178,1180,1246,1247],insid:47,instal:1263,instanc:[15,16,17,18,19,44,45,47,971,980,1270,1271,1303,1304],instant:42,instead:[44,45,47,1251,1254,1257],int16:[1251,1256,1258],int32:[47,1251,1256,1258],int64:[929,930,943,948,1208,1210,1220,1229,1236,1251,1256,1258],int_dtyp:[943,953,966],integ:[44,45,943,959,962,963,1021,1022,1030,1031,1032,1033,1040,1055,1059,1157,1172,1178,1184,1208,1210,1217,1239,1241,1244,1251,1253,1256,1258,1260,1261,1262],integr:1263,intel:42,intend:47,inter:1263,interact:1263,interchang:[44,45,1178,1185],interest:1263,interfac:[42,929,930],intermedi:[44,45],intern:[44,45,971,1121,1135,1192,1193,1200,1201,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1303,1304],interoper:42,interpol:[1208,1222],interpret:[929,931],interv:[44,45,929,936,937,1021,1025,1208,1210,1213,1239,1243,1260,1261,1262],introduc:41,inv:1157,invalid:[1260,1261,1262],invalid_dtyp:943,invent:41,invers:[1021,1023,1024,1025,1026,1027,1029,1157,1162,1166],invert:[1021,1031,1157,1162,1166],investig:47,invoc:[926,927],involv:[42,943,963,1266],irrespect:1263,is_arrai:[465,1066],is_float_dtyp:943,is_int_dtyp:943,is_vari:1121,isfinit:1021,isinf:1021,isnan:1021,issu:43,issue_numb:47,item:[15,19,44,45,943,951,971,980,981,983,990,992,994,996,1002,1066,1075,1092,1111,1112,1192,1196,1197,1198,1201,1202,1203,1263,1293,1294],iter:[15,16,17,18,19,43,44,45,46,926,927,971,974,975,977,978,980,981,984,985,992,994,995,996,997,1002,1015,1066,1067,1105,1178,1179,1183,1184,1186,1187,1192,1193,1194,1196,1200,1201,1208,1212,1214,1220,1225,1229,1230,1231,1233,1234],iterbal:[971,992,996,1002],its:[971,1015,1157,1163,1178,1185,1208,1220,1230,1234,1263],itself:[41,47,1192,1201],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,50,51,52,53,54,64,65,67,68,69,70,71,72,73,74,75,76,77,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,465,466,467,468,469,470,471,472,473,474,475,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,973,974,975,976,977,978,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1266,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1307],ivy_backend:[44,45],ivy_test:47,ivyh:[44,45,46],jame:1263,jax:[42,43,47,1121,1127,1263],jax_concat:1263,jnp:1263,join:[44,45,1208,1214,1233],journal:1263,journei:1266,json:[44,45],json_filepath:[44,45],jsonabl:[44,45],jupyt:42,just:[42,43,47,1263,1281,1290],kaimingnorm:[1272,1276],keep:[44,45,971,1016,1066,1119,1263],keep_inner_v:[1188,1189,1190],keep_non:[44,45],keep_orig:[44,45],keep_outer_v:[1188,1189,1190],keepdim:[44,45,465,475,1066,1119,1157,1164,1172,1246,1247,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262],kei:[15,16,17,44,45,46,47,971,983,1066,1075,1144,1155,1156,1188,1189,1190,1192,1195,1199,1263,1270,1271,1281,1292,1297,1301],kept:[44,45,46,1188,1189,1190],kera:43,kernel:[1144,1154],key1:[44,45],key2:[44,45],key3:[44,45],key_chain:[44,45],key_chains_contain:[44,45],key_length_limit:[44,45,46],key_slic:[44,45],keychain:[44,45],keychain_map:[44,45],keyword:[15,16,17,44,45,46,971,980,981,993,997,1003,1066,1068,1081,1082,1083,1100,1192,1196,1293,1294],keyword_color_dict:[44,45,46],kind:[943,958,959,1251,1256,1258],know:43,kwarg:[15,16,17,44,45,46,65,69,971,980,993,997,1003,1066,1100,1270,1271,1293,1294],kwarg_stateful_idx:[1293,1294],label:[47,1174,1175,1176,1177],lamb:[1121,1128,1297],lamb_upd:1121,lambda:[1297,1300,1302],languag:[41,43],lar:[1121,1128,1129,1297],larger:[943,958,1208,1213],largest:[44,45,943,958,959,1208,1217],lars_upd:1121,last:[43,44,45,918,923,1144,1154,1157,1160,1164,1169,1178,1181,1184,1208,1210,1215,1222,1233,1249,1250,1260,1261,1262,1281,1291],later:[44,45,1066,1072],latest:[1281,1290],layer:[41,1121,1124,1126,1128,1130,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1204,1205,1263,1272,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],layer_norm:1204,layernorm:1295,layerwis:[1121,1129,1297,1300],lead:[42,43,44,45,46,1157,1167],leading_shap:[44,45],leaf:[15,18,19,44,45,1192,1193,1200],leaf_keys_onli:[44,45],leafwis:[44,45],leaki:[918,919,920],leaky_relu:[398,918],learn:[41,42,1121,1124,1126,1128,1129,1130,1188,1189,1190,1191,1239,1245,1251,1255,1263,1297,1298,1299,1300,1301,1302],learnabl:[1204,1205,1295,1296],least:[47,1157,1163],leav:[15,18,19,44,45,1192,1193,1194,1200,1201],left:[44,45,47,1157,1164,1246,1247,1251,1254,1257,1263],leftmost:[44,45],length:[44,45,46,1157,1170,1208,1210,1230,1232,1234],lenton2021ivi:1263,lenton:1263,less:[42,44,45,47,1021,1023,1024,1033,1048,1050,1062,1157,1172,1239,1243],less_equ:1021,let:43,level:[43,1263],librari:[41,42,43,64,1021,1039,1053,1054,1251,1253,1263],lies:41,lightn:43,lightweight:1263,like:[42,47,1121,1127,1239,1243,1263],likewis:47,limit:[44,45,46,47,943,958,959,1066,1073,1074,1208,1213],linalg:29,line:[43,47,64,1266],linear0:1263,linear1:1263,linear:[918,919,920,921,1066,1086,1144,1152,1208,1222,1263,1281,1282,1283,1284,1285,1286,1287,1288],linear_algebra:[1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173],linear_resampl:[514,1208],linearli:[1066,1086],link:[47,1263],linspac:[402,929,1208,1210],list:[15,18,19,44,45,402,405,411,415,929,930,931,932,938,942,971,980,981,990,991,993,994,995,997,1000,1001,1015,1066,1070,1110,1115,1119,1144,1145,1146,1147,1148,1149,1150,1151,1178,1180,1181,1184,1188,1189,1190,1192,1193,1194,1196,1200,1201,1208,1210,1225,1260,1261,1262,1263,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288],list_join:[44,45,46],list_stack:[44,45],liter:[1157,1172],littl:41,live:[42,43],load:[44,45],loader:1263,local:47,local_set:[1066,1092],locat:[47,1239,1240],log10:1021,log1p:1021,log2:1021,log:[929,937,1021,1049,1051,1157,1168,1174,1175,1176,1177],logaddexp:1021,logarithm:[1021,1047,1048,1049,1050,1051,1157,1168],logdet:[1157,1168],logic:[31,1021,1052,1053,1054,1260,1261,1262],logical_and:1021,logical_not:1021,logical_or:1021,logical_xor:1021,logit:[1174,1177],logspac:[402,929],look:[41,47],loop:[1188,1189,1190,1191],loss:[1175,1176,1177,1263],loss_fn:1263,lot:[42,43],love:43,low:[44,45,1239,1241,1243],lower:[44,45,47,929,934,940,1157,1158,1208,1224,1239,1243],lower_depth:[1293,1294],lowest:[15,18,19,44,45,1192,1201,1239,1241],lstm:[1144,1154,1281],lstm_updat:[47,1144],lucid:43,machin:[42,943,958,959,1239,1245,1251,1255,1263],made:[42,47],magnitud:[1021,1022,1157,1170],mai:[43,1021,1041,1046,1053,1054,1066,1080,1208,1210,1216,1249,1250,1251,1253,1263],main:[929,934,940,941,1157,1160,1208,1220,1263],mainli:1263,maintain:[41,47,1249,1250],major:42,make:[42,43,47,971,1263],maml:[1188,1189,1190],maml_step:1188,manag:[43,971],mandat:42,manhattan:[1157,1172],mani:[41,42,43,44,45,47,1178,1184,1263],manipul:[41,1179,1180,1181,1182,1183,1184,1185,1186,1187],manner:[15,18,19,41,44,45,47,1192,1201],manual:[1192,1193,1200],map:[44,45,46,971,980,1192,1197,1198,1201,1281,1292],map_cont:[44,45],map_nest_at_index:1192,map_nest_at_indic:1192,map_sequ:[44,45],mapper:[971,980,981],mark:47,mask:[1144,1155,1156],master:47,match:[44,45,1066,1100],match_kwarg:1066,math:33,mathbb:[1157,1173],mathbf:[1157,1173],mathemat:[928,1021,1039,1157,1172],matmul:[47,1157,1208],matric:[929,940,941,1144,1153,1157,1158,1159,1160,1161,1165,1167,1170],matrix:[44,45,929,940,941,1066,1067,1073,1144,1153,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1170,1173,1208,1223,1281,1291],matrix_norm:[44,45,1157],matrix_transpos:1157,matter:[41,1263],matur:42,max:[44,45,416,943,958,959,1066,1073,1074,1082,1104,1105,1208,1224,1251,1297,1299],max_batch_s:[44,45],max_chunk_s:[971,1015],max_depth:[44,45,971,975,978,985,993,997,1003,1066,1092,1192,1201],max_dev_dim_step_ratio:971,max_freq:[1066,1086],max_length:[44,45],max_norm:[44,45,1066,1073,1074],max_split_factor_step_s:971,max_trust_ratio:[1121,1128,1297,1299],maxim:1263,maximis:1263,maximum:[44,45,46,971,993,997,1003,1015,1066,1073,1074,1086,1121,1128,1192,1201,1208,1213,1246,1247,1251,1253],mayb:[15,18,19],mean:[44,45,971,1000,1001,1002,1003,1015,1066,1082,1188,1189,1190,1191,1192,1196,1239,1242,1251,1257,1272],measur:[1144,1155,1281,1292],mechan:[64,1263],member:[42,47],memori:[64,971,987,1010,1015,1017,1020,1144,1154,1263],mention:[42,47],merg:47,merge_with_upstream:47,meshgrid:[514,1208],messag:[42,1306,1307],meta:[35,1189,1190,1191],method:[44,45,46,47,929,930,1066,1075,1104,1105,1121,1128,1129,1192,1193,1200,1201,1208,1225,1263,1281,1292,1293,1294],microsoft:42,might:[1066,1080],min:[44,45,416,943,958,959,1066,1082,1104,1105,1111,1157,1167,1170,1172,1208,1226,1251],min_bas:[1066,1112],min_denomin:[1066,1111],min_dev_dim_s:971,min_sf_tune_step:971,min_unit_dev_tune_step:971,mind:1263,mini:[1204,1205,1295,1296],minimum:[44,45,929,930,943,948,971,1021,1022,1066,1090,1091,1106,1107,1111,1112,1208,1210,1211,1213,1251,1253,1255],miss:[1297,1301],mission:42,mix:[943,963],ml_framework:[1208,1210],mod:[1066,1085],mod_depth:[1293,1294],mod_height:[1293,1294],mod_with_top_mod_key_chain:[1293,1294],mode:[44,45,926,927,971,1000,1001,1002,1003,1015,1157,1167,1169],model:1263,modern:[41,42],modin:42,modul:[43,44,45,46,65,1208,1227,1263,1267,1268,1269,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1295,1296,1303,1304],moment:[1121,1123,1124,1128,1297,1298,1299],momentum:42,month:41,more:[47,1021,1039,1157,1163,1178,1181,1208,1233,1263],most:[42,44,45,47,1263],motherboard:42,motiv:42,move:[44,45,47,971,1016],much:[42,47,1263],multi:[54,1144,1155,1208,1227,1266,1281,1292],multi_head_attent:1144,multi_index_nest:1192,multi_map:[44,45],multidev:[971,982,983,984,1003],multidevcontain:[44,45],multidevic:[971,980],multidevit:[971,974,977,980,981,985],multidevitem:[971,973,976],multidevnest:[971,975,978],multiheadattent:1281,multinomi:1239,multipl:[43,44,45,1066,1100,1157,1162,1178,1184,1204,1205,1246,1247,1251,1253,1254,1256,1257,1258,1260,1261,1262,1281,1291],multipli:[44,45,1066,1077],multiprocess:[44,45,46,514,971,980,1208],must:[41,43,44,45,46,47,929,932,933,934,935,938,939,940,941,942,943,947,971,1000,1001,1002,1003,1015,1021,1022,1023,1024,1026,1027,1028,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1045,1046,1048,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1066,1075,1105,1157,1158,1159,1160,1161,1163,1165,1167,1172,1178,1181,1182,1208,1210,1214,1215,1216,1224,1226,1233,1239,1244,1246,1247,1249,1250,1251,1253,1255,1256,1258,1259,1260,1261,1262,1297,1301],mutabl:[1192,1194,1201],mutlidevic:[971,980],mw_tm1:[1121,1124,1128],mx_concat:1263,mxn:[929,940,941,1157,1160,1165,1167,1170],mxnet:[42,47,1263],my_func:47,mymodel:1263,n_col:[402,407,929,934],n_row:[402,407,929,934],name:[47,926,927,1157,1167],name_of_your_branch:47,name_of_your_pr_branch:47,namedtupl:[1157,1167],namespac:47,nan:[44,45,47,928,1021,1022,1023,1024,1026,1027,1033,1034,1039,1040,1042,1044,1048,1050,1051,1060,1061,1062,1066,1093,1120,1251,1253,1260,1261,1262],nativ:[15,17,18,19,44,45,47,943,949,956,957,971,987,989,998,999,1010,1017,1020,1263,1270,1271],native_modul:[1270,1271],native_module_class:[1270,1271],nativearrai:[15,18,19,47,929,930,931,933,935,936,937,939,940,941,943,947,948,954,958,959,961,962,963,971,989,1015,1016,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1073,1074,1076,1077,1078,1081,1082,1083,1085,1086,1087,1088,1093,1104,1105,1115,1116,1117,1119,1120,1157,1158,1161,1163,1165,1168,1169,1170,1172,1173,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1192,1194,1201,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1246,1247,1249,1250,1251,1253,1255,1256,1259,1260,1261,1262],natur:[42,1021,1047,1049,1157,1168],ncdhw:[1144,1149,1150,1281,1286,1287],nchw:[1144,1147,1148,1151,1281,1284,1285,1288],ncw:[1144,1145,1146,1281,1282,1283],ndarrai:[47,402,405,406,407,408,411,412,413,414,415,416,418,419,420,421,929,931,1066,1116],ndhwc:[1144,1149,1150,1281,1286,1287],ndim:[1157,1167],nearest:[1021,1059],necess:42,need:[43,47,1066,1073,1074,1144,1146,1148,1150,1263,1281,1283,1285,1287],neg:[44,45,918,920,929,934,1021,1042,1043,1157,1172,1178,1181,1260,1261,1262],negative_slop:1272,nest:[15,16,17,18,19,44,45,46,929,930,971,993,997,1003,1066,1115,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1293,1294,1297,1298,1299,1300,1301,1302],nested_indices_wher:1192,nested_map:1192,net:[42,43],network:[42,1144,1153,1263,1267,1281,1293,1294],neural:[1144,1263,1267,1281],never:47,new_std:[1204,1205,1295,1296],newest:41,newli:[47,926,927,1066,1072,1208,1212],newlin:[44,45,46],newshap:[1208,1212,1230],next:[43,943,958,1293,1294,1297,1298,1299,1300,1301,1302],nhwc:[1144,1147,1148,1151,1281,1284,1285,1288],nice:43,node:[42,44,45,1192,1193,1200],noinspect:[47,944,945,946,972,1122],non:[44,45,926,927,943,960,1021,1053,1054,1157,1159,1172,1246,1247,1251,1253,1256,1260,1261,1262,1293,1294,1297,1301],none:[44,45,46,47,65,67,70,402,403,404,405,406,407,408,409,410,411,412,415,422,465,467,468,473,474,514,515,518,524,525,528,529,530,531,926,927,929,930,931,932,933,934,935,936,937,938,939,942,943,951,952,953,958,959,971,980,981,987,988,1013,1014,1015,1016,1066,1079,1080,1084,1087,1088,1092,1094,1095,1096,1097,1098,1104,1105,1106,1107,1111,1112,1118,1121,1124,1126,1128,1129,1130,1136,1137,1141,1144,1146,1148,1150,1153,1154,1155,1156,1157,1164,1172,1178,1180,1181,1183,1184,1188,1189,1190,1191,1192,1193,1196,1200,1201,1204,1205,1208,1210,1218,1220,1227,1228,1229,1232,1234,1236,1239,1240,1241,1242,1243,1246,1247,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1270,1271,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],norm:[44,45,1066,1073,1074,1157,1164,1172,1205,1296,1297,1299],normal:[1204,1205,1239,1242,1295,1296],normalized_idx:[1204,1205],normalized_shap:[1295,1296],not_equ:1021,notat:[44,45,1251,1252],note:[47,943,963,1021,1039,1251,1253],noth:[44,45],now:[43,44,45,47,971,1016,1208,1209,1263,1281,1292,1293,1294],np_concat:1263,np_finfo:416,num:[402,409,410,929,936,937],num_arrai:[44,45],num_arrays_in_memori:1066,num_arrays_on_dev:971,num_band:[1066,1086],num_channel:[1281,1288],num_class:[1239,1240],num_cpu_cor:971,num_gpu:[422,971],num_head:[1144,1155,1281,1292],num_kei:[1144,1155,1156],num_lay:[1281,1290],num_or_size_split:[44,45,1178,1184],num_queri:[1144,1155,1156],num_sampl:[514,527,1137,1138,1208,1222,1239,1240],num_task:[1188,1189,1190,1191],number:[40,41,44,45,46,926,927,928,929,934,936,937,943,955,958,959,961,962,963,971,1007,1008,1009,1021,1033,1040,1066,1086,1101,1117,1120,1144,1155,1157,1168,1169,1178,1179,1180,1182,1183,1184,1186,1187,1188,1189,1190,1191,1208,1210,1213,1219,1220,1222,1224,1239,1240,1244,1251,1253,1254,1256,1257,1258,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292],numer:[47,1021,1022,1033,1036,1039,1040,1042,1043,1044,1045,1053,1054,1056,1057,1066,1090,1091,1106,1107,1111,1112,1157,1163,1246,1247,1251,1253,1256,1258,1272],numhead:[1144,1155],numpi:[41,42,44,45,47,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,465,466,467,468,469,470,471,472,473,474,475,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,1066,1116,1157,1169,1251,1252,1263],nwc:[1144,1145,1146,1281,1282,1283],obj:[44,45],objax:43,object:[44,45,46,65,416,929,930,943,948,958,971,1121,1192,1195,1197,1198,1199,1202,1203,1208,1210,1239,1245,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1293,1294],object_in:[402,403,404,929,930],obsolet:[41,43],obvious:47,occupi:[943,958,959,1066,1104,1105],occur:[1246,1247],occurr:[1246,1247],octoml:42,off:[43,1157,1160,1208,1210],offer:[43,1263],offset:[1157,1160,1171,1204,1205],often:43,old:[44,45,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236],on_init:[1281,1292,1293,1294],onc:[43,47,971,1015,1239,1240,1263],one:[42,43,44,45,47,54,929,934,943,950,971,1000,1001,1002,1003,1015,1066,1100,1104,1105,1157,1163,1164,1167,1172,1178,1181,1208,1220,1228,1232,1233,1246,1247,1251,1252,1254,1257,1263],one_hot:[514,1208],onearrai:[1178,1180],ones:[44,45,402,929,934,939,1208,1220,1228,1263],ones_lik:[402,929],ongo:47,onli:[41,44,45,47,64,971,1021,1053,1054,1157,1163,1167,1178,1181,1192,1193,1194,1200,1246,1247,1297,1298,1299,1300,1301,1302],onlin:[47,1263],onnx:42,onto:[40,41,971,1000,1001,1016,1192,1196,1201],oom:971,open:[41,42,43,1208,1210,1239,1243,1263],oper:[41,44,45,929,936,937,943,963,1066,1071,1081,1082,1083,1113,1121,1124,1126,1128,1129,1130,1144,1145,1146,1147,1148,1149,1150,1151,1153],operand:[44,45,1021,1023,1024,1026,1027,1033,1034,1039,1040,1048,1050,1051,1060,1061,1062,1251,1252,1253],oppos:[1066,1086],optim:[43,971,1121,1124,1126,1128,1129,1130,1188,1189,1190,1191,1263,1298,1299,1300,1302],optimizer_upd:1121,option:[15,18,19,44,45,46,47,402,405,406,407,408,411,412,415,918,919,923,926,927,929,930,931,932,933,934,935,936,937,938,939,942,943,949,951,952,953,954,960,970,971,980,981,989,993,994,995,996,997,1000,1001,1002,1003,1010,1013,1014,1015,1016,1020,1066,1067,1073,1074,1077,1079,1080,1086,1087,1088,1093,1099,1100,1104,1105,1108,1111,1112,1119,1120,1121,1124,1126,1127,1128,1129,1130,1132,1137,1141,1144,1152,1153,1155,1156,1157,1164,1172,1174,1175,1176,1177,1178,1180,1181,1183,1184,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1204,1205,1208,1210,1211,1214,1218,1219,1220,1222,1225,1227,1228,1229,1231,1232,1233,1234,1236,1239,1240,1246,1247,1251,1253,1254,1255,1256,1257,1259,1260,1261,1262,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],ord:[1157,1169,1172],order:[41,44,45,46,47,1121,1124,1126,1128,1129,1130,1157,1164,1170,1172,1178,1181,1188,1189,1190,1249,1250,1303,1304],organ:[42,47],origin:[43,44,45,46,1157,1164,1208,1230,1236],orthonorm:[1157,1167],other:[42,44,45,47,64,926,927,1021,1039,1066,1067,1121,1125,1208,1210,1220,1239,1243,1263],other_i:47,otherwis:[15,16,17,18,19,44,45,943,951,952,953,971,988,1021,1042,1043,1044,1066,1071,1118,1121,1127,1132,1136,1157,1158,1159,1172,1188,1189,1190,1208,1234,1235,1246,1247,1251,1253,1254,1256,1257,1258,1260,1261,1262],our:[41,42,47,1263],ourselv:42,out:[41,42,43,47,929,935,938,940,941,942,943,947,958,959,963,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1039,1040,1042,1043,1044,1045,1048,1049,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1144,1152,1154,1157,1158,1160,1163,1165,1167,1168,1170,1171,1172,1178,1181,1182,1208,1210,1246,1247,1249,1250,1251,1253,1256,1258,1260,1261,1262,1263,1281,1289],out_feat_dim:[1144,1155],out_featur:[1144,1152,1153],out_i:[1021,1042,1043,1044],outdat:41,outer:[1188,1189,1190,1191],outer_batch_fn:[1188,1189,1190],outer_batch_shap:[1144,1153],outer_cost_fn:[1188,1189,1190],outer_v:[1188,1189,1190],outlook:42,output:[44,45,47,929,932,933,934,935,938,939,942,971,980,981,1015,1021,1028,1066,1072,1121,1125,1144,1146,1148,1150,1152,1154,1155,1156,1178,1181,1183,1186,1208,1210,1218,1220,1239,1241,1242,1243,1263,1281,1282,1283,1284,1285,1286,1287,1289,1290,1291,1292],output_ax:[971,1015],output_channel:[1281,1282,1283,1284,1285,1286,1287,1290,1291],output_shap:[1144,1146,1148,1150,1281,1283,1285,1287],outsid:[1208,1213],over:[41,43,44,45,1157,1164,1172,1204,1205,1239,1243,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1295,1296],overflow:[1208,1210],overrid:[1208,1228,1236],overriden:[1297,1301],overwrit:[44,45,971,1015],overwrite_at_key_chain:[44,45],own:[42,43,1263],packag:47,pad:[1066,1086,1144,1145,1146,1147,1148,1149,1150,1151,1178,1179,1187,1281,1282,1283,1284,1285,1286,1287,1288],pad_width:[1178,1179,1187],page:[64,1263,1266],paint:41,pair:[1144,1156],panda:42,paper:43,parallel:[971,980,981],parallelis:[971,980,981],param:[44,45,46,465,467,468,929,932,934,939,971,1015,1021,1063,1066,1080,1087,1088,1157,1161,1208,1209,1228,1229,1251,1255,1259,1293,1294],paramet:[15,16,17,18,19,44,45,46,47,918,919,920,921,922,923,924,925,926,927,929,930,932,933,934,935,936,937,939,943,947,948,949,950,954,955,956,957,960,961,962,970,971,980,981,987,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1010,1013,1014,1015,1016,1017,1020,1021,1025,1027,1028,1029,1035,1036,1037,1038,1039,1041,1043,1046,1047,1055,1056,1058,1059,1064,1065,1066,1067,1069,1070,1071,1072,1073,1074,1076,1077,1078,1081,1082,1083,1084,1085,1086,1087,1088,1093,1095,1096,1097,1099,1100,1104,1105,1106,1107,1108,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1164,1165,1166,1167,1169,1173,1174,1175,1176,1177,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240,1241,1242,1243,1244,1245,1251,1252,1254,1255,1256,1257,1258,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],parameter:[1239,1242,1243],pardo:1263,pars:[1066,1075],part:[929,940,941,1121,1124,1126,1128,1129,1130,1263,1293,1294],parti:42,partial:[44,45,47,1293,1294],particular:[47,1021,1022],pass:[44,45,46,47,943,949,971,980,1015,1066,1072,1121,1135,1188,1189,1190,1270,1271,1293,1294,1297,1301,1303,1304],pattern:[43,44,45,1066,1081,1082,1083],pcie:42,peopl:47,per:[971,1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],perceiverio:43,percent_used_mem_on_dev:971,percentag:[971,1010],perfectli:43,perform:[43,44,45,47,918,923,929,936,937,971,1066,1077,1081,1082,1083,1095,1096,1097,1121,1124,1126,1128,1129,1130,1137,1138,1144,1152,1154,1188,1189,1190,1191,1192,1197,1198,1208,1211,1222,1251,1254,1257,1260,1261,1262],period:47,permit:47,permut:[1178,1182,1185,1208,1234],permute_dim:1178,perpendicular:[1208,1215],person:[47,1263],pickl:[44,45],pickle_filepath:[44,45],pictur:41,pinv:1157,pip:1263,pipelin:41,place:[44,45,47,929,931,932,933,934,935,938,939,942,971,1016,1066,1095,1096,1097,1178,1180,1208,1218,1297,1298,1299,1300,1301,1302],placehold:[47,1192,1201],pleas:[41,42,43,47],point:[43,47,928,929,932,934,938,942,943,958,961,963,1021,1023,1024,1026,1027,1033,1034,1036,1039,1040,1048,1050,1051,1060,1061,1062,1157,1158,1159,1161,1167,1172,1208,1210,1251,1253,1256,1258],poor:43,pop:42,popul:[44,45,1239,1240],popular:1266,population_s:[1239,1240],port:43,portabl:1263,posit:[15,16,17,929,934,943,958,971,993,997,1003,1021,1022,1042,1043,1066,1086,1157,1158,1178,1180,1208,1209,1210,1239,1244,1260,1261,1262,1270,1271],possibi:[44,45],possibl:[42,47,1066,1100,1115,1137,1142,1251,1253],post:[1204,1205,1266],post_shap:[44,45],potenti:[1021,1039],power:[47,1066,1090,1106,1112,1272],practic:1263,pre:[971,1263],pre_shap:[44,45],preced:42,precis:[943,958,1021,1062],pred:[1174,1175,1176,1177],predict:[1174,1175,1176,1177],prepend:[1157,1163],preprint:1263,present:[41,44,45],preserv:[44,45,46,1121,1132,1178,1181],preserve_typ:[44,45,1121,1132],press:1263,prevent:[47,1121,1123,1124,1128,1297,1298,1299],prevet:47,previou:[1121,1124,1128],previous:[1066,1072],prime:1263,princip:[1021,1023,1027],principl:41,print:[44,45,46,971,1011,1066,1102,1263],print_all_arrays_in_memori:1066,print_all_arrays_on_dev:971,print_ind:[44,45,46],print_limit:[44,45,46],print_line_spac:[44,45,46],prioriti:[44,45,47,65,69],privat:[1297,1301],prob:[1144,1152,1239,1240,1281,1289],probabl:[43,1144,1152,1239,1240,1281,1289],problem:[42,47],process:[42,43,47,971,980,981,1010,1020,1208,1227],process_specif:[971,1010,1020],prod:[44,45,1066,1082,1251],produc:[971,980,981],product:[44,45,1066,1077,1144,1155,1156,1157,1163,1208,1215,1223,1251,1252,1256,1281,1292],profil:[422,971],progress:47,project:[41,42,43,1263],promis:42,promot:[47,943,963,1021,1023,1024,1026,1027,1030,1032,1034,1036,1039,1048,1050,1051,1055,1060,1061,1062,1157,1158,1163,1172],prompt:1263,propag:[1251,1253],properli:47,properti:[44,45,416,971,983,1293,1294,1297,1298,1299,1300,1302],prototyp:41,provid:[41,44,45,47,926,927,943,951,952,953,960,963,970,971,988,1066,1080,1105,1121,1124,1126,1128,1129,1130,1136,1178,1181,1208,1228,1236,1246,1247,1260,1261,1262,1263,1281,1290,1297,1298,1299,1300,1301,1302],prune:[44,45],prune_empti:[44,45],prune_kei:[44,45],prune_key_chain:[44,45],prune_key_from_key_chain:[44,45],prune_keys_from_key_chain:[44,45],prune_unappli:[44,45],pseudo:[1157,1166],publish:43,pull:43,pure:[44,45,1263],purpos:[47,54,1021,1039],pursuit:42,pyshadowingbuiltin:47,pyshadowingnam:[944,945,946,972,1122],python:[40,41,42,44,45,971,1010,1020,1208,1210,1263,1266],pytorch:[42,43,1121,1124,1126,1128,1129,1130,1263,1297,1298,1299,1300,1301,1302],quadrant:[1021,1028],qualiti:47,quansight:42,queri:[44,45,971,1004,1014,1144,1155,1156,1281,1292],query_dim:[1281,1292],query_kei:[44,45],question:[41,42,43],queue:[44,45,46,971,980,981,1066,1103,1108],queue_class:[971,980,981],queue_load_s:[44,45,46],queue_timeout:[44,45,46,1066],quick:1263,quickli:[41,43,47],quo:43,radian:[1021,1023,1025,1027,1028,1034,1060,1064],rai:42,raid:42,rais:[42,44,45,47,943,947,1066,1071,1090,1106,1112,1118,1208,1232,1251,1253,1260,1261,1262,1293,1294,1297,1301],ram:[971,1010,1017,1020],randint:1239,random:[37,44,45,1240,1241,1242,1243,1244,1245],random_crop:1137,random_norm:1239,random_uniform:1239,randomli:[1137,1141,1144,1152,1281,1289],rang:[929,936,937,1021,1028,1208,1210,1251,1256,1258,1263],rank:[1066,1119,1157,1167,1172,1178,1179,1187,1260,1261,1262],rapid:[41,42],rapidli:41,rate:[1121,1124,1126,1128,1129,1130,1188,1189,1190,1191,1281,1292,1297,1298,1299,1300,1301,1302],rather:[42,44,45,47,971,1015,1066,1099,1121,1127,1208,1210],ratio:[971,1121,1128,1137,1142,1297,1299],raw:[44,45],reach:[41,42,43,47,971,993,997,1003,1192,1201],read:[44,45],rearrang:[44,45,1066,1081,1083],reason:42,rebuild:[44,45,46],rebuild_child_contain:[44,45,46],rece:[1188,1190],receiv:[47,971,980,981,1066,1068,1100,1281,1291],receivess:971,receivng:[1188,1191],recent:[41,42],recev:[1188,1189,1190],recommend:[1021,1053,1054,1263],rectifi:[918,920,921],recurr:[1144,1154],recurrent_bia:[1144,1154],recurrent_kernel:[1144,1154],recurs:[44,45,1192,1193,1194,1200,1201],redefin:47,reduc:[44,45,971,1015,1066,1082,1157,1167,1246,1247,1251,1253,1254,1256,1257,1260,1261,1262],reduce_max:[44,45],reduce_mean:1263,reduce_min:[44,45],reduct:[39,44,45,465,473,474,1066,1082,1104,1105,1260,1261,1262],refactor:47,refer:[47,929,934,1021,1039,1049,1121,1123,1124,1157,1173,1260,1261,1262,1281,1291],reflect:47,reflected_oper:[0,13,14],regard:[42,971],regardless:[43,44,45,926,927],rel:[1121,1124,1126,1128,1129,1130,1157,1160,1178,1181,1249,1250],relat:47,releas:43,relev:[42,1297,1298,1299,1300,1301,1302],relu:[398,918,919,920,1263],remain:[47,1192,1196,1208,1230],remaind:[44,45,1066,1085,1178,1184],remov:[44,45,47,1157,1160,1163,1188,1189,1190,1208,1232],remove_key_length_limit:[44,45],remove_print_limit:[44,45],reorder:[44,45,1178,1181],rep:[1178,1186],repeat:[44,45,47,1066,1083,1178,1186],repeated_config_check:971,repeatedli:[1192,1199],repetit:[44,45,1178,1183,1186],replac:[42,44,45,47,1066,1104,1105,1208,1213,1239,1240],repo:[41,42,43,47,1263,1266],repositori:[43,47],repres:[47,943,950,955,1021,1024,1026,1061,1144,1153,1157,1168],represent:[44,45,46,47,928,943,950,956,957,958,959,971,998,999,1021,1022,1030,1032,1055,1066,1110,1115],reptil:[1188,1191],reptile_step:1188,request:43,requir:[47,926,927,929,930,943,948,1021,1062,1208,1210,1270,1271],resampl:[1208,1222],research:41,reserv:47,reshap:[44,45,47,1208],reshape_lik:[44,45],resolv:[1251,1256,1258],respect:[1021,1022,1030,1032,1036,1041,1045,1046,1051,1052,1054,1055,1057,1121,1123,1124,1125,1126,1128,1129,1130,1157,1167,1188,1189,1190,1191,1208,1216],respond:47,respons:47,restor:[44,45],restructur:[44,45],restructure_key_chain:[44,45],result:[44,45,46,47,943,963,971,980,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1060,1061,1062,1063,1066,1104,1105,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1157,1158,1160,1164,1172,1208,1210,1216,1233,1246,1247,1251,1253,1254,1256,1257,1260,1261,1262,1263],result_typ:[416,943],ret_fn:[971,980,981],retain:[1121,1125],retain_grad:[1121,1125],retrn:[1066,1110],return_cont:[44,45],return_dict:[44,45],return_inner_v:[1188,1189,1190,1191],return_sequ:[1281,1290],return_st:[1281,1290],rev:[1066,1080],revers:[44,45,1066,1080,1178,1181,1208,1234],review:47,right:[44,45,47],rigor:41,road:42,robot:[64,1263],ronald:1263,root:[47,1021,1062],round:[41,42,43,1021,1033,1040,1062,1208,1210],row:[929,934,1208,1220,1239,1240],rule:[47,943,963,1021,1036,1157,1158,1208,1210],run:[47,971,980,1121,1123,1124,1128,1188,1189,1190,1191,1281,1292,1293,1294],runner:41,rush:43,safe:[971,980],safety_factor:971,sai:43,said:43,sake:43,same:[15,16,17,41,43,44,45,47,929,933,935,939,940,941,943,947,948,971,980,981,1015,1016,1021,1022,1031,1033,1040,1059,1066,1085,1087,1088,1104,1105,1121,1127,1132,1144,1145,1146,1147,1148,1149,1150,1151,1157,1158,1159,1160,1161,1165,1167,1169,1178,1181,1182,1188,1189,1190,1208,1209,1214,1217,1228,1233,1236,1249,1250,1251,1252,1253,1256,1258,1259,1263,1281,1282,1283,1284,1285,1286,1287,1288],same_arrai:[44,45],sampl:[1137,1138,1144,1152,1208,1222,1239,1240,1242,1243,1263,1281,1289],sata:42,satisfi:[929,930,1157,1162,1173],save:[43,44,45,1066,1109,1114,1137,1139,1293,1294],save_dir:[422,423,971,986],save_weight:[1293,1294],scalabl:41,scalar:[929,935,1066,1117,1120,1157,1172,1208,1213,1228],scale:[971,1013,1014,1121,1129,1144,1152,1155,1156,1204,1205,1281,1289,1292,1297,1300],scaled_dot_product_attent:1144,scatter:[1066,1104,1105,1208,1228],scatter_flat:[465,1066],scatter_nd:[465,1066],scene:[40,41,1121,1124,1126,1128,1129,1130],schemat:1263,scikit:42,scipi:42,screen:[44,45],script:47,search:[15,18,19,41,44,45,1247],second:[43,44,45,971,1002,1021,1030,1032,1041,1045,1046,1051,1052,1054,1055,1057,1066,1069,1103,1108,1121,1123,1124,1128,1157,1160,1163,1167,1178,1185,1188,1190,1208,1215,1216,1297,1298,1299],sector:[42,1021,1024,1026],see:[41,47,65,416,422,423,929,936,937,943,947,963,971,983,984,985,986,1021,1030,1032,1036,1039,1045,1051,1054,1055,1057,1121,1157,1172,1208,1210,1251,1253,1256,1260,1261,1262,1263,1272,1274,1275,1277,1278,1280],seed:[44,45,1239],seed_valu:[44,45,1239,1244],seem:1263,seen:[41,42],seen_set:[1066,1092],select:[929,930,1208,1232],self:[44,45,47,65,416,422,423,943,971,983,984,985,986,1121,1263,1272,1274,1275,1277,1278,1280,1297,1301],semant:41,send:42,sentinel:[1251,1253],seper:[47,1066,1086],seq:[44,45,46,1251,1252,1293,1294],sequenc:[15,16,17,44,45,46,47,926,927,929,930,943,948,971,980,981,990,991,992,993,994,995,996,997,1000,1001,1015,1066,1070,1100,1105,1121,1125,1137,1141,1142,1144,1145,1146,1147,1148,1149,1150,1151,1157,1164,1178,1179,1183,1184,1186,1187,1192,1203,1204,1205,1208,1210,1212,1214,1220,1225,1229,1230,1233,1234,1239,1241,1243,1251,1254,1257,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1290,1293,1294,1295,1296,1297,1301,1303,1304],seri:47,serv:54,set:[15,18,19,41,44,45,971,1000,1001,1013,1014,1015,1066,1067,1079,1106,1107,1108,1109,1121,1124,1126,1127,1128,1129,1130,1157,1164,1192,1193,1200,1202,1203,1208,1220,1239,1240,1244,1246,1247,1249,1250,1251,1254,1257,1263,1281,1290,1297,1298,1299,1300,1301,1302],set_at_kei:[44,45],set_at_key_chain:[44,45],set_breakpoint_debug_mod:48,set_debug_mod:48,set_default_devic:971,set_default_dtyp:943,set_default_float_dtyp:943,set_default_int_dtyp:943,set_exception_debug_mod:48,set_framework:[44,45,47,65,1263],set_ivy_backend:[44,45],set_min_bas:1066,set_min_denomin:1066,set_nest_at_index:1192,set_nest_at_indic:1192,set_queue_timeout:1066,set_split_factor:971,set_stat:[1297,1298,1299,1300,1301,1302],set_tmp_dir:1066,set_with_grad:1121,sgd:1297,shape:[44,45,47,402,405,411,415,416,418,465,474,514,524,929,932,933,935,938,939,940,941,942,943,947,948,971,983,1021,1028,1059,1066,1085,1088,1104,1105,1110,1137,1141,1144,1146,1148,1150,1157,1158,1159,1160,1161,1162,1163,1165,1167,1170,1178,1179,1180,1181,1183,1187,1208,1209,1212,1214,1217,1218,1219,1220,1228,1229,1230,1232,1233,1236,1239,1241,1242,1243,1246,1247,1249,1250,1251,1252,1281,1283,1284,1285,1286,1287,1288,1295,1296],shape_slic:[44,45],shape_to_tupl:1066,sharabl:41,share:[42,44,45,1263],shaw:42,should:[40,42,44,45,46,47,926,927,929,940,941,943,947,971,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1042,1043,1044,1045,1048,1050,1051,1052,1053,1054,1055,1057,1060,1061,1062,1066,1072,1075,1121,1124,1126,1128,1129,1130,1157,1158,1159,1160,1163,1167,1172,1208,1212,1228,1230,1246,1247,1251,1252,1253,1256,1258,1263],show:[44,45,1263],show_mod_in_top_mod:[1293,1294],show_structur:[1293,1294],show_sub_contain:[44,45],show_v:[1293,1294],show_v_in_top_v:[1293,1294],shown:[44,45],shuffl:[44,45,1239],shuffle_h5_fil:[44,45],side:47,sigmoid:[398,918,1263],sign:[42,1021,1022,1157,1168,1251,1256,1258],signatur:[42,47,65,398,416,422,423,465,514,943,971,983,984,985,986,1121,1272,1274,1275,1277,1278,1280],signific:[41,42],significantli:41,similar:[41,47,1144,1155,1281,1292],simpl:[41,47,1066,1084,1263],simpler:47,simpli:[44,45,47,1021,1039,1263],simplifi:42,simultan:[41,43,1263],sin:[1021,1064,1066,1086],sinc:42,sine:[1021,1025,1026,1060,1061],singl:[43,44,45,926,927,971,980,981,1000,1001,1002,1003,1066,1117,1120,1137,1142,1208,1232,1239,1242,1243,1251,1254,1257,1263],singleton:[1157,1172,1251,1253,1256,1260,1261,1262],singular:[1157,1169,1170],sinh:1021,siren:1272,situat:47,size:[44,45,46,465,473,929,936,937,971,994,995,996,997,1013,1014,1015,1066,1104,1137,1141,1157,1160,1164,1167,1169,1178,1184,1208,1210,1212,1239,1240,1242,1243,1246,1247,1251,1254,1257,1260,1261,1262,1281,1282,1283],size_ordered_arrai:[44,45],skew:[1157,1173],skip:[44,45],slew:43,slice:[44,45,1066,1087,1088,1192,1199],slice_kei:[44,45],slice_obj:[44,45],slice_via_kei:[44,45],slide:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],slodget:1157,slope:[918,920],small:[1174,1175,1176,1177,1204,1205,1263,1295,1296],smaller:[1208,1213,1251,1256,1258],smallest:[44,45,943,958,959,1021,1033,1208,1211],smallest_norm:[416,943,958],smtp:42,softmax:[398,918,1144,1155,1156],softplu:[398,918],softwar:[41,42],solut:47,some:[42,43,44,45,47,1021,1039,1121,1123,1124,1126,1128,1129,1130,1135,1144,1152,1208,1210,1263,1281,1289],some_backend:47,some_namespac:47,somehow:42,someth:47,something_cool:47,sometim:47,somewher:[44,45],sonnet:43,soon:[47,64,1266],sort:[44,45,46,1157,1169,1170,1250],sort_by_kei:[44,45],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,65,67,68,69,70,71,72,73,74,75,76,77,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,423,465,466,467,468,469,470,471,472,473,474,475,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,918,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,973,974,975,976,977,978,980,981,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1307],space:[42,929,936,937,1066,1086,1208,1210],spars:[1174,1177],sparse_cross_entropi:1174,spawn:[1208,1227],special:[47,1021,1022,1023,1024,1026,1027,1033,1034,1039,1040,1048,1050,1051,1060,1061,1062,1251,1253],specif:[41,44,45,47,943,963,971,1013,1021,1053,1054,1066,1075,1081,1082,1083,1188,1189,1190,1191,1208,1227,1239,1245,1251,1253,1263,1266,1293,1294],specifc:[1239,1240],specifi:[44,45,47,929,930,932,936,937,938,940,941,942,943,947,948,950,971,990,991,992,993,994,995,996,997,1000,1001,1005,1007,1011,1014,1015,1016,1066,1087,1088,1093,1119,1157,1160,1164,1172,1178,1179,1181,1187,1192,1197,1198,1202,1203,1208,1210,1211,1213,1214,1218,1233,1246,1247,1249,1250,1251,1252,1254,1256,1257,1258,1260,1261,1262],speed:41,spend:43,spent:43,sphinx:47,spin:43,split:[44,45,54,971,980,994,995,996,997,1013,1014,1015,1066,1100,1178],split_factor:[971,980],split_func_cal:971,sponsor:42,spread:[971,1003],spyder:42,sqrt:[1021,1157,1172],squar:[1021,1062,1157,1158,1159,1161,1162,1168,1208,1220],squeez:[514,1208],stabil:[1066,1111,1112,1249,1250],stabl:[1066,1090,1091,1106,1107,1111,1112,1249,1250],stable_divid:1066,stable_pow:1066,stack:[44,45,929,940,941,1137,1142,1157,1159,1160,1161,1163,1165,1167,1170,1192,1193,1200,1208,1281,1290],stack_imag:1137,stage:[42,47],standard:[40,44,45,943,958,1204,1205,1239,1242,1251,1257,1266,1295,1296],start:[44,45,47,402,409,410,422,423,514,515,929,936,937,971,986,1208,1210,1263],starting_index:[44,45],starting_split_factor:971,state:[42,54,1144,1154,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],static_argnam:[514,518,926,927],static_argnum:[514,518,926,927],statist:[1252,1253,1254,1255,1256,1257,1258,1259],statu:43,std:[44,45,1239,1242,1251],step:[43,44,45,514,515,929,936,937,971,1121,1123,1124,1126,1128,1129,1130,1188,1189,1190,1191,1208,1210,1263,1297,1298,1299,1300,1301,1302],stephen:1263,stick:1263,still:[42,44,45,47],stochast:[1297,1302],stop:[44,45,402,409,410,422,423,514,515,929,936,937,971,986,1015,1121,1124,1126,1128,1129,1130,1132,1188,1189,1190,1191,1208,1210,1297,1298,1299,1300,1301,1302],stop_gradi:[44,45,971,1015,1121,1124,1126,1128,1129,1130,1188,1189,1190,1191,1297,1298,1299,1300,1301,1302],storag:42,store:[44,45,1066,1086,1121,1135,1178,1184,1293,1294],store_var:[1293,1294],str:[15,16,17,44,45,46,47,402,405,406,407,408,411,412,415,416,419,420,926,927,929,930,931,933,935,939,943,949,950,951,952,953,955,956,957,958,959,960,961,962,964,965,966,970,971,980,981,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1015,1066,1079,1081,1082,1083,1104,1105,1157,1164,1167,1188,1189,1190,1191,1192,1196,1208,1225,1227,1229,1251,1252,1256,1270,1271,1281,1292,1293,1294],streamlin:43,strength:1263,stride:[1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],string:[44,45,47,929,930,943,948,954,956,957,960,970,971,987,989,998,999,1004,1010,1016,1017,1020,1066,1079,1144,1145,1146,1147,1148,1149,1150,1151,1208,1210,1220,1229,1236,1281,1282,1283,1284,1285,1286,1287,1288,1293,1294],strip:42,strong:42,strongli:1266,structur:[44,45,46,47,1066,1075],structural_diff:[44,45],style:47,sub:[44,45,47,971,994,995,1000,1001,1002,1003,1157,1160,1178,1184,1188,1189,1190,1191],sub_cont:[44,45],sub_cont_or_keychain:[44,45],sub_cont_to_find:[44,45],sub_mod:[1293,1294],sub_modul:[1303,1304],sub_str:[44,45],sub_struc_to_find:[44,45],submodul:[54,1295,1296,1303,1304],subsequ:47,subset:47,substanti:42,substr:[44,45],success:42,suggest:1263,suit:42,suitabl:[1137,1142],sum:[44,45,465,473,474,971,1000,1001,1002,1003,1015,1021,1051,1066,1078,1082,1104,1105,1157,1171,1172,1251,1252],summat:[44,45,1251,1252],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,166,167,169,170,171,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,221,222,223,224,225,226,228,231,233,234,235,236,237,238,239,241,242,245,254,255,256,257,258,259,260,261,262,263,265,266,267,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,316,317,318,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,376,377,378,379,381,384,386,387,388,389,390,391,392,393,395,396,399,400,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,489,490,491,492,494,495,496,497,498,499,500,501,502,503,504,505,506,507,509,510,511,512,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,535,537,540,542,543,544,545,546,547,548,550,551,556,557,558,559,560,561,562,563,564,565,566,567,568,570,571,572,573,574,576,577,578,579,580,581,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,623,624,625,626,627,628,629,630,631,633,634,635,636,638,639,640,642,643,644,646,647,648,649,650,651,652,653,654,655,656,657,658,659,661,662,663,664,665,666,667,668,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,689,690,691,692,694,697,699,700,701,702,703,704,705,707,708,711,712,713,714,715,716,717,720,721,723,724,725,726,727,728,729,730,731,732,733,734,735,737,738,739,740,741,743,744,745,746,747,748,749,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,821,822,823,825,826,827,828,829,830,831,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,850,851,852,853,854,855,856,857,858,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,895,896,897,898,899,900,902,905,907,908,909,910,911,912,913,915,916,919,920,921,922,923,924,925,927,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1240,1241,1242,1243,1244,1245,1247,1250,1252,1253,1254,1255,1256,1257,1258,1259,1261,1262,1263,1266,1268,1269,1271,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1298,1299,1300,1301,1302,1304,1305,1307],supports_inplac:1066,sure:47,svd:1157,svdval:1157,swap:[44,45,1178,1185],swapax:[44,45,1178],symmetr:[1157,1158,1161,1173],sympi:42,syntax:[41,42,398,422,465,514],tab:1263,take:[43,47,1208,1222,1266],taken:[47,1157,1160,1251,1254,1257],tan:1021,tangent:[918,925,1021,1027,1028,1029,1064,1065],tanh:[918,1021],target:[44,45,971,987,990,991,992,993,994,995,996,997,1000,1001,1002,1003,1016,1263],target_dict:[44,45],task:[47,1188,1189,1190,1191],tcp:42,team:47,technolog:42,templat:1263,temporari:[1066,1109,1114],tensor:[41,44,45,47,465,473,474,929,936,937,943,954,971,989,1066,1104,1105,1144,1152,1154,1178,1184,1208,1210,1211,1212,1224,1226,1228,1229,1230,1236,1239,1240,1241,1263,1281,1289,1291,1297,1298,1299,1300,1301,1302],tensorflow:[42,43,47,1144,1146,1148,1150,1263,1281,1283,1285,1287],term:[41,44,45,47,1144,1154,1263,1281,1291],termcolor:[44,45,46],termin:[44,45,46],test:[43,47,943,961,962,1021,1042,1043,1044,1260,1261,1262],test_array_api:47,tf_concat:1263,than:[42,44,45,47,943,958,971,1015,1021,1023,1024,1033,1040,1048,1050,1062,1066,1099,1121,1127,1157,1163,1172,1178,1181,1208,1210,1213,1217,1224,1232,1233,1239,1243,1251,1256,1258,1263],thank:42,thei:[44,45,47,1021,1028,1188,1189,1190,1239,1240,1263,1303,1304],them:[40,41,42,43,1263],themselv:[1192,1193],therefor:[41,47],thi:[41,42,43,44,45,46,47,929,931,971,993,997,1003,1010,1015,1020,1021,1022,1039,1053,1054,1066,1086,1103,1108,1121,1124,1126,1127,1128,1129,1130,1135,1144,1153,1157,1164,1168,1171,1192,1196,1201,1208,1210,1230,1246,1247,1251,1254,1257,1263,1266,1293,1294,1297,1298,1299,1300,1301,1302],thing:[41,42,43,47,1263],those:[41,44,45,47,1121,1135,1157,1167,1169,1208,1213],though:47,thought:[42,47],three:54,threshold:[1208,1224,1226],through:[44,45,47],tick:47,tickbox:47,tile:1178,time:[41,42,43,47,1121,1124,1128,1144,1154,1178,1186,1188,1189,1190,1191,1239,1240,1246,1247,1281,1292,1293,1294],timeout:[44,45,46,971,980,981,1066,1103,1108],timestep:[1144,1154,1281,1290],titl:[47,1263],tmp_dir:1066,tmp_dr:[1066,1109],to_appli:[44,45],to_clon:971,to_dev:[44,45,422,971],to_dict:[44,45],to_disk_as_hdf5:[44,45],to_disk_as_json:[44,45],to_disk_as_pickl:[44,45],to_distribut:971,to_flat_list:[44,45],to_iter:[44,45],to_iterator_kei:[44,45],to_iterator_valu:[44,45],to_ivi:[15,44,45],to_ivy_modul:1270,to_json:[44,45],to_kv_fn:[1144,1155],to_kv_v:[1144,1155],to_list:[44,45,465,1066],to_multi_dev:[44,45],to_mut:[1192,1194,1201],to_n:[15,44,45],to_numpi:[44,45,465,1066,1263],to_out_fn:[1144,1155],to_out_v:[1144,1155],to_q_fn:[1144,1155],to_q_v:[1144,1155],to_raw:[44,45],to_scalar:[465,1066],togeth:[42,44,45,1303,1304],tool:[40,43,1263],top_mod:[1293,1294],torch:[47,926,927,1263],torch_concat:1263,torchvis:43,total:[43,44,45,46,971,1017],total_mem_on_dev:971,toward:1266,tpu:[971,1018],tpu_is_avail:[422,971],trace:[44,45,1066,1099,1157],track:[47,971,1192,1201,1293,1294],track_submod_call_ord:[1293,1294],track_submod_ret:[1293,1294],trail:[1295,1296],train:[43,64,1121,1123,1124,1128,1263],trainabl:[1121,1127,1270,1271,1293,1294,1303],trainer:[43,64,1263],transform:[1144,1152,1153],transpil:[54,1266],transpos:[44,45,514,971,1002,1144,1146,1148,1150,1157,1165,1208,1281,1283,1285,1287],travers:[15,18,19,44,45,1192,1201],trax:43,treat:[44,45,926,927],tri:[44,45],triangular:[929,940,941,1157,1158,1167],tril:[402,929],trim_kei:[44,45],triu:[402,929],trust:[1121,1128,1297,1299],truth:[1021,1041,1045,1046,1057,1208,1216],try_else_non:1066,try_import_ivy_jax:65,try_import_ivy_mxnet:65,try_import_ivy_numpi:65,try_import_ivy_tf:65,try_import_ivy_torch:65,try_kc:[44,45],tune:971,tune_dev_alloc:971,tune_dev_split:971,tune_step:971,tupl:[15,16,17,18,19,44,45,47,402,405,411,415,416,418,926,927,929,931,932,938,942,943,947,1066,1086,1110,1157,1169,1172,1178,1179,1180,1181,1182,1187,1192,1193,1194,1195,1197,1198,1199,1200,1201,1202,1203,1208,1218,1239,1241,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262],turn:43,tutori:47,two:[43,44,45,54,929,934,940,941,1066,1069,1157,1158,1159,1160,1161,1163,1164,1165,1167,1168,1169,1170,1171,1178,1185,1208,1210,1215,1223],type:[15,18,44,45,46,47,65,419,420,422,423,929,930,932,933,934,935,938,939,940,941,942,947,948,949,950,954,955,956,957,958,959,960,961,962,963,970,971,983,984,985,986,998,999,1003,1015,1021,1022,1023,1024,1026,1027,1030,1031,1032,1033,1034,1036,1039,1040,1041,1042,1043,1044,1045,1046,1048,1050,1051,1052,1053,1054,1055,1057,1059,1060,1061,1062,1066,1075,1080,1085,1099,1113,1120,1121,1127,1132,1157,1158,1159,1160,1161,1163,1165,1167,1172,1178,1181,1182,1208,1209,1210,1214,1216,1217,1218,1220,1228,1229,1236,1246,1247,1249,1250,1251,1253,1256,1258,1259,1260,1261,1262,1263,1272,1274,1275,1277,1278,1280,1293,1294],types_to_iteratively_nest:[44,45,46],uint16:[1251,1256,1258],uint32:[1251,1256,1258],uint64:[1251,1256,1258],uint8:[1137,1139,1143],uint8_img_to_float_img:1137,unabl:47,unchang:[15,16,17,18,19],uncom:47,underli:[1021,1030,1032,1055],understand:43,underwai:47,unecessari:47,unfairli:47,unif:[42,1266],unifi:[40,42,44,45,971,1000,1001,1002,1003,1015,1263],uniform:[44,45,1239,1240,1242,1243,1272,1274,1275,1278,1279],uniformli:[1239,1241,1243],uniniti:[929,932,933],union:[15,18,19,44,45,47,402,405,406,408,411,412,415,416,419,420,421,926,927,929,930,931,932,933,935,936,937,938,939,940,941,942,943,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,970,971,989,994,995,996,997,1015,1016,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1069,1070,1073,1074,1076,1077,1078,1081,1082,1083,1085,1086,1087,1088,1093,1104,1105,1110,1115,1116,1117,1119,1120,1157,1158,1161,1163,1165,1168,1169,1170,1172,1173,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1192,1193,1194,1200,1201,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1246,1247,1249,1250,1251,1253,1255,1256,1259,1260,1261,1262],uniqu:[41,971,980,981,1188,1189,1190,1191,1192,1196],unit:[47,918,919,920,921,971,1021,1025],unitari:[1157,1169],univers:41,unless:[1208,1228,1236],unlik:[42,971],unnorm:[1239,1240],unpack:[1066,1119],unrel:42,unrol:[1144,1154],unset_debug_mod:48,unset_default_devic:971,unset_default_dtyp:943,unset_default_float_dtyp:943,unset_default_int_dtyp:943,unset_framework:65,unset_with_grad:1121,unsign:[1251,1256,1258],unstack:[44,45,465,1066],unsurprisingli:41,until:[42,47],unus:[926,927],updat:[44,45,465,473,474,971,980,1066,1097,1104,1105,1121,1123,1124,1126,1128,1129,1130,1144,1154,1188,1189,1190,1192,1197,1198,1202,1203,1270,1271,1297,1298,1299,1300,1301,1302],update_backend:[44,45],update_config:[44,45],upon:47,upper:[44,45,929,934,941,1157,1158,1167,1239,1243],upper_depth:[1293,1294],upstream:47,usabl:1263,usag:[42,971,1015],use:[43,44,45,46,47,971,980,981,1006,1018,1066,1111,1112,1144,1155,1178,1183,1204,1205,1263,1295,1296],used:[44,45,47,943,955,971,980,1010,1013,1014,1020,1066,1090,1091,1100,1104,1105,1106,1107,1121,1128,1129,1157,1160,1164,1188,1189,1190,1191,1192,1201,1208,1236,1281,1292,1297,1299,1300],used_dev:[971,980],used_mem_on_dev:971,useful:[44,45,971,1015,1144,1153,1263],user:[41,42,1263,1281,1292,1293,1294],uses:1263,using:[43,44,45,47,1121,1123,1124,1144,1152,1156,1192,1195,1199,1251,1252,1263,1281,1289],util:[971,1004,1261,1262],v_with_top_v_key_chain:[1293,1294],val:[44,45,465,469,470,471,1066,1095,1096,1097,1106,1107],valid:[943,949,1066,1111,1112,1144,1145,1146,1147,1148,1149,1150,1151,1260,1261,1262,1281,1282,1283,1284,1285,1286,1287,1288],valid_dtyp:943,valu:[44,45,929,934,935,936,937,971,983,1014,1015,1021,1022,1023,1027,1033,1037,1038,1040,1041,1045,1046,1047,1057,1058,1059,1066,1073,1074,1075,1080,1086,1087,1088,1103,1104,1105,1106,1107,1108,1120,1121,1125,1128,1137,1143,1144,1155,1156,1157,1167,1168,1169,1170,1171,1172,1178,1179,1183,1187,1188,1189,1190,1192,1196,1197,1198,1202,1203,1204,1205,1208,1209,1210,1211,1213,1216,1218,1224,1226,1230,1234,1235,1239,1242,1243,1246,1247,1249,1250,1251,1253,1255,1256,1258,1281,1292,1295,1296,1297,1299],value_is_nan:1066,vanilla:[1188,1190],var_shap:1272,variabl:[15,16,17,18,19,44,45,1066,1071,1095,1096,1097,1098,1099,1113,1121,1124,1125,1126,1127,1128,1129,1130,1132,1135,1144,1155,1188,1189,1190,1191,1204,1205,1270,1271,1272,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304],variable_data:1121,varianc:[44,45,1251,1259],variou:[47,1263],vector:[44,45,1066,1074,1144,1153,1157,1163,1169,1170,1172,1173,1208,1215,1281,1291],vector_norm:[44,45,1157],vector_to_skew_symmetric_matrix:1157,verbos:1307,veri:[41,42,47,1263],verifi:[47,1266],version:[41,42,43,47],via:[1192,1193,1200],view:[1137,1142],virtual:42,vision:[64,1263],vital:41,volum:[1144,1149],vw_tm1:[1121,1124,1128],wai:[41,42],wait:[44,45,46,47],want:[42,47,1263],warn:[65,72,73,74,75,76],warp:[1137,1138],websit:[42,47],week:43,weight:[1121,1123,1124,1126,1128,1129,1130,1144,1153,1154,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1293,1294,1297,1299,1300],weight_initi:[1281,1282,1283,1284,1285,1286,1287,1288,1290,1291],weights_path:[1293,1294],welcom:1266,well:[44,45,1066,1093],were:[44,45],what:[42,43,47,1263],wheel:41,when:[41,42,44,45,46,47,971,1021,1039,1066,1072,1112,1157,1169,1208,1235,1246,1247,1251,1253,1263,1293,1294],where:[41,42,43,44,45,47,514,929,934,935,1021,1049,1157,1167,1169,1170,1178,1179,1180,1182,1187,1192,1193,1200,1208,1210,1212,1213,1221,1228,1239,1240,1260,1261,1262],wherea:47,wherebi:[1192,1201],whether:[15,18,19,44,45,46,918,919,926,927,943,954,960,961,962,970,971,989,1002,1006,1010,1015,1018,1020,1021,1044,1066,1067,1069,1070,1077,1080,1084,1086,1093,1094,1098,1099,1100,1113,1119,1120,1121,1124,1125,1126,1127,1128,1129,1130,1132,1144,1152,1188,1189,1190,1191,1192,1193,1194,1196,1200,1201,1208,1219,1231,1239,1240,1260,1261,1262,1263,1270,1271,1281,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302],which:[41,42,43,44,45,46,47,54,918,923,926,927,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,949,954,958,959,960,970,971,980,981,989,994,995,996,997,1000,1001,1002,1003,1005,1007,1011,1013,1014,1015,1021,1028,1066,1075,1077,1078,1080,1087,1088,1089,1101,1102,1104,1105,1119,1121,1124,1125,1126,1128,1129,1130,1132,1134,1135,1137,1139,1144,1155,1156,1157,1160,1164,1172,1178,1181,1183,1184,1192,1196,1197,1198,1202,1203,1208,1210,1214,1215,1218,1220,1221,1222,1228,1229,1233,1235,1236,1239,1240,1241,1242,1243,1246,1247,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1270,1271,1281,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304],whilst:47,whitespac:[44,45,46],who:47,whose:[47,929,930,934,940,941,1021,1024,1026,1034,1060,1061,1066,1072,1157,1158,1159,1160,1161,1165,1167,1170,1178,1181,1251,1252,1254,1257],why:[40,42,1263],width:[1137,1142],window:[1137,1142,1144,1145,1146,1147,1148,1149,1150,1151,1281,1282,1283,1284,1285,1286,1287,1288],wireless:42,wise:[44,45,47,918,919,920,921,922,923,924,925,1021,1022,1023,1025,1027,1028,1030,1031,1032,1036,1037,1038,1041,1045,1046,1047,1051,1052,1053,1054,1055,1057,1059,1064,1066,1085,1121,1124,1126,1128,1130,1208,1213,1216,1217,1224,1226],with_bia:[1281,1291],with_cal:[1066,1080],with_default_key_color:[44,45],with_entries_as_list:[44,45],with_grad:[1121,1131],with_ivy_backend:[44,45],with_key_length_limit:[44,45],with_partial_v:[1293,1294],with_print_ind:[44,45],with_print_limit:[44,45],with_print_line_spac:[44,45],with_remaind:[44,45,1178,1184],with_to_kv_fn:[1281,1292],with_to_out_fn:[1281,1292],with_to_q_fn:[1281,1292],within:[15,18,19,47,1157,1169,1208,1210,1239,1243],without:[44,45,47,1066,1103,1108,1192,1194,1208,1230],won:[42,43],wonder:[41,43,1263],word:[15,16,17,1208,1210,1239,1243,1270,1271],work:[43,47,1266],worker:[971,980,981],worker_class:[971,980,981],workflow:[43,64],wors:42,would:[42,47,918,923,1263],wouldn:43,wrap:[15,44,45,46,47,398,422,465,514,1066,1072,1121,1135,1263],wrapper:47,write:[43,44,45,47,1263],written:[41,47,1263],ws_new:[1121,1124,1126,1128,1129,1130],x1_i:[1021,1030,1032,1036,1041,1045,1046,1051,1052,1054,1055,1057,1208,1216],x2_i:[1021,1030,1032,1036,1041,1045,1046,1051,1052,1054,1055,1057,1208,1216],x_feat_dim:[1144,1155],x_i:[1021,1022,1023,1024,1026,1027,1031,1033,1034,1039,1040,1042,1043,1044,1048,1050,1053,1060,1061,1062,1063,1251,1253],x_in:1263,x_inv:[1157,1162],x_max:[514,1208,1213],x_min:[514,1208,1213],xor:[1021,1055],year:[41,43,1263],yet:[1192,1201],yield:[1208,1235],you:[41,42,43,47,1263,1266],your:[42,43,1263],yourself:[47,1263],yourslef:47,youtub:47,zero:[43,44,45,402,929,932,934,940,941,1021,1039,1053,1054,1066,1104,1105,1121,1123,1124,1128,1129,1144,1152,1157,1159,1163,1172,1178,1179,1187,1208,1228,1236,1246,1247,1251,1253,1256,1258,1260,1261,1262,1272,1281,1282,1283,1284,1285,1286,1287,1288,1289,1291,1297,1298,1299,1300],zero_pad:1178,zeros_lik:[514,1208]},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Background","ML Explosion","Standardization","Why Unify?","Container","Container","MultiDevContainer","Contributing","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Design","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Extensions","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Activations","softmax","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Mxnet","Activations","gelu","Array api","Data types","Function and method signatures","Searching functions","Set functions","Statistical functions","Constants","Creation","array","asarray","empty","eye","linspace","logspace","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","Elementwise","acos","acosh","bitwise_and","bitwise_or","ceil","floor","greater_equal","isfinite","isinf","isnan","less","logical_and","logical_not","logical_or","logical_xor","negative","round","sin","sinh","sqrt","square","tanh","General","array_equal","cumprod","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matrix_norm","pinv","qr","slogdet","svd","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","repeat","split","tile","zero_pad","Old","General","abs","arange","broadcast_to","cast","clip","compile","concatenate","cross","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","matmul","meshgrid","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Numpy","Activations","gelu","softmax","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","compile","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Tensorflow","Activations","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv2d","conv3d","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","linear_resample","one_hot","squeeze","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Torch","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","array_equal","container_types","copy_array","cumprod","cumsum","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","to_list","to_numpy","to_scalar","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","broadcast_to","cast","clip","compile","concatenate","cross","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","get_num_dims","identity","indices_where","linear_resample","maximum","meshgrid","minimum","multiprocessing","one_hot","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Ivy","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Compilation","compile","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","broadcast_to","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","result_type","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","divide","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","all_equal","arg_names","array_equal","arrays_equal","assert_supports_inplace","cache_fn","clip_matrix_norm","clip_vector_norm","container_types","copy_array","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","exists","floormod","fourier_encode","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_referrers_recursive","has_nans","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","match_kwargs","num_arrays_in_memory","print_all_arrays_in_memory","queue_timeout","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape_to_tuple","stable_divide","stable_pow","supports_inplace","tmp_dir","to_list","to_numpy","to_scalar","try_else_none","unstack","value_is_nan","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slodget","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Meta","fomaml_step","maml_step","reptile_step","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Norms","layer_norm","Old","Dtype","General","abs","arange","argmin","broadcast_to","clip","concatenate","cross","equal","floor","full","get_num_dims","identity","indices_where","linear_resample","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linalg","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Roadmap","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Verbosity","cprint"],titleterms:{"default":1080,"function":[248,249,250,251],"var":[239,393,548,705,913,1259],Ones:1277,The:42,abs:[115,350,425,583,671,751,861,1022,1209],aco:[116,275,426,584,752,1023],acosh:[117,276,427,585,753,1024],activ:[81,244,398,553,710,918,1267],adam:1298,adam_step:1123,adam_upd:1124,algebra:[180,218,327,373,493,532,645,686,832,892,1157],all:[241,395,550,707,915,1261],all_equ:1067,all_nested_indic:1193,ani:[242,396,551,708,916,1262],api:[0,42,47,246],arang:[202,351,515,672,862,1210],arg_nam:1068,argmax:[228,381,537,694,902,1247],argmin:[203,516,673,863,1211],args_to_ivi:16,args_to_n:17,argsort:[231,384,540,697,905,1250],arithmet:1,arrai:[0,3,42,47,88,246,254,403,556,723,930],array_equ:[298,796,1069],arrays_equ:1070,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[89,255,404,557,724,931],asin:[118,428,586,754,1025],asinh:[119,429,587,755,1026],assert_supports_inplac:1071,atan2:[757,1028],atan:[120,430,588,756,1027],atanh:[758,1029],attribut:5,backend:[47,79],background:40,bilinear_resampl:[169,316,482,638,821,1138],binary_cross_entropi:1175,bitwis:7,bitwise_and:[121,277,431,589,759,1030],bitwise_invert:[122,432,590,760,1031],bitwise_or:[123,278,433,591,761,1032],broadcast_to:[103,352,418,571,738,864,947,1212],builder:56,cache_fn:1072,cast:[204,353,517,674,865,948],ceil:[124,279,434,592,762,1033],choleski:[181,328,494,646,833,1158],choose_random_framework:67,citat:1263,clear_framework_stack:68,clear_mem_on_dev:[744,987],clip:[354,866,1213],clip_matrix_norm:1073,clip_vector_norm:1074,closest_valid_dtyp:949,comparison:9,competit:42,compil:[355,518,867,926,927],complimentari:42,concaten:[205,356,519,675,868,1214],constant:[83,252,401,554,718,928],constant_pad:[341,661,850,1179],contain:[44,45],container_typ:[797,1075],content:1263,contribut:47,conv1d:[173,320,486,825,1145,1282],conv1d_transpos:[174,321,487,826,1146],conv1dtranspos:1283,conv2d:[175,322,488,642,827,1147,1284],conv2d_transpos:[176,323,489,828,1148],conv2dtranspos:1285,conv3d:[177,324,490,643,829,1149,1286],conv3d_transpos:[178,325,491,830,1150],conv3dtranspos:1287,convers:15,convert:[84,719,1270],convert_dtyp:950,copy_arrai:[798,1076],copy_nest:1194,cos:[125,435,593,763,1034],cosh:[126,436,594,764,1035],cprint:1307,creat:47,creation:[87,253,402,555,722,929],cross:[357,869,1215],cross_entropi:1176,cumprod:[155,299,466,799,1077],cumsum:[800,1078],current_framework:69,current_framework_str:[870,1079],data:[101,247,264,416,569,736,943],debug_mod:49,debugg:48,default_devic:988,default_dtyp:951,default_float_dtyp:952,default_int_dtyp:953,depthwise_conv2d:[179,326,492,644,831,1151],depthwiseconv2d:1288,design:[47,54],det:[182,329,495,647,834,1159],dev:[109,270,577,745,989],dev_clon:990,dev_clone_arrai:991,dev_clone_it:992,dev_clone_nest:993,dev_dist:994,dev_dist_arrai:995,dev_dist_it:996,dev_dist_nest:997,dev_from_str:[110,271,578,746,998],dev_to_str:[111,272,579,747,999],dev_unifi:1000,dev_unify_arrai:1001,dev_unify_it:1002,dev_unify_nest:1003,dev_util:1004,devclonedit:974,devcloneditem:973,devclonednest:975,devdistit:977,devdistitem:976,devdistnest:978,devic:[20,107,268,422,575,742,971],devmapp:980,devmappermultiproc:981,diagon:[183,330,496,648,835,1160],divid:1036,document:1263,dropout:[1152,1289],dtype:[206,358,520,676,871,954,1207],dtype_bit:[207,359,521,677,872,955],dtype_from_str:[208,360,522,678,873,956],dtype_to_str:[209,361,523,679,874,957],ecosystem:57,eigvalsh:[184,331,497,649,836,1161],einops_rearrang:1081,einops_reduc:1082,einops_repeat:1083,einsum:[233,386,542,699,907,1252],elementwis:[114,274,424,582,750,1021],empti:[90,256,405,558,725,932],empty_lik:[91,406,559,726,933],equal:[127,437,595,765,1216],erf:[438,766,1037],execute_with_gradi:[166,311,477,633,815,1125],exist:1084,exp:[767,1038],expand_dim:[196,342,509,662,851,1180],explos:41,expm1:[128,439,596,768,1039],extens:64,eye:[92,257,407,560,727,934],finfo:[104,266,419,572,739,958],firstlayersiren:1274,flip:[197,343,510,663,852,1181],float_img_to_uint8_img:1139,floor:[129,280,440,597,769,1040,1217],floormod:[300,801,1085],fomaml_step:1189,fork:47,fourier_encod:1086,framework:65,full:[210,362,524,680,875,1218],full_lik:[93,408,561,728,935],func:78,gather:[156,301,467,623,802,1087],gather_nd:[157,302,468,624,803,1088],geglu:1268,gelu:[245,399,711,919,1269],gener:[22,154,201,297,349,465,514,622,670,795,860,1066,1208],get_all_arrays_in_memori:1089,get_all_arrays_on_dev:1005,get_framework:70,get_min_bas:1090,get_min_denomin:1091,get_num_dim:[876,1219],get_referrers_recurs:1092,glorotuniform:1275,gpu_is_avail:1006,gradient:[24,165,310,476,632,814,1121],gradient_descent_upd:1126,gradient_imag:[170,317,483,639,822,1140],greater_equ:[130,281,441,598,770,1041],gym:58,handler:65,has_nan:1093,ident:[211,363,525,681,877,1220],iinfo:[105,267,420,573,740,959],imag:[26,168,315,481,637,820,1137],implement:43,index_nest:1195,indices_wher:[212,364,526,878,1221],infinit:43,initi:1272,inplac:11,inplace_arrays_support:1094,inplace_decr:[158,303,469,625,804,1095],inplace_incr:[159,304,470,626,805,1096],inplace_upd:[160,305,471,627,806,1097],inplace_variables_support:1098,inv:[837,1162],invalid_dtyp:960,is_arrai:[161,306,472,628,807,1099],is_float_dtyp:961,is_int_dtyp:962,is_vari:[167,312,478,634,816,1127],isfinit:[131,282,442,599,771,1042],isinf:[132,283,443,600,772,1043],isnan:[133,284,444,601,773,1044],issu:47,ivi:[47,55,56,57,58,59,60,61,62,63,917],ivymodul:[85,720],jax:80,keep:47,lamb:1299,lamb_upd:1128,lar:1300,lars_upd:1129,layer:[172,319,485,641,824,1144,1281],layer_norm:1205,layernorm:1296,leaky_relu:[712,920],less:[134,285,445,602,774,1045],less_equ:[135,446,603,775,1046],life:43,linalg:[28,1237],linear:[180,218,327,373,493,532,645,686,832,892,1153,1157,1291],linear_resampl:[213,365,527,682,879,1222],linspac:[94,258,409,562,729,936],list:47,log10:[137,448,605,777,1048],log1p:[138,449,606,778,1049],log2:[139,450,607,779,1050],log:[136,447,604,776,1047],logaddexp:[140,451,608,780,1051],logic:30,logical_and:[141,286,452,609,781,1052],logical_not:[142,287,453,610,782,1053],logical_or:[143,288,454,611,783,1054],logical_xor:[144,289,455,612,784,1055],logspac:[95,259,410,563,730,937],loss:1174,lstm:1290,lstm_updat:1154,maml_step:1190,manipul:[195,340,508,660,849,1178],map:1196,map_nest_at_index:1197,map_nest_at_indic:1198,match_kwarg:1100,math:32,matmul:[185,366,498,650,838,1163,1223],matrix_norm:[186,332,499,651,839,1164],matrix_transpos:[187,500,652,840,1165],max:[234,387,543,700,908,1253],maximum:[880,1224],mean:[235,388,544,701,909,1254],mech:59,memori:60,meshgrid:[367,881,1225],meta:[34,1188],method:248,min:[236,389,545,702,910,1255],minimum:[882,1226],model:61,modul:[1293,1294],more:43,multi_head_attent:1155,multi_index_nest:1199,multidevcontain:46,multidevit:984,multidevitem:983,multidevnest:985,multiheadattent:1292,multinomi:[221,376,535,689,895,1240],multiprocess:[883,1227],mxnet:243,neg:[145,290,456,613,785,1056],nest:1192,nested_indices_wher:1200,nested_map:1201,next:1263,norm:[1204,1295],not_equ:[146,457,614,786,1057],num_arrays_in_memori:1101,num_arrays_on_dev:1007,num_cpu_cor:1008,num_gpu:[112,1009],numpi:397,nutshel:1263,old:[200,348,513,669,859,1206],one_hot:[214,528,683,884,1228],ones:[96,260,411,564,731,938,1229],ones_lik:[97,261,412,565,732,939],oper:[1,3,7,9,11,13,47],optim:[1297,1301],optimizer_upd:1130,overview:1263,percent_used_mem_on_dev:1010,permute_dim:[198,511,664,853,1182],pinv:[333,841,1166],posit:[147,458,615,787,1058],print_all_arrays_in_memori:1102,print_all_arrays_on_dev:1011,prod:[237,390,546,703,911,1256],profil:[108,269,423,576,743,986],pull:47,queue_timeout:1103,randint:[222,377,690,896,1241],random:[36,220,375,534,688,894,1239],random_crop:1141,random_norm:[223,378,691,897,1242],random_uniform:[224,379,692,898,1243],reduct:[38,219,374,533,687,893,1238],reflect:13,relu:[713,921],repeat:[344,854,1183],reptile_step:1191,request:47,reshap:[885,1230],result_typ:[106,421,574,741,963],roadmap:1266,robot:62,round:[148,291,459,616,788,1059],scaled_dot_product_attent:1156,scatter_flat:[162,307,473,629,808,1104],scatter_nd:[163,308,474,630,809,1105],search:[227,249,380,536,693,901,1246],seed:[225,899,1244],sequenti:[1303,1304],set:[229,250,382,538,695,903,1248],set_breakpoint_debug_mod:50,set_debug_mod:51,set_default_devic:1012,set_default_dtyp:964,set_default_float_dtyp:965,set_default_int_dtyp:966,set_exception_debug_mod:52,set_framework:71,set_min_bas:1106,set_min_denomin:1107,set_nest_at_index:1202,set_nest_at_indic:1203,set_queue_timeout:1108,set_split_factor:1013,set_tmp_dir:1109,set_with_grad:1131,sgd:1302,shape:[886,1231],shape_to_tupl:1110,shelf:43,shuffl:[226,900,1245],sigmoid:[714,922],signatur:248,sin:[149,292,460,617,789,1060],sinh:[150,293,461,618,790,1061],siren:1278,skeptic:42,slodget:1168,slogdet:[189,335,502,654,843],softmax:[82,400,715,923],softplu:[716,924],sort:[230,383,539,696,904,1249],sparse_cross_entropi:1177,split:[199,345,512,665,855,1184],split_factor:1014,split_func_cal:1015,sqrt:[151,294,462,619,791,1062],squar:[152,295,463,620,792,1063],squeez:[215,368,529,684,887,1232],stable_divid:1111,stable_pow:1112,stack:[369,888,1233],stack_imag:[171,318,484,640,823,1142],standard:[42,47],statist:[232,251,385,541,698,906,1251],std:[391,1257],stop_gradi:[313,479,635,817,1132],submodul:47,sum:[238,392,547,704,912,1258],supports_inplac:1113,svd:[190,336,503,655,844,1169],svdval:[191,504,656,845,1170],swapax:[666,856,1185],tan:[793,1064],tanh:[153,296,464,621,717,794,925,1065],tensorflow:552,tile:[346,667,857,1186],tmp_dir:1114,to_dev:[113,273,580,748,1016],to_ivi:18,to_ivy_modul:[86,721,1271],to_list:[810,1115],to_n:19,to_numpi:[811,1116],to_scalar:[812,1117],todo:47,torch:709,total_mem_on_dev:1017,tpu_is_avail:[581,749,1018],trace:[192,337,505,657,846,1171],transpos:[216,370,530,889,1234],tree:1263,tril:[98,262,413,566,733,940],triu:[99,414,567,734,941],try_else_non:1118,try_import_ivy_jax:72,try_import_ivy_mxnet:73,try_import_ivy_numpi:74,try_import_ivy_tf:75,try_import_ivy_torch:76,type:[101,247,264,416,569,736,943],uint8_img_to_float_img:1143,unifi:43,unset_debug_mod:53,unset_default_devic:1019,unset_default_dtyp:967,unset_default_float_dtyp:968,unset_default_int_dtyp:969,unset_framework:77,unset_with_grad:1133,unstack:[164,309,475,631,813,1119],updat:47,used_mem_on_dev:1020,util:[240,394,549,706,914,1260],valid_dtyp:970,value_is_nan:1120,variabl:[314,480,636,818,1134],variable_data:[819,1135],vector_norm:[193,338,506,658,847,1172],vector_to_skew_symmetric_matrix:[194,339,507,659,848,1173],verbos:1306,vision:63,where:[371,890,1235,1263],why:43,with_grad:1136,work:42,wrapper:78,your:47,zero:[100,263,415,568,735,942,1280],zero_pad:[347,668,858,1187],zeros_lik:[217,372,531,685,891,1236]}})