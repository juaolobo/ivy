Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","background","background/ml_explosion","background/standardization","background/why_unify","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","design","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","extensions","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/activations","functional/backends/jax/activations/softmax","functional/backends/jax/constants","functional/backends/jax/converters","functional/backends/jax/converters/IvyModule","functional/backends/jax/converters/to_ivy_module","functional/backends/jax/creation","functional/backends/jax/creation/array","functional/backends/jax/creation/asarray","functional/backends/jax/creation/empty","functional/backends/jax/creation/empty_like","functional/backends/jax/creation/eye","functional/backends/jax/creation/full_like","functional/backends/jax/creation/linspace","functional/backends/jax/creation/logspace","functional/backends/jax/creation/ones","functional/backends/jax/creation/ones_like","functional/backends/jax/creation/tril","functional/backends/jax/creation/triu","functional/backends/jax/creation/zeros","functional/backends/jax/data_type","functional/backends/jax/data_type/Finfo:\n\n    def __init__","functional/backends/jax/data_type/broadcast_to","functional/backends/jax/data_type/finfo","functional/backends/jax/data_type/iinfo","functional/backends/jax/data_type/result_type","functional/backends/jax/device","functional/backends/jax/device/Profiler","functional/backends/jax/device/dev","functional/backends/jax/device/dev_from_str","functional/backends/jax/device/dev_to_str","functional/backends/jax/device/num_gpus","functional/backends/jax/device/to_dev","functional/backends/jax/elementwise","functional/backends/jax/elementwise/abs","functional/backends/jax/elementwise/acos","functional/backends/jax/elementwise/acosh","functional/backends/jax/elementwise/asin","functional/backends/jax/elementwise/asinh","functional/backends/jax/elementwise/bitwise_and","functional/backends/jax/elementwise/bitwise_invert","functional/backends/jax/elementwise/bitwise_or","functional/backends/jax/elementwise/ceil","functional/backends/jax/elementwise/cos","functional/backends/jax/elementwise/cosh","functional/backends/jax/elementwise/equal","functional/backends/jax/elementwise/expm1","functional/backends/jax/elementwise/floor","functional/backends/jax/elementwise/greater_equal","functional/backends/jax/elementwise/isfinite","functional/backends/jax/elementwise/isinf","functional/backends/jax/elementwise/isnan","functional/backends/jax/elementwise/less","functional/backends/jax/elementwise/less_equal","functional/backends/jax/elementwise/log","functional/backends/jax/elementwise/log10","functional/backends/jax/elementwise/log1p","functional/backends/jax/elementwise/log2","functional/backends/jax/elementwise/logaddexp","functional/backends/jax/elementwise/logical_and","functional/backends/jax/elementwise/logical_not","functional/backends/jax/elementwise/logical_or","functional/backends/jax/elementwise/logical_xor","functional/backends/jax/elementwise/negative","functional/backends/jax/elementwise/not_equal","functional/backends/jax/elementwise/positive","functional/backends/jax/elementwise/round","functional/backends/jax/elementwise/sin","functional/backends/jax/elementwise/sinh","functional/backends/jax/elementwise/sqrt","functional/backends/jax/elementwise/square","functional/backends/jax/elementwise/tanh","functional/backends/jax/general","functional/backends/jax/general/cumprod","functional/backends/jax/general/gather","functional/backends/jax/general/gather_nd","functional/backends/jax/general/inplace_decrement","functional/backends/jax/general/inplace_increment","functional/backends/jax/general/inplace_update","functional/backends/jax/general/is_array","functional/backends/jax/general/scatter_flat","functional/backends/jax/general/scatter_nd","functional/backends/jax/general/unstack","functional/backends/jax/gradients","functional/backends/jax/gradients/execute_with_gradients","functional/backends/jax/gradients/is_variable","functional/backends/jax/image","functional/backends/jax/image/bilinear_resample","functional/backends/jax/image/gradient_image","functional/backends/jax/image/stack_images","functional/backends/jax/layers","functional/backends/jax/layers/conv1d","functional/backends/jax/layers/conv1d_transpose","functional/backends/jax/layers/conv2d","functional/backends/jax/layers/conv2d_transpose","functional/backends/jax/layers/conv3d","functional/backends/jax/layers/conv3d_transpose","functional/backends/jax/layers/depthwise_conv2d","functional/backends/jax/linear_algebra","functional/backends/jax/linear_algebra/cholesky","functional/backends/jax/linear_algebra/det","functional/backends/jax/linear_algebra/diagonal","functional/backends/jax/linear_algebra/eigvalsh","functional/backends/jax/linear_algebra/matmul","functional/backends/jax/linear_algebra/matrix_norm","functional/backends/jax/linear_algebra/matrix_transpose","functional/backends/jax/linear_algebra/qr","functional/backends/jax/linear_algebra/slogdet","functional/backends/jax/linear_algebra/svd","functional/backends/jax/linear_algebra/svdvals","functional/backends/jax/linear_algebra/trace","functional/backends/jax/linear_algebra/vector_norm","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/manipulation","functional/backends/jax/manipulation/expand_dims","functional/backends/jax/manipulation/flip","functional/backends/jax/manipulation/permute_dims","functional/backends/jax/manipulation/split","functional/backends/jax/old","functional/backends/jax/old/general","functional/backends/jax/old/general/arange","functional/backends/jax/old/general/argmin","functional/backends/jax/old/general/cast","functional/backends/jax/old/general/concatenate","functional/backends/jax/old/general/dtype","functional/backends/jax/old/general/dtype_bits","functional/backends/jax/old/general/dtype_from_str","functional/backends/jax/old/general/dtype_to_str","functional/backends/jax/old/general/full","functional/backends/jax/old/general/identity","functional/backends/jax/old/general/indices_where","functional/backends/jax/old/general/linear_resample","functional/backends/jax/old/general/one_hot","functional/backends/jax/old/general/squeeze","functional/backends/jax/old/general/transpose","functional/backends/jax/old/general/zeros_like","functional/backends/jax/old/linear_algebra","functional/backends/jax/old/reductions","functional/backends/jax/random","functional/backends/jax/random/multinomial","functional/backends/jax/random/randint","functional/backends/jax/random/random_normal","functional/backends/jax/random/random_uniform","functional/backends/jax/random/seed","functional/backends/jax/random/shuffle","functional/backends/jax/searching","functional/backends/jax/searching/argmax","functional/backends/jax/set","functional/backends/jax/sorting","functional/backends/jax/sorting/argsort","functional/backends/jax/statistical","functional/backends/jax/statistical/einsum","functional/backends/jax/statistical/max","functional/backends/jax/statistical/mean","functional/backends/jax/statistical/min","functional/backends/jax/statistical/prod","functional/backends/jax/statistical/sum","functional/backends/jax/statistical/var","functional/backends/jax/utility","functional/backends/jax/utility/all","functional/backends/jax/utility/any","functional/backends/mxnet","functional/backends/mxnet/activations","functional/backends/mxnet/activations/gelu","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/constants","functional/backends/mxnet/creation","functional/backends/mxnet/creation/array","functional/backends/mxnet/creation/asarray","functional/backends/mxnet/creation/empty","functional/backends/mxnet/creation/eye","functional/backends/mxnet/creation/linspace","functional/backends/mxnet/creation/logspace","functional/backends/mxnet/creation/ones","functional/backends/mxnet/creation/ones_like","functional/backends/mxnet/creation/tril","functional/backends/mxnet/creation/zeros","functional/backends/mxnet/data_type","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__","functional/backends/mxnet/data_type/finfo","functional/backends/mxnet/data_type/iinfo","functional/backends/mxnet/device","functional/backends/mxnet/device/Profiler","functional/backends/mxnet/device/dev","functional/backends/mxnet/device/dev_from_str","functional/backends/mxnet/device/dev_to_str","functional/backends/mxnet/device/to_dev","functional/backends/mxnet/elementwise","functional/backends/mxnet/elementwise/acos","functional/backends/mxnet/elementwise/acosh","functional/backends/mxnet/elementwise/bitwise_and","functional/backends/mxnet/elementwise/bitwise_or","functional/backends/mxnet/elementwise/ceil","functional/backends/mxnet/elementwise/floor","functional/backends/mxnet/elementwise/greater_equal","functional/backends/mxnet/elementwise/isfinite","functional/backends/mxnet/elementwise/isinf","functional/backends/mxnet/elementwise/isnan","functional/backends/mxnet/elementwise/less","functional/backends/mxnet/elementwise/logical_and","functional/backends/mxnet/elementwise/logical_not","functional/backends/mxnet/elementwise/logical_or","functional/backends/mxnet/elementwise/logical_xor","functional/backends/mxnet/elementwise/negative","functional/backends/mxnet/elementwise/round","functional/backends/mxnet/elementwise/sin","functional/backends/mxnet/elementwise/sinh","functional/backends/mxnet/elementwise/sqrt","functional/backends/mxnet/elementwise/square","functional/backends/mxnet/elementwise/tanh","functional/backends/mxnet/general","functional/backends/mxnet/general/array_equal","functional/backends/mxnet/general/cumprod","functional/backends/mxnet/general/floormod","functional/backends/mxnet/general/gather","functional/backends/mxnet/general/gather_nd","functional/backends/mxnet/general/inplace_decrement","functional/backends/mxnet/general/inplace_increment","functional/backends/mxnet/general/inplace_update","functional/backends/mxnet/general/is_array","functional/backends/mxnet/general/scatter_flat","functional/backends/mxnet/general/scatter_nd","functional/backends/mxnet/general/unstack","functional/backends/mxnet/gradients","functional/backends/mxnet/gradients/execute_with_gradients","functional/backends/mxnet/gradients/is_variable","functional/backends/mxnet/gradients/stop_gradient","functional/backends/mxnet/gradients/variable","functional/backends/mxnet/image","functional/backends/mxnet/image/bilinear_resample","functional/backends/mxnet/image/gradient_image","functional/backends/mxnet/image/stack_images","functional/backends/mxnet/layers","functional/backends/mxnet/layers/conv1d","functional/backends/mxnet/layers/conv1d_transpose","functional/backends/mxnet/layers/conv2d","functional/backends/mxnet/layers/conv2d_transpose","functional/backends/mxnet/layers/conv3d","functional/backends/mxnet/layers/conv3d_transpose","functional/backends/mxnet/layers/depthwise_conv2d","functional/backends/mxnet/linear_algebra","functional/backends/mxnet/linear_algebra/cholesky","functional/backends/mxnet/linear_algebra/det","functional/backends/mxnet/linear_algebra/diagonal","functional/backends/mxnet/linear_algebra/eigvalsh","functional/backends/mxnet/linear_algebra/matrix_norm","functional/backends/mxnet/linear_algebra/pinv","functional/backends/mxnet/linear_algebra/qr","functional/backends/mxnet/linear_algebra/slogdet","functional/backends/mxnet/linear_algebra/svd","functional/backends/mxnet/linear_algebra/trace","functional/backends/mxnet/linear_algebra/vector_norm","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/manipulation","functional/backends/mxnet/manipulation/constant_pad","functional/backends/mxnet/manipulation/expand_dims","functional/backends/mxnet/manipulation/flip","functional/backends/mxnet/manipulation/repeat","functional/backends/mxnet/manipulation/split","functional/backends/mxnet/manipulation/tile","functional/backends/mxnet/manipulation/zero_pad","functional/backends/mxnet/old","functional/backends/mxnet/old/general","functional/backends/mxnet/old/general/abs","functional/backends/mxnet/old/general/arange","functional/backends/mxnet/old/general/broadcast_to","functional/backends/mxnet/old/general/cast","functional/backends/mxnet/old/general/clip","functional/backends/mxnet/old/general/compile","functional/backends/mxnet/old/general/concatenate","functional/backends/mxnet/old/general/cross","functional/backends/mxnet/old/general/dtype","functional/backends/mxnet/old/general/dtype_bits","functional/backends/mxnet/old/general/dtype_from_str","functional/backends/mxnet/old/general/dtype_to_str","functional/backends/mxnet/old/general/full","functional/backends/mxnet/old/general/identity","functional/backends/mxnet/old/general/indices_where","functional/backends/mxnet/old/general/linear_resample","functional/backends/mxnet/old/general/matmul","functional/backends/mxnet/old/general/meshgrid","functional/backends/mxnet/old/general/squeeze","functional/backends/mxnet/old/general/stack","functional/backends/mxnet/old/general/transpose","functional/backends/mxnet/old/general/where","functional/backends/mxnet/old/general/zeros_like","functional/backends/mxnet/old/linear_algebra","functional/backends/mxnet/old/reductions","functional/backends/mxnet/random","functional/backends/mxnet/random/multinomial","functional/backends/mxnet/random/randint","functional/backends/mxnet/random/random_normal","functional/backends/mxnet/random/random_uniform","functional/backends/mxnet/searching","functional/backends/mxnet/searching/argmax","functional/backends/mxnet/set","functional/backends/mxnet/sorting","functional/backends/mxnet/sorting/argsort","functional/backends/mxnet/statistical","functional/backends/mxnet/statistical/einsum","functional/backends/mxnet/statistical/max","functional/backends/mxnet/statistical/mean","functional/backends/mxnet/statistical/min","functional/backends/mxnet/statistical/prod","functional/backends/mxnet/statistical/std","functional/backends/mxnet/statistical/sum","functional/backends/mxnet/statistical/var","functional/backends/mxnet/utility","functional/backends/mxnet/utility/all","functional/backends/mxnet/utility/any","functional/backends/numpy","functional/backends/numpy/activations","functional/backends/numpy/activations/gelu","functional/backends/numpy/activations/softmax","functional/backends/numpy/constants","functional/backends/numpy/creation","functional/backends/numpy/creation/array","functional/backends/numpy/creation/asarray","functional/backends/numpy/creation/empty","functional/backends/numpy/creation/empty_like","functional/backends/numpy/creation/eye","functional/backends/numpy/creation/full_like","functional/backends/numpy/creation/linspace","functional/backends/numpy/creation/logspace","functional/backends/numpy/creation/ones","functional/backends/numpy/creation/ones_like","functional/backends/numpy/creation/tril","functional/backends/numpy/creation/triu","functional/backends/numpy/creation/zeros","functional/backends/numpy/data_type","functional/backends/numpy/data_type/Finfo:\n\n    def __init__","functional/backends/numpy/data_type/broadcast_to","functional/backends/numpy/data_type/finfo","functional/backends/numpy/data_type/iinfo","functional/backends/numpy/data_type/result_type","functional/backends/numpy/device","functional/backends/numpy/device/Profiler","functional/backends/numpy/elementwise","functional/backends/numpy/elementwise/abs","functional/backends/numpy/elementwise/acos","functional/backends/numpy/elementwise/acosh","functional/backends/numpy/elementwise/asin","functional/backends/numpy/elementwise/asinh","functional/backends/numpy/elementwise/bitwise_and","functional/backends/numpy/elementwise/bitwise_invert","functional/backends/numpy/elementwise/bitwise_or","functional/backends/numpy/elementwise/ceil","functional/backends/numpy/elementwise/cos","functional/backends/numpy/elementwise/cosh","functional/backends/numpy/elementwise/equal","functional/backends/numpy/elementwise/erf","functional/backends/numpy/elementwise/expm1","functional/backends/numpy/elementwise/floor","functional/backends/numpy/elementwise/greater_equal","functional/backends/numpy/elementwise/isfinite","functional/backends/numpy/elementwise/isinf","functional/backends/numpy/elementwise/isnan","functional/backends/numpy/elementwise/less","functional/backends/numpy/elementwise/less_equal","functional/backends/numpy/elementwise/log","functional/backends/numpy/elementwise/log10","functional/backends/numpy/elementwise/log1p","functional/backends/numpy/elementwise/log2","functional/backends/numpy/elementwise/logaddexp","functional/backends/numpy/elementwise/logical_and","functional/backends/numpy/elementwise/logical_not","functional/backends/numpy/elementwise/logical_or","functional/backends/numpy/elementwise/logical_xor","functional/backends/numpy/elementwise/negative","functional/backends/numpy/elementwise/not_equal","functional/backends/numpy/elementwise/positive","functional/backends/numpy/elementwise/round","functional/backends/numpy/elementwise/sin","functional/backends/numpy/elementwise/sinh","functional/backends/numpy/elementwise/sqrt","functional/backends/numpy/elementwise/square","functional/backends/numpy/elementwise/tanh","functional/backends/numpy/general","functional/backends/numpy/general/cumprod","functional/backends/numpy/general/gather","functional/backends/numpy/general/gather_nd","functional/backends/numpy/general/inplace_decrement","functional/backends/numpy/general/inplace_increment","functional/backends/numpy/general/inplace_update","functional/backends/numpy/general/is_array","functional/backends/numpy/general/scatter_flat","functional/backends/numpy/general/scatter_nd","functional/backends/numpy/general/unstack","functional/backends/numpy/gradients","functional/backends/numpy/gradients/execute_with_gradients","functional/backends/numpy/gradients/is_variable","functional/backends/numpy/gradients/stop_gradient","functional/backends/numpy/gradients/variable","functional/backends/numpy/image","functional/backends/numpy/image/bilinear_resample","functional/backends/numpy/image/gradient_image","functional/backends/numpy/image/stack_images","functional/backends/numpy/layers","functional/backends/numpy/layers/conv1d","functional/backends/numpy/layers/conv1d_transpose","functional/backends/numpy/layers/conv2d","functional/backends/numpy/layers/conv2d_transpose","functional/backends/numpy/layers/conv3d","functional/backends/numpy/layers/conv3d_transpose","functional/backends/numpy/layers/depthwise_conv2d","functional/backends/numpy/linear_algebra","functional/backends/numpy/linear_algebra/cholesky","functional/backends/numpy/linear_algebra/det","functional/backends/numpy/linear_algebra/diagonal","functional/backends/numpy/linear_algebra/eigvalsh","functional/backends/numpy/linear_algebra/matmul","functional/backends/numpy/linear_algebra/matrix_norm","functional/backends/numpy/linear_algebra/matrix_transpose","functional/backends/numpy/linear_algebra/qr","functional/backends/numpy/linear_algebra/slogdet","functional/backends/numpy/linear_algebra/svd","functional/backends/numpy/linear_algebra/svdvals","functional/backends/numpy/linear_algebra/trace","functional/backends/numpy/linear_algebra/vector_norm","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/manipulation","functional/backends/numpy/manipulation/expand_dims","functional/backends/numpy/manipulation/flip","functional/backends/numpy/manipulation/permute_dims","functional/backends/numpy/manipulation/split","functional/backends/numpy/old","functional/backends/numpy/old/general","functional/backends/numpy/old/general/arange","functional/backends/numpy/old/general/argmin","functional/backends/numpy/old/general/cast","functional/backends/numpy/old/general/compile","functional/backends/numpy/old/general/concatenate","functional/backends/numpy/old/general/dtype","functional/backends/numpy/old/general/dtype_bits","functional/backends/numpy/old/general/dtype_from_str","functional/backends/numpy/old/general/dtype_to_str","functional/backends/numpy/old/general/full","functional/backends/numpy/old/general/identity","functional/backends/numpy/old/general/indices_where","functional/backends/numpy/old/general/linear_resample","functional/backends/numpy/old/general/one_hot","functional/backends/numpy/old/general/squeeze","functional/backends/numpy/old/general/transpose","functional/backends/numpy/old/general/zeros_like","functional/backends/numpy/old/linear_algebra","functional/backends/numpy/old/reductions","functional/backends/numpy/random","functional/backends/numpy/random/multinomial","functional/backends/numpy/searching","functional/backends/numpy/searching/argmax","functional/backends/numpy/set","functional/backends/numpy/sorting","functional/backends/numpy/sorting/argsort","functional/backends/numpy/statistical","functional/backends/numpy/statistical/einsum","functional/backends/numpy/statistical/max","functional/backends/numpy/statistical/mean","functional/backends/numpy/statistical/min","functional/backends/numpy/statistical/prod","functional/backends/numpy/statistical/sum","functional/backends/numpy/statistical/var","functional/backends/numpy/utility","functional/backends/numpy/utility/all","functional/backends/numpy/utility/any","functional/backends/tensorflow","functional/backends/tensorflow/activations","functional/backends/tensorflow/constants","functional/backends/tensorflow/creation","functional/backends/tensorflow/creation/array","functional/backends/tensorflow/creation/asarray","functional/backends/tensorflow/creation/empty","functional/backends/tensorflow/creation/empty_like","functional/backends/tensorflow/creation/eye","functional/backends/tensorflow/creation/full_like","functional/backends/tensorflow/creation/linspace","functional/backends/tensorflow/creation/logspace","functional/backends/tensorflow/creation/ones","functional/backends/tensorflow/creation/ones_like","functional/backends/tensorflow/creation/tril","functional/backends/tensorflow/creation/triu","functional/backends/tensorflow/creation/zeros","functional/backends/tensorflow/data_type","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__","functional/backends/tensorflow/data_type/broadcast_to ","functional/backends/tensorflow/data_type/finfo","functional/backends/tensorflow/data_type/iinfo","functional/backends/tensorflow/data_type/result_type","functional/backends/tensorflow/device","functional/backends/tensorflow/device/Profiler","functional/backends/tensorflow/device/dev","functional/backends/tensorflow/device/dev_from_str","functional/backends/tensorflow/device/dev_to_str","functional/backends/tensorflow/device/to_dev","functional/backends/tensorflow/device/tpu_is_available","functional/backends/tensorflow/elementwise","functional/backends/tensorflow/elementwise/abs","functional/backends/tensorflow/elementwise/acos","functional/backends/tensorflow/elementwise/acosh","functional/backends/tensorflow/elementwise/asin","functional/backends/tensorflow/elementwise/asinh","functional/backends/tensorflow/elementwise/bitwise_and","functional/backends/tensorflow/elementwise/bitwise_invert","functional/backends/tensorflow/elementwise/bitwise_or","functional/backends/tensorflow/elementwise/ceil","functional/backends/tensorflow/elementwise/cos","functional/backends/tensorflow/elementwise/cosh","functional/backends/tensorflow/elementwise/equal","functional/backends/tensorflow/elementwise/expm1","functional/backends/tensorflow/elementwise/floor","functional/backends/tensorflow/elementwise/greater_equal","functional/backends/tensorflow/elementwise/isfinite","functional/backends/tensorflow/elementwise/isinf","functional/backends/tensorflow/elementwise/isnan","functional/backends/tensorflow/elementwise/less","functional/backends/tensorflow/elementwise/less_equal","functional/backends/tensorflow/elementwise/log","functional/backends/tensorflow/elementwise/log10","functional/backends/tensorflow/elementwise/log1p","functional/backends/tensorflow/elementwise/log2","functional/backends/tensorflow/elementwise/logaddexp","functional/backends/tensorflow/elementwise/logical_and","functional/backends/tensorflow/elementwise/logical_not","functional/backends/tensorflow/elementwise/logical_or","functional/backends/tensorflow/elementwise/logical_xor","functional/backends/tensorflow/elementwise/negative","functional/backends/tensorflow/elementwise/not_equal","functional/backends/tensorflow/elementwise/positive","functional/backends/tensorflow/elementwise/round","functional/backends/tensorflow/elementwise/sin","functional/backends/tensorflow/elementwise/sinh","functional/backends/tensorflow/elementwise/sqrt","functional/backends/tensorflow/elementwise/square","functional/backends/tensorflow/elementwise/tanh","functional/backends/tensorflow/general","functional/backends/tensorflow/general/gather","functional/backends/tensorflow/general/gather_nd","functional/backends/tensorflow/general/inplace_decrement","functional/backends/tensorflow/general/inplace_increment","functional/backends/tensorflow/general/inplace_update","functional/backends/tensorflow/general/is_array","functional/backends/tensorflow/general/scatter_flat","functional/backends/tensorflow/general/scatter_nd","functional/backends/tensorflow/general/unstack","functional/backends/tensorflow/gradients","functional/backends/tensorflow/gradients/execute_with_gradients","functional/backends/tensorflow/gradients/is_variable","functional/backends/tensorflow/gradients/stop_gradient","functional/backends/tensorflow/gradients/variable","functional/backends/tensorflow/image","functional/backends/tensorflow/image/bilinear_resample","functional/backends/tensorflow/image/gradient_image","functional/backends/tensorflow/image/stack_images","functional/backends/tensorflow/layers","functional/backends/tensorflow/layers/conv2d","functional/backends/tensorflow/layers/conv3d","functional/backends/tensorflow/layers/depthwise_conv2d","functional/backends/tensorflow/linear_algebra","functional/backends/tensorflow/linear_algebra/cholesky","functional/backends/tensorflow/linear_algebra/det","functional/backends/tensorflow/linear_algebra/diagonal","functional/backends/tensorflow/linear_algebra/eigvalsh","functional/backends/tensorflow/linear_algebra/matmul","functional/backends/tensorflow/linear_algebra/matrix_norm","functional/backends/tensorflow/linear_algebra/matrix_transpose","functional/backends/tensorflow/linear_algebra/qr","functional/backends/tensorflow/linear_algebra/slogdet","functional/backends/tensorflow/linear_algebra/svd","functional/backends/tensorflow/linear_algebra/svdvals","functional/backends/tensorflow/linear_algebra/trace","functional/backends/tensorflow/linear_algebra/vector_norm","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/manipulation","functional/backends/tensorflow/manipulation/constant_pad","functional/backends/tensorflow/manipulation/expand_dims","functional/backends/tensorflow/manipulation/flip","functional/backends/tensorflow/manipulation/permute_dims","functional/backends/tensorflow/manipulation/split","functional/backends/tensorflow/manipulation/swapaxes","functional/backends/tensorflow/manipulation/tile","functional/backends/tensorflow/manipulation/zero_pad","functional/backends/tensorflow/old","functional/backends/tensorflow/old/general","functional/backends/tensorflow/old/general/abs","functional/backends/tensorflow/old/general/arange","functional/backends/tensorflow/old/general/argmin","functional/backends/tensorflow/old/general/cast","functional/backends/tensorflow/old/general/concatenate","functional/backends/tensorflow/old/general/dtype","functional/backends/tensorflow/old/general/dtype_bits","functional/backends/tensorflow/old/general/dtype_from_str","functional/backends/tensorflow/old/general/dtype_to_str","functional/backends/tensorflow/old/general/full","functional/backends/tensorflow/old/general/identity","functional/backends/tensorflow/old/general/linear_resample","functional/backends/tensorflow/old/general/one_hot","functional/backends/tensorflow/old/general/squeeze","functional/backends/tensorflow/old/general/zeros_like","functional/backends/tensorflow/old/linear_algebra","functional/backends/tensorflow/old/reductions","functional/backends/tensorflow/random","functional/backends/tensorflow/random/multinomial","functional/backends/tensorflow/random/randint","functional/backends/tensorflow/random/random_normal","functional/backends/tensorflow/random/random_uniform","functional/backends/tensorflow/searching","functional/backends/tensorflow/searching/argmax","functional/backends/tensorflow/set","functional/backends/tensorflow/sorting","functional/backends/tensorflow/sorting/argsort","functional/backends/tensorflow/statistical","functional/backends/tensorflow/statistical/einsum","functional/backends/tensorflow/statistical/max","functional/backends/tensorflow/statistical/mean","functional/backends/tensorflow/statistical/min","functional/backends/tensorflow/statistical/prod","functional/backends/tensorflow/statistical/sum","functional/backends/tensorflow/statistical/var","functional/backends/tensorflow/utility","functional/backends/tensorflow/utility/all","functional/backends/tensorflow/utility/any","functional/backends/torch","functional/backends/torch/activations","functional/backends/torch/activations/gelu","functional/backends/torch/activations/leaky_relu","functional/backends/torch/activations/relu","functional/backends/torch/activations/sigmoid","functional/backends/torch/activations/softmax","functional/backends/torch/activations/softplus","functional/backends/torch/activations/tanh","functional/backends/torch/constants","functional/backends/torch/converters","functional/backends/torch/converters/IvyModule","functional/backends/torch/converters/to_ivy_module","functional/backends/torch/creation","functional/backends/torch/creation/array","functional/backends/torch/creation/asarray","functional/backends/torch/creation/empty","functional/backends/torch/creation/empty_like","functional/backends/torch/creation/eye","functional/backends/torch/creation/full_like","functional/backends/torch/creation/linspace","functional/backends/torch/creation/logspace","functional/backends/torch/creation/ones","functional/backends/torch/creation/ones_like","functional/backends/torch/creation/tril","functional/backends/torch/creation/triu","functional/backends/torch/creation/zeros","functional/backends/torch/data_type","functional/backends/torch/data_type/Finfo:\n\n    def __init__","functional/backends/torch/data_type/broadcast_to","functional/backends/torch/data_type/finfo","functional/backends/torch/data_type/iinfo","functional/backends/torch/data_type/result_type","functional/backends/torch/device","functional/backends/torch/device/Profiler","functional/backends/torch/device/clear_mem_on_dev","functional/backends/torch/device/dev","functional/backends/torch/device/dev_from_str","functional/backends/torch/device/dev_to_str","functional/backends/torch/device/to_dev","functional/backends/torch/device/tpu_is_available","functional/backends/torch/elementwise","functional/backends/torch/elementwise/abs","functional/backends/torch/elementwise/acos","functional/backends/torch/elementwise/acosh","functional/backends/torch/elementwise/asin","functional/backends/torch/elementwise/asinh","functional/backends/torch/elementwise/atan","functional/backends/torch/elementwise/atan2","functional/backends/torch/elementwise/atanh","functional/backends/torch/elementwise/bitwise_and","functional/backends/torch/elementwise/bitwise_invert","functional/backends/torch/elementwise/bitwise_or","functional/backends/torch/elementwise/ceil","functional/backends/torch/elementwise/cos","functional/backends/torch/elementwise/cosh","functional/backends/torch/elementwise/equal","functional/backends/torch/elementwise/erf","functional/backends/torch/elementwise/exp","functional/backends/torch/elementwise/expm1","functional/backends/torch/elementwise/floor","functional/backends/torch/elementwise/greater_equal","functional/backends/torch/elementwise/isfinite","functional/backends/torch/elementwise/isinf","functional/backends/torch/elementwise/isnan","functional/backends/torch/elementwise/less","functional/backends/torch/elementwise/less_equal","functional/backends/torch/elementwise/log","functional/backends/torch/elementwise/log10","functional/backends/torch/elementwise/log1p","functional/backends/torch/elementwise/log2","functional/backends/torch/elementwise/logaddexp","functional/backends/torch/elementwise/logical_and","functional/backends/torch/elementwise/logical_not","functional/backends/torch/elementwise/logical_or","functional/backends/torch/elementwise/logical_xor","functional/backends/torch/elementwise/negative","functional/backends/torch/elementwise/not_equal","functional/backends/torch/elementwise/positive","functional/backends/torch/elementwise/round","functional/backends/torch/elementwise/sin","functional/backends/torch/elementwise/sinh","functional/backends/torch/elementwise/sqrt","functional/backends/torch/elementwise/square","functional/backends/torch/elementwise/tan","functional/backends/torch/elementwise/tanh","functional/backends/torch/general","functional/backends/torch/general/array_equal","functional/backends/torch/general/container_types","functional/backends/torch/general/copy_array","functional/backends/torch/general/cumprod","functional/backends/torch/general/cumsum","functional/backends/torch/general/floormod","functional/backends/torch/general/gather","functional/backends/torch/general/gather_nd","functional/backends/torch/general/inplace_decrement","functional/backends/torch/general/inplace_increment","functional/backends/torch/general/inplace_update","functional/backends/torch/general/is_array","functional/backends/torch/general/scatter_flat","functional/backends/torch/general/scatter_nd","functional/backends/torch/general/to_list","functional/backends/torch/general/to_numpy","functional/backends/torch/general/to_scalar","functional/backends/torch/general/unstack","functional/backends/torch/gradients","functional/backends/torch/gradients/execute_with_gradients","functional/backends/torch/gradients/is_variable","functional/backends/torch/gradients/stop_gradient","functional/backends/torch/gradients/variable","functional/backends/torch/gradients/variable_data","functional/backends/torch/image","functional/backends/torch/image/bilinear_resample","functional/backends/torch/image/gradient_image","functional/backends/torch/image/stack_images","functional/backends/torch/layers","functional/backends/torch/layers/conv1d","functional/backends/torch/layers/conv1d_transpose","functional/backends/torch/layers/conv2d","functional/backends/torch/layers/conv2d_transpose","functional/backends/torch/layers/conv3d","functional/backends/torch/layers/conv3d_transpose","functional/backends/torch/layers/depthwise_conv2d","functional/backends/torch/linear_algebra","functional/backends/torch/linear_algebra/cholesky","functional/backends/torch/linear_algebra/det","functional/backends/torch/linear_algebra/diagonal","functional/backends/torch/linear_algebra/eigvalsh","functional/backends/torch/linear_algebra/inv","functional/backends/torch/linear_algebra/matmul","functional/backends/torch/linear_algebra/matrix_norm","functional/backends/torch/linear_algebra/matrix_transpose","functional/backends/torch/linear_algebra/pinv","functional/backends/torch/linear_algebra/qr","functional/backends/torch/linear_algebra/slogdet","functional/backends/torch/linear_algebra/svd","functional/backends/torch/linear_algebra/svdvals","functional/backends/torch/linear_algebra/trace","functional/backends/torch/linear_algebra/vector_norm","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/manipulation","functional/backends/torch/manipulation/constant_pad","functional/backends/torch/manipulation/expand_dims","functional/backends/torch/manipulation/flip","functional/backends/torch/manipulation/permute_dims","functional/backends/torch/manipulation/repeat","functional/backends/torch/manipulation/split","functional/backends/torch/manipulation/swapaxes","functional/backends/torch/manipulation/tile","functional/backends/torch/manipulation/zero_pad","functional/backends/torch/old","functional/backends/torch/old/general","functional/backends/torch/old/general/abs","functional/backends/torch/old/general/arange","functional/backends/torch/old/general/argmin","functional/backends/torch/old/general/broadcast_to","functional/backends/torch/old/general/cast","functional/backends/torch/old/general/clip","functional/backends/torch/old/general/compile","functional/backends/torch/old/general/concatenate","functional/backends/torch/old/general/cross","functional/backends/torch/old/general/current_framework_str","functional/backends/torch/old/general/dtype","functional/backends/torch/old/general/dtype_bits","functional/backends/torch/old/general/dtype_from_str","functional/backends/torch/old/general/dtype_to_str","functional/backends/torch/old/general/full","functional/backends/torch/old/general/get_num_dims","functional/backends/torch/old/general/identity","functional/backends/torch/old/general/indices_where","functional/backends/torch/old/general/linear_resample","functional/backends/torch/old/general/maximum","functional/backends/torch/old/general/meshgrid","functional/backends/torch/old/general/minimum","functional/backends/torch/old/general/multiprocessing","functional/backends/torch/old/general/one_hot","functional/backends/torch/old/general/reshape","functional/backends/torch/old/general/shape","functional/backends/torch/old/general/squeeze","functional/backends/torch/old/general/stack","functional/backends/torch/old/general/transpose","functional/backends/torch/old/general/where","functional/backends/torch/old/general/zeros_like","functional/backends/torch/old/linear_algebra","functional/backends/torch/old/reductions","functional/backends/torch/random","functional/backends/torch/random/multinomial","functional/backends/torch/random/randint","functional/backends/torch/random/random_normal","functional/backends/torch/random/random_uniform","functional/backends/torch/random/seed","functional/backends/torch/random/shuffle","functional/backends/torch/searching","functional/backends/torch/searching/argmax","functional/backends/torch/set","functional/backends/torch/sorting","functional/backends/torch/sorting/argsort","functional/backends/torch/statistical","functional/backends/torch/statistical/einsum","functional/backends/torch/statistical/max","functional/backends/torch/statistical/mean","functional/backends/torch/statistical/min","functional/backends/torch/statistical/prod","functional/backends/torch/statistical/sum","functional/backends/torch/statistical/var","functional/backends/torch/utility","functional/backends/torch/utility/all","functional/backends/torch/utility/any","functional/ivy","functional/ivy/activations","functional/ivy/activations/gelu","functional/ivy/activations/leaky_relu","functional/ivy/activations/relu","functional/ivy/activations/sigmoid","functional/ivy/activations/softmax","functional/ivy/activations/softplus","functional/ivy/activations/tanh","functional/ivy/compilation","functional/ivy/compilation/compile","functional/ivy/constants","functional/ivy/creation","functional/ivy/creation/array","functional/ivy/creation/asarray","functional/ivy/creation/empty","functional/ivy/creation/empty_like","functional/ivy/creation/eye","functional/ivy/creation/full_like","functional/ivy/creation/linspace","functional/ivy/creation/logspace","functional/ivy/creation/ones","functional/ivy/creation/ones_like","functional/ivy/creation/tril","functional/ivy/creation/triu","functional/ivy/creation/zeros","functional/ivy/data_type","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/broadcast_to","functional/ivy/data_type/cast","functional/ivy/data_type/closest_valid_dtype","functional/ivy/data_type/convert_dtype","functional/ivy/data_type/default_dtype","functional/ivy/data_type/default_float_dtype","functional/ivy/data_type/default_int_dtype","functional/ivy/data_type/dtype","functional/ivy/data_type/dtype_bits","functional/ivy/data_type/dtype_from_str","functional/ivy/data_type/dtype_to_str","functional/ivy/data_type/finfo","functional/ivy/data_type/iinfo","functional/ivy/data_type/invalid_dtype","functional/ivy/data_type/is_float_dtype","functional/ivy/data_type/is_int_dtype","functional/ivy/data_type/result_type","functional/ivy/data_type/set_default_dtype","functional/ivy/data_type/set_default_float_dtype","functional/ivy/data_type/set_default_int_dtype","functional/ivy/data_type/unset_default_dtype","functional/ivy/data_type/unset_default_float_dtype","functional/ivy/data_type/unset_default_int_dtype","functional/ivy/data_type/valid_dtype","functional/ivy/device","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/device/DevClonedItem","functional/ivy/device/DevClonedIter","functional/ivy/device/DevClonedNest","functional/ivy/device/DevDistItem","functional/ivy/device/DevDistIter","functional/ivy/device/DevDistNest","functional/ivy/device/DevManager:\n\n    def __init__","functional/ivy/device/DevMapper","functional/ivy/device/DevMapperMultiProc","functional/ivy/device/MultiDev:\n\n    def __init__","functional/ivy/device/MultiDevItem","functional/ivy/device/MultiDevIter","functional/ivy/device/MultiDevNest","functional/ivy/device/Profiler","functional/ivy/device/clear_mem_on_dev","functional/ivy/device/default_device","functional/ivy/device/dev","functional/ivy/device/dev_clone","functional/ivy/device/dev_clone_array","functional/ivy/device/dev_clone_iter","functional/ivy/device/dev_clone_nest","functional/ivy/device/dev_dist","functional/ivy/device/dev_dist_array","functional/ivy/device/dev_dist_iter","functional/ivy/device/dev_dist_nest","functional/ivy/device/dev_from_str","functional/ivy/device/dev_to_str","functional/ivy/device/dev_unify","functional/ivy/device/dev_unify_array","functional/ivy/device/dev_unify_iter","functional/ivy/device/dev_unify_nest","functional/ivy/device/dev_util","functional/ivy/device/get_all_arrays_on_dev","functional/ivy/device/gpu_is_available","functional/ivy/device/num_arrays_on_dev","functional/ivy/device/num_cpu_cores","functional/ivy/device/num_gpus","functional/ivy/device/percent_used_mem_on_dev","functional/ivy/device/print_all_arrays_on_dev","functional/ivy/device/set_default_device","functional/ivy/device/set_split_factor","functional/ivy/device/split_factor","functional/ivy/device/split_func_call","functional/ivy/device/to_dev","functional/ivy/device/total_mem_on_dev","functional/ivy/device/tpu_is_available","functional/ivy/device/unset_default_device","functional/ivy/device/used_mem_on_dev","functional/ivy/elementwise","functional/ivy/elementwise/abs","functional/ivy/elementwise/acos","functional/ivy/elementwise/acosh","functional/ivy/elementwise/asin","functional/ivy/elementwise/asinh","functional/ivy/elementwise/atan","functional/ivy/elementwise/atan2","functional/ivy/elementwise/atanh","functional/ivy/elementwise/bitwise_and","functional/ivy/elementwise/bitwise_invert","functional/ivy/elementwise/bitwise_or","functional/ivy/elementwise/ceil","functional/ivy/elementwise/cos","functional/ivy/elementwise/cosh","functional/ivy/elementwise/divide","functional/ivy/elementwise/erf","functional/ivy/elementwise/exp","functional/ivy/elementwise/expm1","functional/ivy/elementwise/floor","functional/ivy/elementwise/greater_equal","functional/ivy/elementwise/isfinite","functional/ivy/elementwise/isinf","functional/ivy/elementwise/isnan","functional/ivy/elementwise/less","functional/ivy/elementwise/less_equal","functional/ivy/elementwise/log","functional/ivy/elementwise/log10","functional/ivy/elementwise/log1p","functional/ivy/elementwise/log2","functional/ivy/elementwise/logaddexp","functional/ivy/elementwise/logical_and","functional/ivy/elementwise/logical_not","functional/ivy/elementwise/logical_or","functional/ivy/elementwise/logical_xor","functional/ivy/elementwise/negative","functional/ivy/elementwise/not_equal","functional/ivy/elementwise/positive","functional/ivy/elementwise/round","functional/ivy/elementwise/sin","functional/ivy/elementwise/sinh","functional/ivy/elementwise/sqrt","functional/ivy/elementwise/square","functional/ivy/elementwise/tan","functional/ivy/elementwise/tanh","functional/ivy/general","functional/ivy/general/all_equal","functional/ivy/general/arg_names","functional/ivy/general/array_equal","functional/ivy/general/arrays_equal","functional/ivy/general/assert_supports_inplace","functional/ivy/general/cache_fn","functional/ivy/general/clip_matrix_norm","functional/ivy/general/clip_vector_norm","functional/ivy/general/container_types","functional/ivy/general/copy_array","functional/ivy/general/cumprod","functional/ivy/general/cumsum","functional/ivy/general/current_framework_str","functional/ivy/general/default","functional/ivy/general/einops_rearrange","functional/ivy/general/einops_reduce","functional/ivy/general/einops_repeat","functional/ivy/general/exists","functional/ivy/general/floormod","functional/ivy/general/fourier_encode","functional/ivy/general/gather","functional/ivy/general/gather_nd","functional/ivy/general/get_all_arrays_in_memory","functional/ivy/general/get_min_base","functional/ivy/general/get_min_denominator","functional/ivy/general/get_referrers_recursive","functional/ivy/general/has_nans","functional/ivy/general/inplace_arrays_supported","functional/ivy/general/inplace_decrement","functional/ivy/general/inplace_increment","functional/ivy/general/inplace_update","functional/ivy/general/inplace_variables_supported","functional/ivy/general/is_array","functional/ivy/general/match_kwargs","functional/ivy/general/num_arrays_in_memory","functional/ivy/general/print_all_arrays_in_memory","functional/ivy/general/queue_timeout","functional/ivy/general/scatter_flat","functional/ivy/general/scatter_nd","functional/ivy/general/set_min_base","functional/ivy/general/set_min_denominator","functional/ivy/general/set_queue_timeout","functional/ivy/general/set_tmp_dir","functional/ivy/general/shape_to_tuple","functional/ivy/general/stable_divide","functional/ivy/general/stable_pow","functional/ivy/general/supports_inplace","functional/ivy/general/tmp_dir","functional/ivy/general/to_list","functional/ivy/general/to_numpy","functional/ivy/general/to_scalar","functional/ivy/general/try_else_none","functional/ivy/general/unstack","functional/ivy/general/value_is_nan","functional/ivy/gradients","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/gradients/adam_step","functional/ivy/gradients/adam_update","functional/ivy/gradients/execute_with_gradients","functional/ivy/gradients/gradient_descent_update","functional/ivy/gradients/is_variable","functional/ivy/gradients/lamb_update","functional/ivy/gradients/lars_update","functional/ivy/gradients/optimizer_update","functional/ivy/gradients/set_with_grads","functional/ivy/gradients/stop_gradient","functional/ivy/gradients/unset_with_grads","functional/ivy/gradients/variable","functional/ivy/gradients/variable_data","functional/ivy/gradients/with_grads","functional/ivy/image","functional/ivy/image/bilinear_resample","functional/ivy/image/float_img_to_uint8_img","functional/ivy/image/gradient_image","functional/ivy/image/random_crop","functional/ivy/image/stack_images","functional/ivy/image/uint8_img_to_float_img","functional/ivy/layers","functional/ivy/layers/conv1d","functional/ivy/layers/conv1d_transpose","functional/ivy/layers/conv2d","functional/ivy/layers/conv2d_transpose","functional/ivy/layers/conv3d","functional/ivy/layers/conv3d_transpose","functional/ivy/layers/depthwise_conv2d","functional/ivy/layers/dropout","functional/ivy/layers/linear","functional/ivy/layers/lstm_update","functional/ivy/layers/multi_head_attention","functional/ivy/layers/scaled_dot_product_attention","functional/ivy/linear_algebra","functional/ivy/linear_algebra/cholesky","functional/ivy/linear_algebra/det","functional/ivy/linear_algebra/diagonal","functional/ivy/linear_algebra/eigvalsh","functional/ivy/linear_algebra/inv","functional/ivy/linear_algebra/matmul","functional/ivy/linear_algebra/matrix_norm","functional/ivy/linear_algebra/matrix_transpose","functional/ivy/linear_algebra/pinv","functional/ivy/linear_algebra/qr","functional/ivy/linear_algebra/slodget","functional/ivy/linear_algebra/svd","functional/ivy/linear_algebra/svdvals","functional/ivy/linear_algebra/trace","functional/ivy/linear_algebra/vector_norm","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix","functional/ivy/losses","functional/ivy/losses/binary_cross_entropy","functional/ivy/losses/cross_entropy","functional/ivy/losses/sparse_cross_entropy","functional/ivy/manipulation","functional/ivy/manipulation/constant_pad","functional/ivy/manipulation/expand_dims","functional/ivy/manipulation/flip","functional/ivy/manipulation/permute_dims","functional/ivy/manipulation/repeat","functional/ivy/manipulation/split","functional/ivy/manipulation/swapaxes","functional/ivy/manipulation/tile","functional/ivy/manipulation/zero_pad","functional/ivy/meta","functional/ivy/meta/fomaml_step","functional/ivy/meta/maml_step","functional/ivy/meta/reptile_step","functional/ivy/nest","functional/ivy/nest/all_nested_indices","functional/ivy/nest/copy_nest","functional/ivy/nest/index_nest","functional/ivy/nest/map","functional/ivy/nest/map_nest_at_index","functional/ivy/nest/map_nest_at_indices","functional/ivy/nest/multi_index_nest","functional/ivy/nest/nested_indices_where","functional/ivy/nest/nested_map","functional/ivy/nest/set_nest_at_index","functional/ivy/nest/set_nest_at_indices","functional/ivy/norms","functional/ivy/norms/layer_norm","functional/ivy/old","functional/ivy/old/dtype","functional/ivy/old/general","functional/ivy/old/general/abs","functional/ivy/old/general/arange","functional/ivy/old/general/argmin","functional/ivy/old/general/broadcast_to","functional/ivy/old/general/clip","functional/ivy/old/general/concatenate","functional/ivy/old/general/cross","functional/ivy/old/general/equal","functional/ivy/old/general/floor","functional/ivy/old/general/full","functional/ivy/old/general/get_num_dims","functional/ivy/old/general/identity","functional/ivy/old/general/indices_where","functional/ivy/old/general/linear_resample","functional/ivy/old/general/matmul","functional/ivy/old/general/maximum","functional/ivy/old/general/meshgrid","functional/ivy/old/general/minimum","functional/ivy/old/general/multiprocessing","functional/ivy/old/general/one_hot","functional/ivy/old/general/ones","functional/ivy/old/general/reshape","functional/ivy/old/general/shape","functional/ivy/old/general/squeeze","functional/ivy/old/general/stack","functional/ivy/old/general/transpose","functional/ivy/old/general/where","functional/ivy/old/general/zeros_like","functional/ivy/old/linalg","functional/ivy/old/reductions","functional/ivy/random","functional/ivy/random/multinomial","functional/ivy/random/randint","functional/ivy/random/random_normal","functional/ivy/random/random_uniform","functional/ivy/random/seed","functional/ivy/random/shuffle","functional/ivy/searching","functional/ivy/searching/argmax","functional/ivy/set","functional/ivy/sorting","functional/ivy/sorting/argsort","functional/ivy/statistical","functional/ivy/statistical/einsum","functional/ivy/statistical/max","functional/ivy/statistical/mean","functional/ivy/statistical/min","functional/ivy/statistical/prod","functional/ivy/statistical/std","functional/ivy/statistical/sum","functional/ivy/statistical/var","functional/ivy/utility","functional/ivy/utility/all","functional/ivy/utility/any","index","index_append","index_prepend","roadmap","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","verbosity","verbosity/cprint"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","background.rst","background/ml_explosion.rst","background/standardization.rst","background/why_unify.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","design.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","extensions.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/activations.rst","functional/backends/jax/activations/softmax.rst","functional/backends/jax/constants.rst","functional/backends/jax/converters.rst","functional/backends/jax/converters/IvyModule.rst","functional/backends/jax/converters/to_ivy_module.rst","functional/backends/jax/creation.rst","functional/backends/jax/creation/array.rst","functional/backends/jax/creation/asarray.rst","functional/backends/jax/creation/empty.rst","functional/backends/jax/creation/empty_like.rst","functional/backends/jax/creation/eye.rst","functional/backends/jax/creation/full_like.rst","functional/backends/jax/creation/linspace.rst","functional/backends/jax/creation/logspace.rst","functional/backends/jax/creation/ones.rst","functional/backends/jax/creation/ones_like.rst","functional/backends/jax/creation/tril.rst","functional/backends/jax/creation/triu.rst","functional/backends/jax/creation/zeros.rst","functional/backends/jax/data_type.rst","functional/backends/jax/data_type/Finfo:\n\n    def __init__.rst","functional/backends/jax/data_type/broadcast_to.rst","functional/backends/jax/data_type/finfo.rst","functional/backends/jax/data_type/iinfo.rst","functional/backends/jax/data_type/result_type.rst","functional/backends/jax/device.rst","functional/backends/jax/device/Profiler.rst","functional/backends/jax/device/dev.rst","functional/backends/jax/device/dev_from_str.rst","functional/backends/jax/device/dev_to_str.rst","functional/backends/jax/device/num_gpus.rst","functional/backends/jax/device/to_dev.rst","functional/backends/jax/elementwise.rst","functional/backends/jax/elementwise/abs.rst","functional/backends/jax/elementwise/acos.rst","functional/backends/jax/elementwise/acosh.rst","functional/backends/jax/elementwise/asin.rst","functional/backends/jax/elementwise/asinh.rst","functional/backends/jax/elementwise/bitwise_and.rst","functional/backends/jax/elementwise/bitwise_invert.rst","functional/backends/jax/elementwise/bitwise_or.rst","functional/backends/jax/elementwise/ceil.rst","functional/backends/jax/elementwise/cos.rst","functional/backends/jax/elementwise/cosh.rst","functional/backends/jax/elementwise/equal.rst","functional/backends/jax/elementwise/expm1.rst","functional/backends/jax/elementwise/floor.rst","functional/backends/jax/elementwise/greater_equal.rst","functional/backends/jax/elementwise/isfinite.rst","functional/backends/jax/elementwise/isinf.rst","functional/backends/jax/elementwise/isnan.rst","functional/backends/jax/elementwise/less.rst","functional/backends/jax/elementwise/less_equal.rst","functional/backends/jax/elementwise/log.rst","functional/backends/jax/elementwise/log10.rst","functional/backends/jax/elementwise/log1p.rst","functional/backends/jax/elementwise/log2.rst","functional/backends/jax/elementwise/logaddexp.rst","functional/backends/jax/elementwise/logical_and.rst","functional/backends/jax/elementwise/logical_not.rst","functional/backends/jax/elementwise/logical_or.rst","functional/backends/jax/elementwise/logical_xor.rst","functional/backends/jax/elementwise/negative.rst","functional/backends/jax/elementwise/not_equal.rst","functional/backends/jax/elementwise/positive.rst","functional/backends/jax/elementwise/round.rst","functional/backends/jax/elementwise/sin.rst","functional/backends/jax/elementwise/sinh.rst","functional/backends/jax/elementwise/sqrt.rst","functional/backends/jax/elementwise/square.rst","functional/backends/jax/elementwise/tanh.rst","functional/backends/jax/general.rst","functional/backends/jax/general/cumprod.rst","functional/backends/jax/general/gather.rst","functional/backends/jax/general/gather_nd.rst","functional/backends/jax/general/inplace_decrement.rst","functional/backends/jax/general/inplace_increment.rst","functional/backends/jax/general/inplace_update.rst","functional/backends/jax/general/is_array.rst","functional/backends/jax/general/scatter_flat.rst","functional/backends/jax/general/scatter_nd.rst","functional/backends/jax/general/unstack.rst","functional/backends/jax/gradients.rst","functional/backends/jax/gradients/execute_with_gradients.rst","functional/backends/jax/gradients/is_variable.rst","functional/backends/jax/image.rst","functional/backends/jax/image/bilinear_resample.rst","functional/backends/jax/image/gradient_image.rst","functional/backends/jax/image/stack_images.rst","functional/backends/jax/layers.rst","functional/backends/jax/layers/conv1d.rst","functional/backends/jax/layers/conv1d_transpose.rst","functional/backends/jax/layers/conv2d.rst","functional/backends/jax/layers/conv2d_transpose.rst","functional/backends/jax/layers/conv3d.rst","functional/backends/jax/layers/conv3d_transpose.rst","functional/backends/jax/layers/depthwise_conv2d.rst","functional/backends/jax/linear_algebra.rst","functional/backends/jax/linear_algebra/cholesky.rst","functional/backends/jax/linear_algebra/det.rst","functional/backends/jax/linear_algebra/diagonal.rst","functional/backends/jax/linear_algebra/eigvalsh.rst","functional/backends/jax/linear_algebra/matmul.rst","functional/backends/jax/linear_algebra/matrix_norm.rst","functional/backends/jax/linear_algebra/matrix_transpose.rst","functional/backends/jax/linear_algebra/qr.rst","functional/backends/jax/linear_algebra/slogdet.rst","functional/backends/jax/linear_algebra/svd.rst","functional/backends/jax/linear_algebra/svdvals.rst","functional/backends/jax/linear_algebra/trace.rst","functional/backends/jax/linear_algebra/vector_norm.rst","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/manipulation.rst","functional/backends/jax/manipulation/expand_dims.rst","functional/backends/jax/manipulation/flip.rst","functional/backends/jax/manipulation/permute_dims.rst","functional/backends/jax/manipulation/split.rst","functional/backends/jax/old.rst","functional/backends/jax/old/general.rst","functional/backends/jax/old/general/arange.rst","functional/backends/jax/old/general/argmin.rst","functional/backends/jax/old/general/cast.rst","functional/backends/jax/old/general/concatenate.rst","functional/backends/jax/old/general/dtype.rst","functional/backends/jax/old/general/dtype_bits.rst","functional/backends/jax/old/general/dtype_from_str.rst","functional/backends/jax/old/general/dtype_to_str.rst","functional/backends/jax/old/general/full.rst","functional/backends/jax/old/general/identity.rst","functional/backends/jax/old/general/indices_where.rst","functional/backends/jax/old/general/linear_resample.rst","functional/backends/jax/old/general/one_hot.rst","functional/backends/jax/old/general/squeeze.rst","functional/backends/jax/old/general/transpose.rst","functional/backends/jax/old/general/zeros_like.rst","functional/backends/jax/old/linear_algebra.rst","functional/backends/jax/old/reductions.rst","functional/backends/jax/random.rst","functional/backends/jax/random/multinomial.rst","functional/backends/jax/random/randint.rst","functional/backends/jax/random/random_normal.rst","functional/backends/jax/random/random_uniform.rst","functional/backends/jax/random/seed.rst","functional/backends/jax/random/shuffle.rst","functional/backends/jax/searching.rst","functional/backends/jax/searching/argmax.rst","functional/backends/jax/set.rst","functional/backends/jax/sorting.rst","functional/backends/jax/sorting/argsort.rst","functional/backends/jax/statistical.rst","functional/backends/jax/statistical/einsum.rst","functional/backends/jax/statistical/max.rst","functional/backends/jax/statistical/mean.rst","functional/backends/jax/statistical/min.rst","functional/backends/jax/statistical/prod.rst","functional/backends/jax/statistical/sum.rst","functional/backends/jax/statistical/var.rst","functional/backends/jax/utility.rst","functional/backends/jax/utility/all.rst","functional/backends/jax/utility/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/activations.rst","functional/backends/mxnet/activations/gelu.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/constants.rst","functional/backends/mxnet/creation.rst","functional/backends/mxnet/creation/array.rst","functional/backends/mxnet/creation/asarray.rst","functional/backends/mxnet/creation/empty.rst","functional/backends/mxnet/creation/eye.rst","functional/backends/mxnet/creation/linspace.rst","functional/backends/mxnet/creation/logspace.rst","functional/backends/mxnet/creation/ones.rst","functional/backends/mxnet/creation/ones_like.rst","functional/backends/mxnet/creation/tril.rst","functional/backends/mxnet/creation/zeros.rst","functional/backends/mxnet/data_type.rst","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/data_type/finfo.rst","functional/backends/mxnet/data_type/iinfo.rst","functional/backends/mxnet/device.rst","functional/backends/mxnet/device/Profiler.rst","functional/backends/mxnet/device/dev.rst","functional/backends/mxnet/device/dev_from_str.rst","functional/backends/mxnet/device/dev_to_str.rst","functional/backends/mxnet/device/to_dev.rst","functional/backends/mxnet/elementwise.rst","functional/backends/mxnet/elementwise/acos.rst","functional/backends/mxnet/elementwise/acosh.rst","functional/backends/mxnet/elementwise/bitwise_and.rst","functional/backends/mxnet/elementwise/bitwise_or.rst","functional/backends/mxnet/elementwise/ceil.rst","functional/backends/mxnet/elementwise/floor.rst","functional/backends/mxnet/elementwise/greater_equal.rst","functional/backends/mxnet/elementwise/isfinite.rst","functional/backends/mxnet/elementwise/isinf.rst","functional/backends/mxnet/elementwise/isnan.rst","functional/backends/mxnet/elementwise/less.rst","functional/backends/mxnet/elementwise/logical_and.rst","functional/backends/mxnet/elementwise/logical_not.rst","functional/backends/mxnet/elementwise/logical_or.rst","functional/backends/mxnet/elementwise/logical_xor.rst","functional/backends/mxnet/elementwise/negative.rst","functional/backends/mxnet/elementwise/round.rst","functional/backends/mxnet/elementwise/sin.rst","functional/backends/mxnet/elementwise/sinh.rst","functional/backends/mxnet/elementwise/sqrt.rst","functional/backends/mxnet/elementwise/square.rst","functional/backends/mxnet/elementwise/tanh.rst","functional/backends/mxnet/general.rst","functional/backends/mxnet/general/array_equal.rst","functional/backends/mxnet/general/cumprod.rst","functional/backends/mxnet/general/floormod.rst","functional/backends/mxnet/general/gather.rst","functional/backends/mxnet/general/gather_nd.rst","functional/backends/mxnet/general/inplace_decrement.rst","functional/backends/mxnet/general/inplace_increment.rst","functional/backends/mxnet/general/inplace_update.rst","functional/backends/mxnet/general/is_array.rst","functional/backends/mxnet/general/scatter_flat.rst","functional/backends/mxnet/general/scatter_nd.rst","functional/backends/mxnet/general/unstack.rst","functional/backends/mxnet/gradients.rst","functional/backends/mxnet/gradients/execute_with_gradients.rst","functional/backends/mxnet/gradients/is_variable.rst","functional/backends/mxnet/gradients/stop_gradient.rst","functional/backends/mxnet/gradients/variable.rst","functional/backends/mxnet/image.rst","functional/backends/mxnet/image/bilinear_resample.rst","functional/backends/mxnet/image/gradient_image.rst","functional/backends/mxnet/image/stack_images.rst","functional/backends/mxnet/layers.rst","functional/backends/mxnet/layers/conv1d.rst","functional/backends/mxnet/layers/conv1d_transpose.rst","functional/backends/mxnet/layers/conv2d.rst","functional/backends/mxnet/layers/conv2d_transpose.rst","functional/backends/mxnet/layers/conv3d.rst","functional/backends/mxnet/layers/conv3d_transpose.rst","functional/backends/mxnet/layers/depthwise_conv2d.rst","functional/backends/mxnet/linear_algebra.rst","functional/backends/mxnet/linear_algebra/cholesky.rst","functional/backends/mxnet/linear_algebra/det.rst","functional/backends/mxnet/linear_algebra/diagonal.rst","functional/backends/mxnet/linear_algebra/eigvalsh.rst","functional/backends/mxnet/linear_algebra/matrix_norm.rst","functional/backends/mxnet/linear_algebra/pinv.rst","functional/backends/mxnet/linear_algebra/qr.rst","functional/backends/mxnet/linear_algebra/slogdet.rst","functional/backends/mxnet/linear_algebra/svd.rst","functional/backends/mxnet/linear_algebra/trace.rst","functional/backends/mxnet/linear_algebra/vector_norm.rst","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/manipulation.rst","functional/backends/mxnet/manipulation/constant_pad.rst","functional/backends/mxnet/manipulation/expand_dims.rst","functional/backends/mxnet/manipulation/flip.rst","functional/backends/mxnet/manipulation/repeat.rst","functional/backends/mxnet/manipulation/split.rst","functional/backends/mxnet/manipulation/tile.rst","functional/backends/mxnet/manipulation/zero_pad.rst","functional/backends/mxnet/old.rst","functional/backends/mxnet/old/general.rst","functional/backends/mxnet/old/general/abs.rst","functional/backends/mxnet/old/general/arange.rst","functional/backends/mxnet/old/general/broadcast_to.rst","functional/backends/mxnet/old/general/cast.rst","functional/backends/mxnet/old/general/clip.rst","functional/backends/mxnet/old/general/compile.rst","functional/backends/mxnet/old/general/concatenate.rst","functional/backends/mxnet/old/general/cross.rst","functional/backends/mxnet/old/general/dtype.rst","functional/backends/mxnet/old/general/dtype_bits.rst","functional/backends/mxnet/old/general/dtype_from_str.rst","functional/backends/mxnet/old/general/dtype_to_str.rst","functional/backends/mxnet/old/general/full.rst","functional/backends/mxnet/old/general/identity.rst","functional/backends/mxnet/old/general/indices_where.rst","functional/backends/mxnet/old/general/linear_resample.rst","functional/backends/mxnet/old/general/matmul.rst","functional/backends/mxnet/old/general/meshgrid.rst","functional/backends/mxnet/old/general/squeeze.rst","functional/backends/mxnet/old/general/stack.rst","functional/backends/mxnet/old/general/transpose.rst","functional/backends/mxnet/old/general/where.rst","functional/backends/mxnet/old/general/zeros_like.rst","functional/backends/mxnet/old/linear_algebra.rst","functional/backends/mxnet/old/reductions.rst","functional/backends/mxnet/random.rst","functional/backends/mxnet/random/multinomial.rst","functional/backends/mxnet/random/randint.rst","functional/backends/mxnet/random/random_normal.rst","functional/backends/mxnet/random/random_uniform.rst","functional/backends/mxnet/searching.rst","functional/backends/mxnet/searching/argmax.rst","functional/backends/mxnet/set.rst","functional/backends/mxnet/sorting.rst","functional/backends/mxnet/sorting/argsort.rst","functional/backends/mxnet/statistical.rst","functional/backends/mxnet/statistical/einsum.rst","functional/backends/mxnet/statistical/max.rst","functional/backends/mxnet/statistical/mean.rst","functional/backends/mxnet/statistical/min.rst","functional/backends/mxnet/statistical/prod.rst","functional/backends/mxnet/statistical/std.rst","functional/backends/mxnet/statistical/sum.rst","functional/backends/mxnet/statistical/var.rst","functional/backends/mxnet/utility.rst","functional/backends/mxnet/utility/all.rst","functional/backends/mxnet/utility/any.rst","functional/backends/numpy.rst","functional/backends/numpy/activations.rst","functional/backends/numpy/activations/gelu.rst","functional/backends/numpy/activations/softmax.rst","functional/backends/numpy/constants.rst","functional/backends/numpy/creation.rst","functional/backends/numpy/creation/array.rst","functional/backends/numpy/creation/asarray.rst","functional/backends/numpy/creation/empty.rst","functional/backends/numpy/creation/empty_like.rst","functional/backends/numpy/creation/eye.rst","functional/backends/numpy/creation/full_like.rst","functional/backends/numpy/creation/linspace.rst","functional/backends/numpy/creation/logspace.rst","functional/backends/numpy/creation/ones.rst","functional/backends/numpy/creation/ones_like.rst","functional/backends/numpy/creation/tril.rst","functional/backends/numpy/creation/triu.rst","functional/backends/numpy/creation/zeros.rst","functional/backends/numpy/data_type.rst","functional/backends/numpy/data_type/Finfo:\n\n    def __init__.rst","functional/backends/numpy/data_type/broadcast_to.rst","functional/backends/numpy/data_type/finfo.rst","functional/backends/numpy/data_type/iinfo.rst","functional/backends/numpy/data_type/result_type.rst","functional/backends/numpy/device.rst","functional/backends/numpy/device/Profiler.rst","functional/backends/numpy/elementwise.rst","functional/backends/numpy/elementwise/abs.rst","functional/backends/numpy/elementwise/acos.rst","functional/backends/numpy/elementwise/acosh.rst","functional/backends/numpy/elementwise/asin.rst","functional/backends/numpy/elementwise/asinh.rst","functional/backends/numpy/elementwise/bitwise_and.rst","functional/backends/numpy/elementwise/bitwise_invert.rst","functional/backends/numpy/elementwise/bitwise_or.rst","functional/backends/numpy/elementwise/ceil.rst","functional/backends/numpy/elementwise/cos.rst","functional/backends/numpy/elementwise/cosh.rst","functional/backends/numpy/elementwise/equal.rst","functional/backends/numpy/elementwise/erf.rst","functional/backends/numpy/elementwise/expm1.rst","functional/backends/numpy/elementwise/floor.rst","functional/backends/numpy/elementwise/greater_equal.rst","functional/backends/numpy/elementwise/isfinite.rst","functional/backends/numpy/elementwise/isinf.rst","functional/backends/numpy/elementwise/isnan.rst","functional/backends/numpy/elementwise/less.rst","functional/backends/numpy/elementwise/less_equal.rst","functional/backends/numpy/elementwise/log.rst","functional/backends/numpy/elementwise/log10.rst","functional/backends/numpy/elementwise/log1p.rst","functional/backends/numpy/elementwise/log2.rst","functional/backends/numpy/elementwise/logaddexp.rst","functional/backends/numpy/elementwise/logical_and.rst","functional/backends/numpy/elementwise/logical_not.rst","functional/backends/numpy/elementwise/logical_or.rst","functional/backends/numpy/elementwise/logical_xor.rst","functional/backends/numpy/elementwise/negative.rst","functional/backends/numpy/elementwise/not_equal.rst","functional/backends/numpy/elementwise/positive.rst","functional/backends/numpy/elementwise/round.rst","functional/backends/numpy/elementwise/sin.rst","functional/backends/numpy/elementwise/sinh.rst","functional/backends/numpy/elementwise/sqrt.rst","functional/backends/numpy/elementwise/square.rst","functional/backends/numpy/elementwise/tanh.rst","functional/backends/numpy/general.rst","functional/backends/numpy/general/cumprod.rst","functional/backends/numpy/general/gather.rst","functional/backends/numpy/general/gather_nd.rst","functional/backends/numpy/general/inplace_decrement.rst","functional/backends/numpy/general/inplace_increment.rst","functional/backends/numpy/general/inplace_update.rst","functional/backends/numpy/general/is_array.rst","functional/backends/numpy/general/scatter_flat.rst","functional/backends/numpy/general/scatter_nd.rst","functional/backends/numpy/general/unstack.rst","functional/backends/numpy/gradients.rst","functional/backends/numpy/gradients/execute_with_gradients.rst","functional/backends/numpy/gradients/is_variable.rst","functional/backends/numpy/gradients/stop_gradient.rst","functional/backends/numpy/gradients/variable.rst","functional/backends/numpy/image.rst","functional/backends/numpy/image/bilinear_resample.rst","functional/backends/numpy/image/gradient_image.rst","functional/backends/numpy/image/stack_images.rst","functional/backends/numpy/layers.rst","functional/backends/numpy/layers/conv1d.rst","functional/backends/numpy/layers/conv1d_transpose.rst","functional/backends/numpy/layers/conv2d.rst","functional/backends/numpy/layers/conv2d_transpose.rst","functional/backends/numpy/layers/conv3d.rst","functional/backends/numpy/layers/conv3d_transpose.rst","functional/backends/numpy/layers/depthwise_conv2d.rst","functional/backends/numpy/linear_algebra.rst","functional/backends/numpy/linear_algebra/cholesky.rst","functional/backends/numpy/linear_algebra/det.rst","functional/backends/numpy/linear_algebra/diagonal.rst","functional/backends/numpy/linear_algebra/eigvalsh.rst","functional/backends/numpy/linear_algebra/matmul.rst","functional/backends/numpy/linear_algebra/matrix_norm.rst","functional/backends/numpy/linear_algebra/matrix_transpose.rst","functional/backends/numpy/linear_algebra/qr.rst","functional/backends/numpy/linear_algebra/slogdet.rst","functional/backends/numpy/linear_algebra/svd.rst","functional/backends/numpy/linear_algebra/svdvals.rst","functional/backends/numpy/linear_algebra/trace.rst","functional/backends/numpy/linear_algebra/vector_norm.rst","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/manipulation.rst","functional/backends/numpy/manipulation/expand_dims.rst","functional/backends/numpy/manipulation/flip.rst","functional/backends/numpy/manipulation/permute_dims.rst","functional/backends/numpy/manipulation/split.rst","functional/backends/numpy/old.rst","functional/backends/numpy/old/general.rst","functional/backends/numpy/old/general/arange.rst","functional/backends/numpy/old/general/argmin.rst","functional/backends/numpy/old/general/cast.rst","functional/backends/numpy/old/general/compile.rst","functional/backends/numpy/old/general/concatenate.rst","functional/backends/numpy/old/general/dtype.rst","functional/backends/numpy/old/general/dtype_bits.rst","functional/backends/numpy/old/general/dtype_from_str.rst","functional/backends/numpy/old/general/dtype_to_str.rst","functional/backends/numpy/old/general/full.rst","functional/backends/numpy/old/general/identity.rst","functional/backends/numpy/old/general/indices_where.rst","functional/backends/numpy/old/general/linear_resample.rst","functional/backends/numpy/old/general/one_hot.rst","functional/backends/numpy/old/general/squeeze.rst","functional/backends/numpy/old/general/transpose.rst","functional/backends/numpy/old/general/zeros_like.rst","functional/backends/numpy/old/linear_algebra.rst","functional/backends/numpy/old/reductions.rst","functional/backends/numpy/random.rst","functional/backends/numpy/random/multinomial.rst","functional/backends/numpy/searching.rst","functional/backends/numpy/searching/argmax.rst","functional/backends/numpy/set.rst","functional/backends/numpy/sorting.rst","functional/backends/numpy/sorting/argsort.rst","functional/backends/numpy/statistical.rst","functional/backends/numpy/statistical/einsum.rst","functional/backends/numpy/statistical/max.rst","functional/backends/numpy/statistical/mean.rst","functional/backends/numpy/statistical/min.rst","functional/backends/numpy/statistical/prod.rst","functional/backends/numpy/statistical/sum.rst","functional/backends/numpy/statistical/var.rst","functional/backends/numpy/utility.rst","functional/backends/numpy/utility/all.rst","functional/backends/numpy/utility/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/activations.rst","functional/backends/tensorflow/constants.rst","functional/backends/tensorflow/creation.rst","functional/backends/tensorflow/creation/array.rst","functional/backends/tensorflow/creation/asarray.rst","functional/backends/tensorflow/creation/empty.rst","functional/backends/tensorflow/creation/empty_like.rst","functional/backends/tensorflow/creation/eye.rst","functional/backends/tensorflow/creation/full_like.rst","functional/backends/tensorflow/creation/linspace.rst","functional/backends/tensorflow/creation/logspace.rst","functional/backends/tensorflow/creation/ones.rst","functional/backends/tensorflow/creation/ones_like.rst","functional/backends/tensorflow/creation/tril.rst","functional/backends/tensorflow/creation/triu.rst","functional/backends/tensorflow/creation/zeros.rst","functional/backends/tensorflow/data_type.rst","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/data_type/broadcast_to .rst","functional/backends/tensorflow/data_type/finfo.rst","functional/backends/tensorflow/data_type/iinfo.rst","functional/backends/tensorflow/data_type/result_type.rst","functional/backends/tensorflow/device.rst","functional/backends/tensorflow/device/Profiler.rst","functional/backends/tensorflow/device/dev.rst","functional/backends/tensorflow/device/dev_from_str.rst","functional/backends/tensorflow/device/dev_to_str.rst","functional/backends/tensorflow/device/to_dev.rst","functional/backends/tensorflow/device/tpu_is_available.rst","functional/backends/tensorflow/elementwise.rst","functional/backends/tensorflow/elementwise/abs.rst","functional/backends/tensorflow/elementwise/acos.rst","functional/backends/tensorflow/elementwise/acosh.rst","functional/backends/tensorflow/elementwise/asin.rst","functional/backends/tensorflow/elementwise/asinh.rst","functional/backends/tensorflow/elementwise/bitwise_and.rst","functional/backends/tensorflow/elementwise/bitwise_invert.rst","functional/backends/tensorflow/elementwise/bitwise_or.rst","functional/backends/tensorflow/elementwise/ceil.rst","functional/backends/tensorflow/elementwise/cos.rst","functional/backends/tensorflow/elementwise/cosh.rst","functional/backends/tensorflow/elementwise/equal.rst","functional/backends/tensorflow/elementwise/expm1.rst","functional/backends/tensorflow/elementwise/floor.rst","functional/backends/tensorflow/elementwise/greater_equal.rst","functional/backends/tensorflow/elementwise/isfinite.rst","functional/backends/tensorflow/elementwise/isinf.rst","functional/backends/tensorflow/elementwise/isnan.rst","functional/backends/tensorflow/elementwise/less.rst","functional/backends/tensorflow/elementwise/less_equal.rst","functional/backends/tensorflow/elementwise/log.rst","functional/backends/tensorflow/elementwise/log10.rst","functional/backends/tensorflow/elementwise/log1p.rst","functional/backends/tensorflow/elementwise/log2.rst","functional/backends/tensorflow/elementwise/logaddexp.rst","functional/backends/tensorflow/elementwise/logical_and.rst","functional/backends/tensorflow/elementwise/logical_not.rst","functional/backends/tensorflow/elementwise/logical_or.rst","functional/backends/tensorflow/elementwise/logical_xor.rst","functional/backends/tensorflow/elementwise/negative.rst","functional/backends/tensorflow/elementwise/not_equal.rst","functional/backends/tensorflow/elementwise/positive.rst","functional/backends/tensorflow/elementwise/round.rst","functional/backends/tensorflow/elementwise/sin.rst","functional/backends/tensorflow/elementwise/sinh.rst","functional/backends/tensorflow/elementwise/sqrt.rst","functional/backends/tensorflow/elementwise/square.rst","functional/backends/tensorflow/elementwise/tanh.rst","functional/backends/tensorflow/general.rst","functional/backends/tensorflow/general/gather.rst","functional/backends/tensorflow/general/gather_nd.rst","functional/backends/tensorflow/general/inplace_decrement.rst","functional/backends/tensorflow/general/inplace_increment.rst","functional/backends/tensorflow/general/inplace_update.rst","functional/backends/tensorflow/general/is_array.rst","functional/backends/tensorflow/general/scatter_flat.rst","functional/backends/tensorflow/general/scatter_nd.rst","functional/backends/tensorflow/general/unstack.rst","functional/backends/tensorflow/gradients.rst","functional/backends/tensorflow/gradients/execute_with_gradients.rst","functional/backends/tensorflow/gradients/is_variable.rst","functional/backends/tensorflow/gradients/stop_gradient.rst","functional/backends/tensorflow/gradients/variable.rst","functional/backends/tensorflow/image.rst","functional/backends/tensorflow/image/bilinear_resample.rst","functional/backends/tensorflow/image/gradient_image.rst","functional/backends/tensorflow/image/stack_images.rst","functional/backends/tensorflow/layers.rst","functional/backends/tensorflow/layers/conv2d.rst","functional/backends/tensorflow/layers/conv3d.rst","functional/backends/tensorflow/layers/depthwise_conv2d.rst","functional/backends/tensorflow/linear_algebra.rst","functional/backends/tensorflow/linear_algebra/cholesky.rst","functional/backends/tensorflow/linear_algebra/det.rst","functional/backends/tensorflow/linear_algebra/diagonal.rst","functional/backends/tensorflow/linear_algebra/eigvalsh.rst","functional/backends/tensorflow/linear_algebra/matmul.rst","functional/backends/tensorflow/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/linear_algebra/matrix_transpose.rst","functional/backends/tensorflow/linear_algebra/qr.rst","functional/backends/tensorflow/linear_algebra/slogdet.rst","functional/backends/tensorflow/linear_algebra/svd.rst","functional/backends/tensorflow/linear_algebra/svdvals.rst","functional/backends/tensorflow/linear_algebra/trace.rst","functional/backends/tensorflow/linear_algebra/vector_norm.rst","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/manipulation.rst","functional/backends/tensorflow/manipulation/constant_pad.rst","functional/backends/tensorflow/manipulation/expand_dims.rst","functional/backends/tensorflow/manipulation/flip.rst","functional/backends/tensorflow/manipulation/permute_dims.rst","functional/backends/tensorflow/manipulation/split.rst","functional/backends/tensorflow/manipulation/swapaxes.rst","functional/backends/tensorflow/manipulation/tile.rst","functional/backends/tensorflow/manipulation/zero_pad.rst","functional/backends/tensorflow/old.rst","functional/backends/tensorflow/old/general.rst","functional/backends/tensorflow/old/general/abs.rst","functional/backends/tensorflow/old/general/arange.rst","functional/backends/tensorflow/old/general/argmin.rst","functional/backends/tensorflow/old/general/cast.rst","functional/backends/tensorflow/old/general/concatenate.rst","functional/backends/tensorflow/old/general/dtype.rst","functional/backends/tensorflow/old/general/dtype_bits.rst","functional/backends/tensorflow/old/general/dtype_from_str.rst","functional/backends/tensorflow/old/general/dtype_to_str.rst","functional/backends/tensorflow/old/general/full.rst","functional/backends/tensorflow/old/general/identity.rst","functional/backends/tensorflow/old/general/linear_resample.rst","functional/backends/tensorflow/old/general/one_hot.rst","functional/backends/tensorflow/old/general/squeeze.rst","functional/backends/tensorflow/old/general/zeros_like.rst","functional/backends/tensorflow/old/linear_algebra.rst","functional/backends/tensorflow/old/reductions.rst","functional/backends/tensorflow/random.rst","functional/backends/tensorflow/random/multinomial.rst","functional/backends/tensorflow/random/randint.rst","functional/backends/tensorflow/random/random_normal.rst","functional/backends/tensorflow/random/random_uniform.rst","functional/backends/tensorflow/searching.rst","functional/backends/tensorflow/searching/argmax.rst","functional/backends/tensorflow/set.rst","functional/backends/tensorflow/sorting.rst","functional/backends/tensorflow/sorting/argsort.rst","functional/backends/tensorflow/statistical.rst","functional/backends/tensorflow/statistical/einsum.rst","functional/backends/tensorflow/statistical/max.rst","functional/backends/tensorflow/statistical/mean.rst","functional/backends/tensorflow/statistical/min.rst","functional/backends/tensorflow/statistical/prod.rst","functional/backends/tensorflow/statistical/sum.rst","functional/backends/tensorflow/statistical/var.rst","functional/backends/tensorflow/utility.rst","functional/backends/tensorflow/utility/all.rst","functional/backends/tensorflow/utility/any.rst","functional/backends/torch.rst","functional/backends/torch/activations.rst","functional/backends/torch/activations/gelu.rst","functional/backends/torch/activations/leaky_relu.rst","functional/backends/torch/activations/relu.rst","functional/backends/torch/activations/sigmoid.rst","functional/backends/torch/activations/softmax.rst","functional/backends/torch/activations/softplus.rst","functional/backends/torch/activations/tanh.rst","functional/backends/torch/constants.rst","functional/backends/torch/converters.rst","functional/backends/torch/converters/IvyModule.rst","functional/backends/torch/converters/to_ivy_module.rst","functional/backends/torch/creation.rst","functional/backends/torch/creation/array.rst","functional/backends/torch/creation/asarray.rst","functional/backends/torch/creation/empty.rst","functional/backends/torch/creation/empty_like.rst","functional/backends/torch/creation/eye.rst","functional/backends/torch/creation/full_like.rst","functional/backends/torch/creation/linspace.rst","functional/backends/torch/creation/logspace.rst","functional/backends/torch/creation/ones.rst","functional/backends/torch/creation/ones_like.rst","functional/backends/torch/creation/tril.rst","functional/backends/torch/creation/triu.rst","functional/backends/torch/creation/zeros.rst","functional/backends/torch/data_type.rst","functional/backends/torch/data_type/Finfo:\n\n    def __init__.rst","functional/backends/torch/data_type/broadcast_to.rst","functional/backends/torch/data_type/finfo.rst","functional/backends/torch/data_type/iinfo.rst","functional/backends/torch/data_type/result_type.rst","functional/backends/torch/device.rst","functional/backends/torch/device/Profiler.rst","functional/backends/torch/device/clear_mem_on_dev.rst","functional/backends/torch/device/dev.rst","functional/backends/torch/device/dev_from_str.rst","functional/backends/torch/device/dev_to_str.rst","functional/backends/torch/device/to_dev.rst","functional/backends/torch/device/tpu_is_available.rst","functional/backends/torch/elementwise.rst","functional/backends/torch/elementwise/abs.rst","functional/backends/torch/elementwise/acos.rst","functional/backends/torch/elementwise/acosh.rst","functional/backends/torch/elementwise/asin.rst","functional/backends/torch/elementwise/asinh.rst","functional/backends/torch/elementwise/atan.rst","functional/backends/torch/elementwise/atan2.rst","functional/backends/torch/elementwise/atanh.rst","functional/backends/torch/elementwise/bitwise_and.rst","functional/backends/torch/elementwise/bitwise_invert.rst","functional/backends/torch/elementwise/bitwise_or.rst","functional/backends/torch/elementwise/ceil.rst","functional/backends/torch/elementwise/cos.rst","functional/backends/torch/elementwise/cosh.rst","functional/backends/torch/elementwise/equal.rst","functional/backends/torch/elementwise/erf.rst","functional/backends/torch/elementwise/exp.rst","functional/backends/torch/elementwise/expm1.rst","functional/backends/torch/elementwise/floor.rst","functional/backends/torch/elementwise/greater_equal.rst","functional/backends/torch/elementwise/isfinite.rst","functional/backends/torch/elementwise/isinf.rst","functional/backends/torch/elementwise/isnan.rst","functional/backends/torch/elementwise/less.rst","functional/backends/torch/elementwise/less_equal.rst","functional/backends/torch/elementwise/log.rst","functional/backends/torch/elementwise/log10.rst","functional/backends/torch/elementwise/log1p.rst","functional/backends/torch/elementwise/log2.rst","functional/backends/torch/elementwise/logaddexp.rst","functional/backends/torch/elementwise/logical_and.rst","functional/backends/torch/elementwise/logical_not.rst","functional/backends/torch/elementwise/logical_or.rst","functional/backends/torch/elementwise/logical_xor.rst","functional/backends/torch/elementwise/negative.rst","functional/backends/torch/elementwise/not_equal.rst","functional/backends/torch/elementwise/positive.rst","functional/backends/torch/elementwise/round.rst","functional/backends/torch/elementwise/sin.rst","functional/backends/torch/elementwise/sinh.rst","functional/backends/torch/elementwise/sqrt.rst","functional/backends/torch/elementwise/square.rst","functional/backends/torch/elementwise/tan.rst","functional/backends/torch/elementwise/tanh.rst","functional/backends/torch/general.rst","functional/backends/torch/general/array_equal.rst","functional/backends/torch/general/container_types.rst","functional/backends/torch/general/copy_array.rst","functional/backends/torch/general/cumprod.rst","functional/backends/torch/general/cumsum.rst","functional/backends/torch/general/floormod.rst","functional/backends/torch/general/gather.rst","functional/backends/torch/general/gather_nd.rst","functional/backends/torch/general/inplace_decrement.rst","functional/backends/torch/general/inplace_increment.rst","functional/backends/torch/general/inplace_update.rst","functional/backends/torch/general/is_array.rst","functional/backends/torch/general/scatter_flat.rst","functional/backends/torch/general/scatter_nd.rst","functional/backends/torch/general/to_list.rst","functional/backends/torch/general/to_numpy.rst","functional/backends/torch/general/to_scalar.rst","functional/backends/torch/general/unstack.rst","functional/backends/torch/gradients.rst","functional/backends/torch/gradients/execute_with_gradients.rst","functional/backends/torch/gradients/is_variable.rst","functional/backends/torch/gradients/stop_gradient.rst","functional/backends/torch/gradients/variable.rst","functional/backends/torch/gradients/variable_data.rst","functional/backends/torch/image.rst","functional/backends/torch/image/bilinear_resample.rst","functional/backends/torch/image/gradient_image.rst","functional/backends/torch/image/stack_images.rst","functional/backends/torch/layers.rst","functional/backends/torch/layers/conv1d.rst","functional/backends/torch/layers/conv1d_transpose.rst","functional/backends/torch/layers/conv2d.rst","functional/backends/torch/layers/conv2d_transpose.rst","functional/backends/torch/layers/conv3d.rst","functional/backends/torch/layers/conv3d_transpose.rst","functional/backends/torch/layers/depthwise_conv2d.rst","functional/backends/torch/linear_algebra.rst","functional/backends/torch/linear_algebra/cholesky.rst","functional/backends/torch/linear_algebra/det.rst","functional/backends/torch/linear_algebra/diagonal.rst","functional/backends/torch/linear_algebra/eigvalsh.rst","functional/backends/torch/linear_algebra/inv.rst","functional/backends/torch/linear_algebra/matmul.rst","functional/backends/torch/linear_algebra/matrix_norm.rst","functional/backends/torch/linear_algebra/matrix_transpose.rst","functional/backends/torch/linear_algebra/pinv.rst","functional/backends/torch/linear_algebra/qr.rst","functional/backends/torch/linear_algebra/slogdet.rst","functional/backends/torch/linear_algebra/svd.rst","functional/backends/torch/linear_algebra/svdvals.rst","functional/backends/torch/linear_algebra/trace.rst","functional/backends/torch/linear_algebra/vector_norm.rst","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/manipulation.rst","functional/backends/torch/manipulation/constant_pad.rst","functional/backends/torch/manipulation/expand_dims.rst","functional/backends/torch/manipulation/flip.rst","functional/backends/torch/manipulation/permute_dims.rst","functional/backends/torch/manipulation/repeat.rst","functional/backends/torch/manipulation/split.rst","functional/backends/torch/manipulation/swapaxes.rst","functional/backends/torch/manipulation/tile.rst","functional/backends/torch/manipulation/zero_pad.rst","functional/backends/torch/old.rst","functional/backends/torch/old/general.rst","functional/backends/torch/old/general/abs.rst","functional/backends/torch/old/general/arange.rst","functional/backends/torch/old/general/argmin.rst","functional/backends/torch/old/general/broadcast_to.rst","functional/backends/torch/old/general/cast.rst","functional/backends/torch/old/general/clip.rst","functional/backends/torch/old/general/compile.rst","functional/backends/torch/old/general/concatenate.rst","functional/backends/torch/old/general/cross.rst","functional/backends/torch/old/general/current_framework_str.rst","functional/backends/torch/old/general/dtype.rst","functional/backends/torch/old/general/dtype_bits.rst","functional/backends/torch/old/general/dtype_from_str.rst","functional/backends/torch/old/general/dtype_to_str.rst","functional/backends/torch/old/general/full.rst","functional/backends/torch/old/general/get_num_dims.rst","functional/backends/torch/old/general/identity.rst","functional/backends/torch/old/general/indices_where.rst","functional/backends/torch/old/general/linear_resample.rst","functional/backends/torch/old/general/maximum.rst","functional/backends/torch/old/general/meshgrid.rst","functional/backends/torch/old/general/minimum.rst","functional/backends/torch/old/general/multiprocessing.rst","functional/backends/torch/old/general/one_hot.rst","functional/backends/torch/old/general/reshape.rst","functional/backends/torch/old/general/shape.rst","functional/backends/torch/old/general/squeeze.rst","functional/backends/torch/old/general/stack.rst","functional/backends/torch/old/general/transpose.rst","functional/backends/torch/old/general/where.rst","functional/backends/torch/old/general/zeros_like.rst","functional/backends/torch/old/linear_algebra.rst","functional/backends/torch/old/reductions.rst","functional/backends/torch/random.rst","functional/backends/torch/random/multinomial.rst","functional/backends/torch/random/randint.rst","functional/backends/torch/random/random_normal.rst","functional/backends/torch/random/random_uniform.rst","functional/backends/torch/random/seed.rst","functional/backends/torch/random/shuffle.rst","functional/backends/torch/searching.rst","functional/backends/torch/searching/argmax.rst","functional/backends/torch/set.rst","functional/backends/torch/sorting.rst","functional/backends/torch/sorting/argsort.rst","functional/backends/torch/statistical.rst","functional/backends/torch/statistical/einsum.rst","functional/backends/torch/statistical/max.rst","functional/backends/torch/statistical/mean.rst","functional/backends/torch/statistical/min.rst","functional/backends/torch/statistical/prod.rst","functional/backends/torch/statistical/sum.rst","functional/backends/torch/statistical/var.rst","functional/backends/torch/utility.rst","functional/backends/torch/utility/all.rst","functional/backends/torch/utility/any.rst","functional/ivy.rst","functional/ivy/activations.rst","functional/ivy/activations/gelu.rst","functional/ivy/activations/leaky_relu.rst","functional/ivy/activations/relu.rst","functional/ivy/activations/sigmoid.rst","functional/ivy/activations/softmax.rst","functional/ivy/activations/softplus.rst","functional/ivy/activations/tanh.rst","functional/ivy/compilation.rst","functional/ivy/compilation/compile.rst","functional/ivy/constants.rst","functional/ivy/creation.rst","functional/ivy/creation/array.rst","functional/ivy/creation/asarray.rst","functional/ivy/creation/empty.rst","functional/ivy/creation/empty_like.rst","functional/ivy/creation/eye.rst","functional/ivy/creation/full_like.rst","functional/ivy/creation/linspace.rst","functional/ivy/creation/logspace.rst","functional/ivy/creation/ones.rst","functional/ivy/creation/ones_like.rst","functional/ivy/creation/tril.rst","functional/ivy/creation/triu.rst","functional/ivy/creation/zeros.rst","functional/ivy/data_type.rst","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/broadcast_to.rst","functional/ivy/data_type/cast.rst","functional/ivy/data_type/closest_valid_dtype.rst","functional/ivy/data_type/convert_dtype.rst","functional/ivy/data_type/default_dtype.rst","functional/ivy/data_type/default_float_dtype.rst","functional/ivy/data_type/default_int_dtype.rst","functional/ivy/data_type/dtype.rst","functional/ivy/data_type/dtype_bits.rst","functional/ivy/data_type/dtype_from_str.rst","functional/ivy/data_type/dtype_to_str.rst","functional/ivy/data_type/finfo.rst","functional/ivy/data_type/iinfo.rst","functional/ivy/data_type/invalid_dtype.rst","functional/ivy/data_type/is_float_dtype.rst","functional/ivy/data_type/is_int_dtype.rst","functional/ivy/data_type/result_type.rst","functional/ivy/data_type/set_default_dtype.rst","functional/ivy/data_type/set_default_float_dtype.rst","functional/ivy/data_type/set_default_int_dtype.rst","functional/ivy/data_type/unset_default_dtype.rst","functional/ivy/data_type/unset_default_float_dtype.rst","functional/ivy/data_type/unset_default_int_dtype.rst","functional/ivy/data_type/valid_dtype.rst","functional/ivy/device.rst","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/device/DevClonedItem.rst","functional/ivy/device/DevClonedIter.rst","functional/ivy/device/DevClonedNest.rst","functional/ivy/device/DevDistItem.rst","functional/ivy/device/DevDistIter.rst","functional/ivy/device/DevDistNest.rst","functional/ivy/device/DevManager:\n\n    def __init__.rst","functional/ivy/device/DevMapper.rst","functional/ivy/device/DevMapperMultiProc.rst","functional/ivy/device/MultiDev:\n\n    def __init__.rst","functional/ivy/device/MultiDevItem.rst","functional/ivy/device/MultiDevIter.rst","functional/ivy/device/MultiDevNest.rst","functional/ivy/device/Profiler.rst","functional/ivy/device/clear_mem_on_dev.rst","functional/ivy/device/default_device.rst","functional/ivy/device/dev.rst","functional/ivy/device/dev_clone.rst","functional/ivy/device/dev_clone_array.rst","functional/ivy/device/dev_clone_iter.rst","functional/ivy/device/dev_clone_nest.rst","functional/ivy/device/dev_dist.rst","functional/ivy/device/dev_dist_array.rst","functional/ivy/device/dev_dist_iter.rst","functional/ivy/device/dev_dist_nest.rst","functional/ivy/device/dev_from_str.rst","functional/ivy/device/dev_to_str.rst","functional/ivy/device/dev_unify.rst","functional/ivy/device/dev_unify_array.rst","functional/ivy/device/dev_unify_iter.rst","functional/ivy/device/dev_unify_nest.rst","functional/ivy/device/dev_util.rst","functional/ivy/device/get_all_arrays_on_dev.rst","functional/ivy/device/gpu_is_available.rst","functional/ivy/device/num_arrays_on_dev.rst","functional/ivy/device/num_cpu_cores.rst","functional/ivy/device/num_gpus.rst","functional/ivy/device/percent_used_mem_on_dev.rst","functional/ivy/device/print_all_arrays_on_dev.rst","functional/ivy/device/set_default_device.rst","functional/ivy/device/set_split_factor.rst","functional/ivy/device/split_factor.rst","functional/ivy/device/split_func_call.rst","functional/ivy/device/to_dev.rst","functional/ivy/device/total_mem_on_dev.rst","functional/ivy/device/tpu_is_available.rst","functional/ivy/device/unset_default_device.rst","functional/ivy/device/used_mem_on_dev.rst","functional/ivy/elementwise.rst","functional/ivy/elementwise/abs.rst","functional/ivy/elementwise/acos.rst","functional/ivy/elementwise/acosh.rst","functional/ivy/elementwise/asin.rst","functional/ivy/elementwise/asinh.rst","functional/ivy/elementwise/atan.rst","functional/ivy/elementwise/atan2.rst","functional/ivy/elementwise/atanh.rst","functional/ivy/elementwise/bitwise_and.rst","functional/ivy/elementwise/bitwise_invert.rst","functional/ivy/elementwise/bitwise_or.rst","functional/ivy/elementwise/ceil.rst","functional/ivy/elementwise/cos.rst","functional/ivy/elementwise/cosh.rst","functional/ivy/elementwise/divide.rst","functional/ivy/elementwise/erf.rst","functional/ivy/elementwise/exp.rst","functional/ivy/elementwise/expm1.rst","functional/ivy/elementwise/floor.rst","functional/ivy/elementwise/greater_equal.rst","functional/ivy/elementwise/isfinite.rst","functional/ivy/elementwise/isinf.rst","functional/ivy/elementwise/isnan.rst","functional/ivy/elementwise/less.rst","functional/ivy/elementwise/less_equal.rst","functional/ivy/elementwise/log.rst","functional/ivy/elementwise/log10.rst","functional/ivy/elementwise/log1p.rst","functional/ivy/elementwise/log2.rst","functional/ivy/elementwise/logaddexp.rst","functional/ivy/elementwise/logical_and.rst","functional/ivy/elementwise/logical_not.rst","functional/ivy/elementwise/logical_or.rst","functional/ivy/elementwise/logical_xor.rst","functional/ivy/elementwise/negative.rst","functional/ivy/elementwise/not_equal.rst","functional/ivy/elementwise/positive.rst","functional/ivy/elementwise/round.rst","functional/ivy/elementwise/sin.rst","functional/ivy/elementwise/sinh.rst","functional/ivy/elementwise/sqrt.rst","functional/ivy/elementwise/square.rst","functional/ivy/elementwise/tan.rst","functional/ivy/elementwise/tanh.rst","functional/ivy/general.rst","functional/ivy/general/all_equal.rst","functional/ivy/general/arg_names.rst","functional/ivy/general/array_equal.rst","functional/ivy/general/arrays_equal.rst","functional/ivy/general/assert_supports_inplace.rst","functional/ivy/general/cache_fn.rst","functional/ivy/general/clip_matrix_norm.rst","functional/ivy/general/clip_vector_norm.rst","functional/ivy/general/container_types.rst","functional/ivy/general/copy_array.rst","functional/ivy/general/cumprod.rst","functional/ivy/general/cumsum.rst","functional/ivy/general/current_framework_str.rst","functional/ivy/general/default.rst","functional/ivy/general/einops_rearrange.rst","functional/ivy/general/einops_reduce.rst","functional/ivy/general/einops_repeat.rst","functional/ivy/general/exists.rst","functional/ivy/general/floormod.rst","functional/ivy/general/fourier_encode.rst","functional/ivy/general/gather.rst","functional/ivy/general/gather_nd.rst","functional/ivy/general/get_all_arrays_in_memory.rst","functional/ivy/general/get_min_base.rst","functional/ivy/general/get_min_denominator.rst","functional/ivy/general/get_referrers_recursive.rst","functional/ivy/general/has_nans.rst","functional/ivy/general/inplace_arrays_supported.rst","functional/ivy/general/inplace_decrement.rst","functional/ivy/general/inplace_increment.rst","functional/ivy/general/inplace_update.rst","functional/ivy/general/inplace_variables_supported.rst","functional/ivy/general/is_array.rst","functional/ivy/general/match_kwargs.rst","functional/ivy/general/num_arrays_in_memory.rst","functional/ivy/general/print_all_arrays_in_memory.rst","functional/ivy/general/queue_timeout.rst","functional/ivy/general/scatter_flat.rst","functional/ivy/general/scatter_nd.rst","functional/ivy/general/set_min_base.rst","functional/ivy/general/set_min_denominator.rst","functional/ivy/general/set_queue_timeout.rst","functional/ivy/general/set_tmp_dir.rst","functional/ivy/general/shape_to_tuple.rst","functional/ivy/general/stable_divide.rst","functional/ivy/general/stable_pow.rst","functional/ivy/general/supports_inplace.rst","functional/ivy/general/tmp_dir.rst","functional/ivy/general/to_list.rst","functional/ivy/general/to_numpy.rst","functional/ivy/general/to_scalar.rst","functional/ivy/general/try_else_none.rst","functional/ivy/general/unstack.rst","functional/ivy/general/value_is_nan.rst","functional/ivy/gradients.rst","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/gradients/adam_step.rst","functional/ivy/gradients/adam_update.rst","functional/ivy/gradients/execute_with_gradients.rst","functional/ivy/gradients/gradient_descent_update.rst","functional/ivy/gradients/is_variable.rst","functional/ivy/gradients/lamb_update.rst","functional/ivy/gradients/lars_update.rst","functional/ivy/gradients/optimizer_update.rst","functional/ivy/gradients/set_with_grads.rst","functional/ivy/gradients/stop_gradient.rst","functional/ivy/gradients/unset_with_grads.rst","functional/ivy/gradients/variable.rst","functional/ivy/gradients/variable_data.rst","functional/ivy/gradients/with_grads.rst","functional/ivy/image.rst","functional/ivy/image/bilinear_resample.rst","functional/ivy/image/float_img_to_uint8_img.rst","functional/ivy/image/gradient_image.rst","functional/ivy/image/random_crop.rst","functional/ivy/image/stack_images.rst","functional/ivy/image/uint8_img_to_float_img.rst","functional/ivy/layers.rst","functional/ivy/layers/conv1d.rst","functional/ivy/layers/conv1d_transpose.rst","functional/ivy/layers/conv2d.rst","functional/ivy/layers/conv2d_transpose.rst","functional/ivy/layers/conv3d.rst","functional/ivy/layers/conv3d_transpose.rst","functional/ivy/layers/depthwise_conv2d.rst","functional/ivy/layers/dropout.rst","functional/ivy/layers/linear.rst","functional/ivy/layers/lstm_update.rst","functional/ivy/layers/multi_head_attention.rst","functional/ivy/layers/scaled_dot_product_attention.rst","functional/ivy/linear_algebra.rst","functional/ivy/linear_algebra/cholesky.rst","functional/ivy/linear_algebra/det.rst","functional/ivy/linear_algebra/diagonal.rst","functional/ivy/linear_algebra/eigvalsh.rst","functional/ivy/linear_algebra/inv.rst","functional/ivy/linear_algebra/matmul.rst","functional/ivy/linear_algebra/matrix_norm.rst","functional/ivy/linear_algebra/matrix_transpose.rst","functional/ivy/linear_algebra/pinv.rst","functional/ivy/linear_algebra/qr.rst","functional/ivy/linear_algebra/slodget.rst","functional/ivy/linear_algebra/svd.rst","functional/ivy/linear_algebra/svdvals.rst","functional/ivy/linear_algebra/trace.rst","functional/ivy/linear_algebra/vector_norm.rst","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/ivy/losses.rst","functional/ivy/losses/binary_cross_entropy.rst","functional/ivy/losses/cross_entropy.rst","functional/ivy/losses/sparse_cross_entropy.rst","functional/ivy/manipulation.rst","functional/ivy/manipulation/constant_pad.rst","functional/ivy/manipulation/expand_dims.rst","functional/ivy/manipulation/flip.rst","functional/ivy/manipulation/permute_dims.rst","functional/ivy/manipulation/repeat.rst","functional/ivy/manipulation/split.rst","functional/ivy/manipulation/swapaxes.rst","functional/ivy/manipulation/tile.rst","functional/ivy/manipulation/zero_pad.rst","functional/ivy/meta.rst","functional/ivy/meta/fomaml_step.rst","functional/ivy/meta/maml_step.rst","functional/ivy/meta/reptile_step.rst","functional/ivy/nest.rst","functional/ivy/nest/all_nested_indices.rst","functional/ivy/nest/copy_nest.rst","functional/ivy/nest/index_nest.rst","functional/ivy/nest/map.rst","functional/ivy/nest/map_nest_at_index.rst","functional/ivy/nest/map_nest_at_indices.rst","functional/ivy/nest/multi_index_nest.rst","functional/ivy/nest/nested_indices_where.rst","functional/ivy/nest/nested_map.rst","functional/ivy/nest/set_nest_at_index.rst","functional/ivy/nest/set_nest_at_indices.rst","functional/ivy/norms.rst","functional/ivy/norms/layer_norm.rst","functional/ivy/old.rst","functional/ivy/old/dtype.rst","functional/ivy/old/general.rst","functional/ivy/old/general/abs.rst","functional/ivy/old/general/arange.rst","functional/ivy/old/general/argmin.rst","functional/ivy/old/general/broadcast_to.rst","functional/ivy/old/general/clip.rst","functional/ivy/old/general/concatenate.rst","functional/ivy/old/general/cross.rst","functional/ivy/old/general/equal.rst","functional/ivy/old/general/floor.rst","functional/ivy/old/general/full.rst","functional/ivy/old/general/get_num_dims.rst","functional/ivy/old/general/identity.rst","functional/ivy/old/general/indices_where.rst","functional/ivy/old/general/linear_resample.rst","functional/ivy/old/general/matmul.rst","functional/ivy/old/general/maximum.rst","functional/ivy/old/general/meshgrid.rst","functional/ivy/old/general/minimum.rst","functional/ivy/old/general/multiprocessing.rst","functional/ivy/old/general/one_hot.rst","functional/ivy/old/general/ones.rst","functional/ivy/old/general/reshape.rst","functional/ivy/old/general/shape.rst","functional/ivy/old/general/squeeze.rst","functional/ivy/old/general/stack.rst","functional/ivy/old/general/transpose.rst","functional/ivy/old/general/where.rst","functional/ivy/old/general/zeros_like.rst","functional/ivy/old/linalg.rst","functional/ivy/old/reductions.rst","functional/ivy/random.rst","functional/ivy/random/multinomial.rst","functional/ivy/random/randint.rst","functional/ivy/random/random_normal.rst","functional/ivy/random/random_uniform.rst","functional/ivy/random/seed.rst","functional/ivy/random/shuffle.rst","functional/ivy/searching.rst","functional/ivy/searching/argmax.rst","functional/ivy/set.rst","functional/ivy/sorting.rst","functional/ivy/sorting/argsort.rst","functional/ivy/statistical.rst","functional/ivy/statistical/einsum.rst","functional/ivy/statistical/max.rst","functional/ivy/statistical/mean.rst","functional/ivy/statistical/min.rst","functional/ivy/statistical/prod.rst","functional/ivy/statistical/std.rst","functional/ivy/statistical/sum.rst","functional/ivy/statistical/var.rst","functional/ivy/utility.rst","functional/ivy/utility/all.rst","functional/ivy/utility/any.rst","index.rst","index_append.rst","index_prepend.rst","roadmap.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","verbosity.rst","verbosity/cprint.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[45,1,1,""],MultiDevContainer:[46,1,1,""]},"ivy.container.Container":{"var":[45,3,1,""],__init__:[45,3,1,""],all_false:[45,3,1,""],all_key_chains:[45,3,1,""],all_true:[45,3,1,""],arrays_as_lists:[45,3,1,""],as_arrays:[45,3,1,""],as_bools:[45,3,1,""],as_ones:[45,3,1,""],as_random_uniform:[45,3,1,""],as_variables:[45,3,1,""],as_zeros:[45,3,1,""],assert_contains_sub_container:[45,3,1,""],assert_contains_sub_structure:[45,3,1,""],assert_identical:[45,3,1,""],assert_identical_structure:[45,3,1,""],at_key_chain:[45,3,1,""],at_key_chains:[45,3,1,""],at_keys:[45,3,1,""],clip:[45,3,1,""],clip_vector_norm:[45,3,1,""],combine:[45,3,1,""],common_key_chains:[45,3,1,""],concat:[45,3,1,""],config:[45,3,1,""],contains_sub_container:[45,3,1,""],contains_sub_structure:[45,3,1,""],copy:[45,3,1,""],create_if_absent:[45,3,1,""],cutoff_at_depth:[45,3,1,""],cutoff_at_height:[45,3,1,""],deep_copy:[45,3,1,""],dev:[45,3,1,""],dev_clone:[45,3,1,""],dev_dist:[45,3,1,""],dev_str:[45,3,1,""],diff:[45,3,1,""],dtype:[45,3,1,""],einops_rearrange:[45,3,1,""],einops_reduce:[45,3,1,""],einops_repeat:[45,3,1,""],einsum:[45,3,1,""],expand_dims:[45,3,1,""],find_sub_container:[45,3,1,""],find_sub_structure:[45,3,1,""],flatten_key_chain:[45,3,1,""],flatten_key_chains:[45,3,1,""],flip:[45,3,1,""],format_key_chains:[45,3,1,""],from_disk_as_hdf5:[45,3,1,""],from_disk_as_json:[45,3,1,""],from_disk_as_pickled:[45,3,1,""],from_flat_list:[45,3,1,""],from_numpy:[45,3,1,""],gather:[45,3,1,""],gather_nd:[45,3,1,""],h5_file_size:[45,3,1,""],has_key:[45,3,1,""],has_key_chain:[45,3,1,""],has_nans:[45,3,1,""],identical:[45,3,1,""],identical_array_shapes:[45,3,1,""],identical_configs:[45,3,1,""],identical_structure:[45,3,1,""],if_exists:[45,3,1,""],inplace_update:[45,3,1,""],ivy:[45,3,1,""],key_chains_containing:[45,3,1,""],list_join:[45,3,1,""],list_stack:[45,3,1,""],map:[45,3,1,""],map_conts:[45,3,1,""],matrix_norm:[45,3,1,""],max_depth:[45,3,1,""],maximum:[45,3,1,""],mean:[45,3,1,""],minimum:[45,3,1,""],multi_map:[45,3,1,""],num_arrays:[45,3,1,""],overwrite_at_key_chain:[45,3,1,""],overwrite_at_key_chains:[45,3,1,""],prod:[45,3,1,""],prune_empty:[45,3,1,""],prune_key_chain:[45,3,1,""],prune_key_chains:[45,3,1,""],prune_key_from_key_chains:[45,3,1,""],prune_keys:[45,3,1,""],prune_keys_from_key_chains:[45,3,1,""],reduce:[45,3,1,""],reduce_max:[45,3,1,""],reduce_min:[45,3,1,""],remove_key_length_limit:[45,3,1,""],remove_print_limit:[45,3,1,""],repeat:[45,3,1,""],reshape:[45,3,1,""],reshape_like:[45,3,1,""],restructure:[45,3,1,""],restructure_key_chains:[45,3,1,""],set_at_key_chain:[45,3,1,""],set_at_key_chains:[45,3,1,""],set_at_keys:[45,3,1,""],set_framework:[45,3,1,""],set_ivy_backend:[45,3,1,""],shape:[45,3,1,""],shapes:[45,3,1,""],show:[45,3,1,""],show_sub_container:[45,3,1,""],shuffle:[45,3,1,""],shuffle_h5_file:[45,3,1,""],size_ordered_arrays:[45,3,1,""],slice_keys:[45,3,1,""],slice_via_key:[45,3,1,""],sort_by_key:[45,3,1,""],split:[45,3,1,""],stack:[45,3,1,""],std:[45,3,1,""],stop_gradients:[45,3,1,""],structural_diff:[45,3,1,""],sum:[45,3,1,""],swapaxes:[45,3,1,""],to_dev:[45,3,1,""],to_dict:[45,3,1,""],to_disk_as_hdf5:[45,3,1,""],to_disk_as_json:[45,3,1,""],to_disk_as_pickled:[45,3,1,""],to_flat_list:[45,3,1,""],to_iterator:[45,3,1,""],to_iterator_keys:[45,3,1,""],to_iterator_values:[45,3,1,""],to_ivy:[45,3,1,""],to_jsonable:[45,3,1,""],to_list:[45,3,1,""],to_multi_dev:[45,3,1,""],to_native:[45,3,1,""],to_numpy:[45,3,1,""],to_raw:[45,3,1,""],trim_key:[45,3,1,""],try_kc:[45,3,1,""],unify:[45,3,1,""],unstack:[45,3,1,""],update_config:[45,3,1,""],vector_norm:[45,3,1,""],with_default_key_color:[45,3,1,""],with_entries_as_lists:[45,3,1,""],with_ivy_backend:[45,3,1,""],with_key_length_limit:[45,3,1,""],with_print_indent:[45,3,1,""],with_print_limit:[45,3,1,""],with_print_line_spacing:[45,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[46,3,1,""],at_dev:[46,3,1,""],at_devs:[46,3,1,""]},"ivy.debugger":{debug_mode:[49,2,1,""],set_breakpoint_debug_mode:[50,2,1,""],set_debug_mode:[51,2,1,""],set_exception_debug_mode:[52,2,1,""],unset_debug_mode:[53,2,1,""]},"ivy.framework_handler":{ContextManager:[65,1,1,""],choose_random_framework:[67,2,1,""],clear_framework_stack:[68,2,1,""],current_framework:[69,2,1,""],get_framework:[70,2,1,""],set_framework:[71,2,1,""],try_import_ivy_jax:[72,2,1,""],try_import_ivy_mxnet:[73,2,1,""],try_import_ivy_numpy:[74,2,1,""],try_import_ivy_tf:[75,2,1,""],try_import_ivy_torch:[76,2,1,""],unset_framework:[77,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[65,3,1,""]},"ivy.functional":{backends:[79,0,0,"-"],ivy:[914,0,0,"-"]},"ivy.functional.backends.numpy":{activations:[397,0,0,"-"],constants:[400,0,0,"-"],creation:[401,0,0,"-"],data_type:[415,0,0,"-"],device:[421,0,0,"-"],general:[463,0,0,"-"]},"ivy.functional.backends.numpy.activations":{gelu:[398,2,1,""],leaky_relu:[397,2,1,""],relu:[397,2,1,""],sigmoid:[397,2,1,""],softmax:[399,2,1,""],softplus:[397,2,1,""]},"ivy.functional.backends.numpy.creation":{array:[402,2,1,""],asarray:[403,2,1,""],empty:[404,2,1,""],empty_like:[405,2,1,""],eye:[406,2,1,""],full_like:[407,2,1,""],linspace:[408,2,1,""],logspace:[409,2,1,""],ones:[410,2,1,""],ones_like:[411,2,1,""],tril:[412,2,1,""],triu:[413,2,1,""],zeros:[414,2,1,""]},"ivy.functional.backends.numpy.data_type":{Finfo:[415,1,1,""],broadcast_to:[417,2,1,""],finfo:[418,2,1,""],iinfo:[419,2,1,""],result_type:[420,2,1,""]},"ivy.functional.backends.numpy.data_type.Finfo":{__init__:[415,3,1,""],bits:[415,3,1,""],eps:[415,3,1,""],max:[415,3,1,""],min:[415,3,1,""],smallest_normal:[415,3,1,""]},"ivy.functional.backends.numpy.device":{Profiler:[422,1,1,""],clear_mem_on_dev:[421,2,1,""],dev:[421,2,1,""],dev_from_str:[421,2,1,""],dev_to_str:[421,2,1,""],gpu_is_available:[421,2,1,""],num_gpus:[421,2,1,""],to_dev:[421,2,1,""],tpu_is_available:[421,2,1,""]},"ivy.functional.backends.numpy.device.Profiler":{__init__:[422,3,1,""],start:[422,3,1,""],stop:[422,3,1,""]},"ivy.functional.backends.numpy.general":{container_types:[463,2,1,""],copy_array:[463,2,1,""],cumprod:[464,2,1,""],floormod:[463,2,1,""],gather:[465,2,1,""],gather_nd:[466,2,1,""],inplace_arrays_supported:[463,2,1,""],inplace_decrement:[467,2,1,""],inplace_increment:[468,2,1,""],inplace_update:[469,2,1,""],inplace_variables_supported:[463,2,1,""],is_array:[470,2,1,""],scatter_flat:[471,2,1,""],scatter_nd:[472,2,1,""],to_list:[463,2,1,""],to_numpy:[463,2,1,""],to_scalar:[463,2,1,""],unstack:[473,2,1,""]},"ivy.functional.backends.numpy.old":{general:[512,0,0,"-"],linear_algebra:[530,0,0,"-"]},"ivy.functional.backends.numpy.old.general":{abs:[512,2,1,""],arange:[513,2,1,""],argmin:[514,2,1,""],astype:[512,2,1,""],cast:[515,2,1,""],clip:[512,2,1,""],compile:[516,2,1,""],concatenate:[517,2,1,""],current_framework_str:[512,2,1,""],dtype:[518,2,1,""],dtype_bits:[519,2,1,""],dtype_from_str:[520,2,1,""],dtype_to_str:[521,2,1,""],full:[522,2,1,""],get_num_dims:[512,2,1,""],identity:[523,2,1,""],indices_where:[524,2,1,""],linear_resample:[525,2,1,""],meshgrid:[512,2,1,""],multiprocessing:[512,2,1,""],one_hot:[526,2,1,""],shape:[512,2,1,""],squeeze:[527,2,1,""],transpose:[528,2,1,""],where:[512,2,1,""],zeros_like:[529,2,1,""]},"ivy.functional.ivy":{activations:[915,0,0,"-"],compilation:[923,0,0,"-"],constants:[925,0,0,"-"],creation:[926,0,0,"-"],data_type:[940,0,0,"-"],device:[968,0,0,"-"],elementwise:[1018,0,0,"-"],general:[1063,0,0,"-"],gradients:[1118,0,0,"-"],image:[1134,0,0,"-"],layers:[1141,0,0,"-"],linear_algebra:[1154,0,0,"-"],losses:[1171,0,0,"-"],manipulation:[1175,0,0,"-"],meta:[1185,0,0,"-"],nest:[1189,0,0,"-"],norms:[1201,0,0,"-"],old:[1203,0,0,"-"],random:[1236,0,0,"-"],searching:[1243,0,0,"-"],set:[1245,0,0,"-"],sorting:[1246,0,0,"-"],statistical:[1248,0,0,"-"],utility:[1257,0,0,"-"]},"ivy.functional.ivy.activations":{gelu:[916,2,1,""],leaky_relu:[917,2,1,""],relu:[918,2,1,""],sigmoid:[919,2,1,""],softmax:[920,2,1,""],softplus:[921,2,1,""],tanh:[922,2,1,""]},"ivy.functional.ivy.compilation":{compile:[924,2,1,""]},"ivy.functional.ivy.constants":{e:[925,4,1,""],nan:[925,4,1,""],pi:[925,4,1,""]},"ivy.functional.ivy.creation":{array:[927,2,1,""],asarray:[928,2,1,""],empty:[929,2,1,""],empty_like:[930,2,1,""],eye:[931,2,1,""],full_like:[932,2,1,""],linspace:[933,2,1,""],logspace:[934,2,1,""],ones:[935,2,1,""],ones_like:[936,2,1,""],tril:[937,2,1,""],triu:[938,2,1,""],zeros:[939,2,1,""]},"ivy.functional.ivy.data_type":{DefaultDtype:[940,1,1,""],DefaultFloatDtype:[940,1,1,""],DefaultIntDtype:[940,1,1,""],astype:[940,2,1,""],broadcast_to:[944,2,1,""],cast:[945,2,1,""],closest_valid_dtype:[946,2,1,""],convert_dtype:[947,2,1,""],default_dtype:[948,2,1,""],default_float_dtype:[949,2,1,""],default_int_dtype:[950,2,1,""],dtype:[951,2,1,""],dtype_bits:[952,2,1,""],dtype_from_str:[953,2,1,""],dtype_to_str:[954,2,1,""],finfo:[955,2,1,""],iinfo:[956,2,1,""],invalid_dtype:[957,2,1,""],is_float_dtype:[958,2,1,""],is_int_dtype:[959,2,1,""],result_type:[960,2,1,""],set_default_dtype:[961,2,1,""],set_default_float_dtype:[962,2,1,""],set_default_int_dtype:[963,2,1,""],unset_default_dtype:[964,2,1,""],unset_default_float_dtype:[965,2,1,""],unset_default_int_dtype:[966,2,1,""],valid_dtype:[967,2,1,""]},"ivy.functional.ivy.data_type.DefaultDtype":{__init__:[940,3,1,""]},"ivy.functional.ivy.data_type.DefaultFloatDtype":{__init__:[940,3,1,""]},"ivy.functional.ivy.data_type.DefaultIntDtype":{__init__:[940,3,1,""]},"ivy.functional.ivy.device":{DefaultDevice:[968,1,1,""],DevClonedItem:[970,1,1,""],DevClonedIter:[971,1,1,""],DevClonedNest:[972,1,1,""],DevDistItem:[973,1,1,""],DevDistIter:[974,1,1,""],DevDistNest:[975,1,1,""],DevManager:[968,1,1,""],DevMapper:[977,1,1,""],DevMapperMultiProc:[978,1,1,""],MultiDev:[968,1,1,""],MultiDevItem:[980,1,1,""],MultiDevIter:[981,1,1,""],MultiDevNest:[982,1,1,""],Profiler:[983,1,1,""],clear_mem_on_dev:[984,2,1,""],default_device:[985,2,1,""],dev:[986,2,1,""],dev_clone:[987,2,1,""],dev_clone_array:[988,2,1,""],dev_clone_iter:[989,2,1,""],dev_clone_nest:[990,2,1,""],dev_dist:[991,2,1,""],dev_dist_array:[992,2,1,""],dev_dist_iter:[993,2,1,""],dev_dist_nest:[994,2,1,""],dev_from_str:[995,2,1,""],dev_to_str:[996,2,1,""],dev_unify:[997,2,1,""],dev_unify_array:[998,2,1,""],dev_unify_iter:[999,2,1,""],dev_unify_nest:[1000,2,1,""],dev_util:[1001,2,1,""],get_all_arrays_on_dev:[1002,2,1,""],gpu_is_available:[1003,2,1,""],num_arrays_on_dev:[1004,2,1,""],num_cpu_cores:[1005,2,1,""],num_gpus:[1006,2,1,""],percent_used_mem_on_dev:[1007,2,1,""],print_all_arrays_on_dev:[1008,2,1,""],set_default_device:[1009,2,1,""],set_split_factor:[1010,2,1,""],split_factor:[1011,2,1,""],split_func_call:[1012,2,1,""],to_dev:[1013,2,1,""],total_mem_on_dev:[1014,2,1,""],tpu_is_available:[1015,2,1,""],unset_default_device:[1016,2,1,""],used_mem_on_dev:[1017,2,1,""]},"ivy.functional.ivy.device.DefaultDevice":{__init__:[968,3,1,""]},"ivy.functional.ivy.device.DevManager":{__init__:[968,3,1,""],da_tune_step:[968,3,1,""],dim_size:[968,3,1,""],ds_tune_step:[968,3,1,""],map:[968,3,1,""],repeated_config_check:[968,3,1,""],tune_step:[968,3,1,""],tuned:[968,3,1,""]},"ivy.functional.ivy.device.DevMapper":{__init__:[977,3,1,""],map:[977,3,1,""]},"ivy.functional.ivy.device.DevMapperMultiProc":{__init__:[978,3,1,""]},"ivy.functional.ivy.device.MultiDev":{__init__:[968,3,1,""]},"ivy.functional.ivy.device.MultiDevItem":{__init__:[980,3,1,""],items:[980,3,1,""],keys:[980,3,1,""],shape:[980,3,1,""],values:[980,3,1,""]},"ivy.functional.ivy.device.MultiDevIter":{__init__:[981,3,1,""],at_dev:[981,3,1,""],at_devs:[981,3,1,""]},"ivy.functional.ivy.device.MultiDevNest":{__init__:[982,3,1,""],at_dev:[982,3,1,""]},"ivy.functional.ivy.device.Profiler":{__init__:[983,3,1,""],start:[983,3,1,""],stop:[983,3,1,""]},"ivy.functional.ivy.elementwise":{abs:[1019,2,1,""],acos:[1020,2,1,""],acosh:[1021,2,1,""],asin:[1022,2,1,""],asinh:[1023,2,1,""],atan2:[1025,2,1,""],atan:[1024,2,1,""],atanh:[1026,2,1,""],bitwise_and:[1027,2,1,""],bitwise_invert:[1028,2,1,""],bitwise_or:[1029,2,1,""],ceil:[1030,2,1,""],cos:[1031,2,1,""],cosh:[1032,2,1,""],divide:[1033,2,1,""],erf:[1034,2,1,""],exp:[1035,2,1,""],expm1:[1036,2,1,""],floor:[1037,2,1,""],greater_equal:[1038,2,1,""],isfinite:[1039,2,1,""],isinf:[1040,2,1,""],isnan:[1041,2,1,""],less:[1042,2,1,""],less_equal:[1043,2,1,""],log10:[1045,2,1,""],log1p:[1046,2,1,""],log2:[1047,2,1,""],log:[1044,2,1,""],logaddexp:[1048,2,1,""],logical_and:[1049,2,1,""],logical_not:[1050,2,1,""],logical_or:[1051,2,1,""],logical_xor:[1052,2,1,""],negative:[1053,2,1,""],not_equal:[1054,2,1,""],positive:[1055,2,1,""],round:[1056,2,1,""],sin:[1057,2,1,""],sinh:[1058,2,1,""],sqrt:[1059,2,1,""],square:[1060,2,1,""],tan:[1061,2,1,""],tanh:[1062,2,1,""]},"ivy.functional.ivy.general":{"default":[1077,2,1,""],all_equal:[1064,2,1,""],arg_names:[1065,2,1,""],array_equal:[1066,2,1,""],arrays_equal:[1067,2,1,""],assert_supports_inplace:[1068,2,1,""],cache_fn:[1069,2,1,""],clip_matrix_norm:[1070,2,1,""],clip_vector_norm:[1071,2,1,""],container_types:[1072,2,1,""],copy_array:[1073,2,1,""],cumprod:[1074,2,1,""],cumsum:[1075,2,1,""],current_framework_str:[1076,2,1,""],einops_rearrange:[1078,2,1,""],einops_reduce:[1079,2,1,""],einops_repeat:[1080,2,1,""],exists:[1081,2,1,""],floormod:[1082,2,1,""],fourier_encode:[1083,2,1,""],gather:[1084,2,1,""],gather_nd:[1085,2,1,""],get_all_arrays_in_memory:[1086,2,1,""],get_min_base:[1087,2,1,""],get_min_denominator:[1088,2,1,""],get_referrers_recursive:[1089,2,1,""],has_nans:[1090,2,1,""],inplace_arrays_supported:[1091,2,1,""],inplace_decrement:[1092,2,1,""],inplace_increment:[1093,2,1,""],inplace_update:[1094,2,1,""],inplace_variables_supported:[1095,2,1,""],is_array:[1096,2,1,""],match_kwargs:[1097,2,1,""],num_arrays_in_memory:[1098,2,1,""],print_all_arrays_in_memory:[1099,2,1,""],queue_timeout:[1100,2,1,""],scatter_flat:[1101,2,1,""],scatter_nd:[1102,2,1,""],set_min_base:[1103,2,1,""],set_min_denominator:[1104,2,1,""],set_queue_timeout:[1105,2,1,""],set_tmp_dir:[1106,2,1,""],shape_to_tuple:[1107,2,1,""],stable_divide:[1108,2,1,""],stable_pow:[1109,2,1,""],supports_inplace:[1110,2,1,""],tmp_dir:[1111,2,1,""],to_list:[1112,2,1,""],to_numpy:[1113,2,1,""],to_scalar:[1114,2,1,""],try_else_none:[1115,2,1,""],unstack:[1116,2,1,""],value_is_nan:[1117,2,1,""]},"ivy.functional.ivy.gradients":{GradientTracking:[1118,1,1,""],adam_step:[1120,2,1,""],adam_update:[1121,2,1,""],execute_with_gradients:[1122,2,1,""],gradient_descent_update:[1123,2,1,""],is_variable:[1124,2,1,""],lamb_update:[1125,2,1,""],lars_update:[1126,2,1,""],optimizer_update:[1127,2,1,""],set_with_grads:[1128,2,1,""],stop_gradient:[1129,2,1,""],unset_with_grads:[1130,2,1,""],variable:[1131,2,1,""],variable_data:[1132,2,1,""],with_grads:[1133,2,1,""]},"ivy.functional.ivy.gradients.GradientTracking":{__init__:[1118,3,1,""]},"ivy.functional.ivy.image":{bilinear_resample:[1135,2,1,""],float_img_to_uint8_img:[1136,2,1,""],gradient_image:[1137,2,1,""],random_crop:[1138,2,1,""],stack_images:[1139,2,1,""],uint8_img_to_float_img:[1140,2,1,""]},"ivy.functional.ivy.layers":{conv1d:[1142,2,1,""],conv1d_transpose:[1143,2,1,""],conv2d:[1144,2,1,""],conv2d_transpose:[1145,2,1,""],conv3d:[1146,2,1,""],conv3d_transpose:[1147,2,1,""],depthwise_conv2d:[1148,2,1,""],dropout:[1149,2,1,""],linear:[1150,2,1,""],lstm_update:[1151,2,1,""],multi_head_attention:[1152,2,1,""],scaled_dot_product_attention:[1153,2,1,""]},"ivy.functional.ivy.linear_algebra":{cholesky:[1155,2,1,""],det:[1156,2,1,""],diagonal:[1157,2,1,""],eigvalsh:[1158,2,1,""],inv:[1159,2,1,""],matmul:[1160,2,1,""],matrix_norm:[1161,2,1,""],matrix_transpose:[1162,2,1,""],pinv:[1163,2,1,""],qr:[1164,2,1,""],slodget:[1165,2,1,""],svd:[1166,2,1,""],svdvals:[1167,2,1,""],trace:[1168,2,1,""],vector_norm:[1169,2,1,""],vector_to_skew_symmetric_matrix:[1170,2,1,""]},"ivy.functional.ivy.losses":{binary_cross_entropy:[1172,2,1,""],cross_entropy:[1173,2,1,""],sparse_cross_entropy:[1174,2,1,""]},"ivy.functional.ivy.manipulation":{constant_pad:[1176,2,1,""],expand_dims:[1177,2,1,""],flip:[1178,2,1,""],permute_dims:[1179,2,1,""],repeat:[1180,2,1,""],split:[1181,2,1,""],swapaxes:[1182,2,1,""],tile:[1183,2,1,""],zero_pad:[1184,2,1,""]},"ivy.functional.ivy.meta":{fomaml_step:[1186,2,1,""],maml_step:[1187,2,1,""],reptile_step:[1188,2,1,""]},"ivy.functional.ivy.nest":{all_nested_indices:[1190,2,1,""],copy_nest:[1191,2,1,""],index_nest:[1192,2,1,""],map:[1193,2,1,""],map_nest_at_index:[1194,2,1,""],map_nest_at_indices:[1195,2,1,""],multi_index_nest:[1196,2,1,""],nested_indices_where:[1197,2,1,""],nested_map:[1198,2,1,""],set_nest_at_index:[1199,2,1,""],set_nest_at_indices:[1200,2,1,""]},"ivy.functional.ivy.norms":{layer_norm:[1202,2,1,""]},"ivy.functional.ivy.old":{dtype:[1204,0,0,"-"],general:[1205,0,0,"-"],linalg:[1234,0,0,"-"],reductions:[1235,0,0,"-"]},"ivy.functional.ivy.old.general":{abs:[1206,2,1,""],arange:[1207,2,1,""],argmin:[1208,2,1,""],broadcast_to:[1209,2,1,""],clip:[1210,2,1,""],concatenate:[1211,2,1,""],cross:[1212,2,1,""],equal:[1213,2,1,""],floor:[1214,2,1,""],full:[1215,2,1,""],get_num_dims:[1216,2,1,""],identity:[1217,2,1,""],indices_where:[1218,2,1,""],linear_resample:[1219,2,1,""],matmul:[1220,2,1,""],maximum:[1221,2,1,""],meshgrid:[1222,2,1,""],minimum:[1223,2,1,""],multiprocessing:[1224,2,1,""],one_hot:[1225,2,1,""],ones:[1226,2,1,""],reshape:[1227,2,1,""],shape:[1228,2,1,""],squeeze:[1229,2,1,""],stack:[1230,2,1,""],transpose:[1231,2,1,""],where:[1232,2,1,""],zeros_like:[1233,2,1,""]},"ivy.functional.ivy.random":{multinomial:[1237,2,1,""],randint:[1238,2,1,""],random_normal:[1239,2,1,""],random_uniform:[1240,2,1,""],seed:[1241,2,1,""],shuffle:[1242,2,1,""]},"ivy.functional.ivy.searching":{argmax:[1244,2,1,""]},"ivy.functional.ivy.sorting":{argsort:[1247,2,1,""]},"ivy.functional.ivy.statistical":{"var":[1256,2,1,""],einsum:[1249,2,1,""],max:[1250,2,1,""],mean:[1251,2,1,""],min:[1252,2,1,""],prod:[1253,2,1,""],std:[1254,2,1,""],sum:[1255,2,1,""]},"ivy.functional.ivy.utility":{all:[1258,2,1,""],any:[1259,2,1,""]},"ivy.stateful":{activations:[1264,0,0,"-"],converters:[1267,0,0,"-"],initializers:[1269,0,0,"-"],layers:[1278,0,0,"-"],module:[1290,0,0,"-"],norms:[1292,0,0,"-"],optimizers:[1294,0,0,"-"],sequential:[1300,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1265,1,1,""],GELU:[1266,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1265,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1266,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1268,2,1,""]},"ivy.stateful.initializers":{Constant:[1269,1,1,""],FirstLayerSiren:[1271,1,1,""],GlorotUniform:[1272,1,1,""],KaimingNormal:[1269,1,1,""],Ones:[1274,1,1,""],Siren:[1275,1,1,""],Uniform:[1269,1,1,""],Zeros:[1277,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1269,3,1,""],create_variables:[1269,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1271,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1272,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1269,3,1,""],create_variables:[1269,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1274,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1275,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1269,3,1,""],create_variables:[1269,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1277,3,1,""]},"ivy.stateful.layers":{Conv1D:[1279,1,1,""],Conv1DTranspose:[1280,1,1,""],Conv2D:[1281,1,1,""],Conv2DTranspose:[1282,1,1,""],Conv3D:[1283,1,1,""],Conv3DTranspose:[1284,1,1,""],DepthwiseConv2D:[1285,1,1,""],Dropout:[1286,1,1,""],LSTM:[1287,1,1,""],Linear:[1288,1,1,""],MultiHeadAttention:[1289,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1281,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1282,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1283,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1284,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1285,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1286,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1287,3,1,""],get_initial_state:[1287,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1288,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1289,3,1,""]},"ivy.stateful.module":{Module:[1291,1,1,""]},"ivy.stateful.module.Module":{__init__:[1291,3,1,""],build:[1291,3,1,""],build_mode:[1291,3,1,""],built:[1291,3,1,""],check_submod_rets:[1291,3,1,""],get_mod_key:[1291,3,1,""],mod_depth:[1291,3,1,""],mod_height:[1291,3,1,""],mod_with_top_mod_key_chain:[1291,3,1,""],save_weights:[1291,3,1,""],show_mod_in_top_mod:[1291,3,1,""],show_structure:[1291,3,1,""],show_v_in_top_v:[1291,3,1,""],sub_mods:[1291,3,1,""],track_submod_call_order:[1291,3,1,""],track_submod_rets:[1291,3,1,""],v_with_top_v_key_chains:[1291,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1293,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1293,3,1,""]},"ivy.stateful.optimizers":{Adam:[1295,1,1,""],LAMB:[1296,1,1,""],LARS:[1297,1,1,""],Optimizer:[1298,1,1,""],SGD:[1299,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1295,3,1,""],set_state:[1295,3,1,""],state:[1295,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1296,3,1,""],set_state:[1296,3,1,""],state:[1296,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1297,3,1,""],set_state:[1297,3,1,""],state:[1297,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1298,3,1,""],set_state:[1298,3,1,""],step:[1298,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1299,3,1,""],set_state:[1299,3,1,""],state:[1299,3,1,""]},"ivy.stateful.sequential":{Sequential:[1301,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1301,3,1,""]},"ivy.verbosity":{cprint:[1304,2,1,""]},ivy:{"debugger":[48,0,0,"-"],container:[44,0,0,"-"],framework_handler:[65,0,0,"-"],func_wrapper:[78,0,0,"-"],verbosity:[1303,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1294,1295,1296],"02886":1260,"100":[42,43,1260],"141592653589793":925,"2006":41,"2015":42,"2019":[1018,1036],"2021":1260,"2102":1260,"360":[1018,1061],"70s":42,"718281828459045":925,"754":[42,925,940,955,1018,1036,1059],"80s":42,"90s":42,"999":[1118,1120,1121,1125,1294,1295,1296],"\u03c0":[1018,1020],"abstract":[41,968,983,1260,1294,1298],"boolean":[44,45,940,957,967,968,1003,1015,1018,1027,1028,1029,1049,1050,1051,1052,1063,1064,1066,1067,1090,1091,1095,1096,1110,1117,1118,1124,1185,1186,1187,1205,1218],"break":47,"case":[15,18,19,42,44,45,46,47,968,1007,1014,1017,1018,1019,1020,1021,1023,1030,1031,1036,1037,1045,1047,1048,1057,1058,1059,1063,1101,1102,1154,1161,1189,1192,1196,1205,1207,1227,1248,1250,1260,1278,1289,1290,1291,1294,1298],"catch":[1063,1077],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,64,65,415,421,422,940,956,968,970,971,972,973,974,975,977,978,980,981,982,983,995,996,1063,1065,1097,1118,1132,1171,1173,1174,1189,1191,1198,1260,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],"default":[15,18,19,44,45,46,47,915,916,920,923,924,926,928,929,930,931,932,934,935,936,937,938,939,940,948,949,950,951,968,977,978,985,986,990,991,992,993,994,997,998,999,1000,1007,1010,1011,1012,1017,1063,1064,1070,1071,1074,1075,1083,1084,1090,1097,1100,1101,1102,1105,1108,1109,1116,1117,1118,1121,1123,1124,1125,1126,1127,1129,1133,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1157,1161,1164,1169,1171,1172,1173,1174,1175,1176,1178,1180,1181,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1201,1202,1205,1207,1208,1211,1212,1215,1216,1217,1219,1222,1224,1226,1228,1231,1236,1237,1239,1240,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],"final":[44,45,47,926,933,934,1063,1083,1278,1289],"float":[44,45,46,47,401,407,915,917,925,926,929,931,932,934,935,939,940,949,955,958,960,968,977,978,1001,1007,1010,1014,1017,1018,1020,1021,1023,1030,1031,1033,1036,1037,1045,1047,1048,1057,1058,1059,1063,1070,1071,1083,1087,1088,1103,1104,1105,1108,1109,1118,1120,1121,1123,1125,1126,1127,1134,1136,1140,1141,1149,1152,1153,1154,1155,1156,1158,1164,1169,1171,1172,1173,1174,1175,1176,1185,1186,1187,1188,1201,1202,1205,1207,1215,1236,1239,1240,1248,1250,1253,1255,1256,1278,1286,1289,1292,1293,1294,1295,1296,1297,1298,1299],"function":[15,41,44,45,47,54,64,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,463,464,465,466,467,468,469,470,471,472,473,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,970,971,972,973,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1264,1265,1266,1294,1297,1298,1299],"import":[42,47,1260,1263],"int":[44,45,46,47,401,404,406,407,410,412,413,414,415,417,915,920,923,924,926,929,931,932,933,934,935,937,938,939,940,944,950,952,955,956,959,968,990,991,992,993,994,997,998,999,1000,1005,1006,1012,1063,1074,1075,1078,1079,1080,1083,1084,1101,1102,1107,1116,1118,1120,1121,1125,1134,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1152,1154,1157,1161,1168,1169,1171,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1198,1201,1202,1205,1208,1209,1211,1215,1216,1217,1219,1225,1226,1227,1228,1229,1230,1231,1236,1237,1238,1240,1241,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1256,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1292,1293],"long":[47,1141,1151],"new":[41,42,43,44,45,47,54,926,929,932,935,936,939,940,945,1018,1026,1032,1046,1055,1062,1063,1078,1079,1080,1083,1084,1085,1101,1102,1103,1104,1108,1109,1118,1121,1123,1125,1126,1127,1134,1136,1138,1140,1175,1177,1189,1199,1200,1201,1202,1205,1206,1209,1215,1226,1227,1230,1236,1237,1260,1267,1268,1278,1288,1292,1293,1294,1295,1296,1297,1298,1299],"public":[1063,1072],"return":[15,16,17,18,19,44,45,46,47,915,916,917,918,919,920,921,922,923,924,926,927,929,930,931,932,933,934,935,936,937,938,939,940,944,945,946,947,948,949,950,951,952,953,954,957,958,959,960,967,968,977,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1003,1004,1006,1007,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1090,1091,1092,1093,1094,1095,1096,1097,1098,1101,1102,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1236,1237,1238,1239,1240,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1267,1268,1278,1287,1288,1294,1298],"short":[47,1141,1151,1260],"static":[44,45,923,924],"true":[44,45,46,397,398,512,516,915,916,923,924,968,1018,1039,1040,1041,1050,1051,1063,1064,1068,1069,1081,1083,1090,1117,1118,1121,1123,1124,1125,1126,1127,1129,1141,1149,1154,1155,1161,1166,1169,1171,1172,1173,1174,1185,1186,1187,1188,1189,1190,1197,1205,1218,1232,1236,1237,1243,1244,1246,1247,1248,1250,1251,1253,1254,1257,1258,1259,1278,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],"try":[40,42,43,44,45,1063,1115],"var":[44,45,1185,1186,1187,1248],"while":[41,42,44,45,46,1018,1050,1051],AND:[1018,1027,1049,1257,1258],AWS:42,For:[41,42,43,47,1018,1019,1020,1021,1023,1030,1031,1036,1037,1045,1047,1048,1057,1058,1059,1118,1124,1132,1205,1207,1210,1230,1248,1250,1260,1267,1268],Its:[1018,1024],NOT:[1018,1050],Not:925,One:[44,45,47,1063,1079,1205,1227,1236,1238],Ones:1269,PRs:47,Such:[1063,1072],The:[15,16,17,18,19,40,41,43,44,45,46,47,54,915,916,917,918,919,920,921,922,923,924,926,927,934,937,938,940,945,946,947,952,953,954,957,967,968,977,978,984,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1007,1010,1011,1012,1013,1014,1017,1018,1019,1020,1021,1022,1023,1024,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1061,1063,1066,1069,1070,1071,1073,1076,1077,1083,1084,1085,1092,1093,1094,1096,1101,1102,1103,1104,1105,1107,1108,1109,1117,1118,1120,1121,1123,1125,1126,1127,1129,1132,1134,1136,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1161,1162,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1178,1179,1180,1181,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205,1207,1209,1211,1212,1213,1217,1219,1220,1222,1224,1226,1227,1229,1230,1233,1236,1237,1239,1240,1243,1244,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298],There:[41,47,1260],These:[41,42,43,47,1260,1263],Use:47,Used:[1189,1190,1197,1290,1291],Using:1260,With:[42,43,44,45,1154,1161,1243,1244,1248,1251,1254,1260],__array__:[926,927],__call__:[1278,1289,1290,1291],__init__:[44,45,46,47,65,66,102,264,415,416,421,422,568,734,940,941,942,943,968,969,976,977,978,979,980,981,982,983,1118,1119,1260,1264,1265,1266,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],__pow__:47,_base:[1189,1190,1197],_cur_framework:47,_forward:1260,_handle_flat_arrays_in_out:47,_index:[1189,1190,1197],_min_bas:[1063,1109,1201,1202,1292,1293],_min_denomin:[1063,1108],_native_wrapp:47,_step:[1294,1298],abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,968,977,983,1290,1291,1294,1298],abil:1260,abl:[44,45],about:[43,940,955,956],abov:[47,926,937,938,1154,1157,1236,1238,1248,1253,1255],above_height:[44,45],abs:[512,1018,1154,1169,1205],absolut:[44,45,1018,1019,1154,1165,1205,1206],abund:43,accept:[15,47,1018,1050,1051,1260],access:[44,45,47],accord:[44,45,940,955,1063,1084,1101,1102,1175,1176,1184,1205,1231],accordingli:[1018,1036,1154,1169,1248,1250,1253,1257,1258,1259],accur:[65,415,421,422,940,968,980,981,982,983,1018,1036,1118,1269,1271,1272,1274,1275,1277],aco:1018,acosh:1018,across:[44,45,968,977,978,987,988,990,991,992,993,994,1000,1010,1011,1063,1066,1067,1189,1193,1205,1208],act:47,activ:[398,399,916,917,918,919,920,921,922,1265,1266],adam:[1118,1120,1121,1125,1260,1294,1296],adam_step:1118,adam_upd:1118,adapt:[42,1118,1126,1294,1297],add:[44,45,47,1171,1172,1173,1174,1201,1202,1260,1263,1292,1293],added:[47,1063,1108,1109,1300,1301],adding:[42,47,1205,1209],addit:[44,45,47,1063,1078,1079,1080,1201,1202,1278,1288],addition:47,address:[43,47],adher:[41,42,47],adjac:[1205,1207],adjust:[1248,1256],adopt:[42,47,1063,1072],affect:[1205,1207],affin:[1292,1293],after:[1018,1059,1118,1121,1122,1123,1125,1126,1127,1134,1135,1201,1202,1205,1219,1294,1295,1296,1297,1298,1299],after_1:[1175,1176,1184],after_n:[1175,1176,1184],again:[42,43,47],against:[41,44,45,1154,1160,1161,1243,1244,1248,1251,1254],agnost:[47,1260],algorithm:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],align:[44,45,47,1205,1209,1263],aliv:[968,1002,1004,1008,1063,1086,1098,1099],all:[15,16,17,18,19,41,42,43,44,45,47,923,924,926,931,937,938,968,977,1002,1008,1063,1064,1066,1067,1072,1086,1099,1141,1151,1154,1169,1175,1178,1185,1186,1187,1188,1189,1190,1191,1197,1198,1205,1206,1217,1229,1236,1237,1240,1248,1251,1254,1257,1260],all_depth:[44,45],all_equ:1063,all_fals:[44,45],all_key_chain:[44,45],all_nested_indic:1189,all_tru:[44,45],alloc:[47,926,937,938,968],allow:[42,926,933,934,1063,1097,1290,1291],allow_dupl:[1063,1097],allud:42,almost:41,alon:[968,1007,1017,1260],along:[44,45,47,926,933,934,968,991,992,993,994,997,998,999,1000,1012,1063,1074,1075,1084,1116,1154,1161,1168,1169,1175,1178,1180,1181,1183,1185,1186,1187,1188,1205,1211,1219,1230,1236,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],alongsid:42,alpha:[397,915,917],alphabet:[44,45,46],alphabetical_kei:[44,45,46],alreadi:[44,45,47,968,1018,1030,1037],also:[41,42,44,45,47,1118,1121,1141,1150,1185,1186,1187,1188,1189,1190,1191,1197,1198,1205,1207,1260,1278,1288],alwai:[44,45,47,1118,1124,1129],among:[43,44,45],amount:[968,1014,1260],angl:[1018,1025,1058],ani:[15,16,17,18,19,41,42,43,44,45,47,923,924,926,927,928,968,970,973,977,978,980,989,990,993,994,999,1018,1038,1043,1063,1064,1077,1078,1079,1080,1081,1090,1096,1097,1108,1109,1118,1122,1189,1190,1193,1197,1198,1199,1200,1205,1207,1213,1236,1240,1257,1260,1267,1268,1290,1291],anoth:[42,44,45,47,940,947,1260],another_backend:47,anyon:42,anyth:47,anywai:47,apach:42,apart:47,api:[40,41,54,1260,1263],appear:[47,1175,1177],append:[44,45,1154,1157,1160],appli:[15,18,19,44,45,64,915,916,917,918,919,920,921,922,940,960,1063,1078,1079,1080,1118,1125,1126,1141,1150,1152,1153,1154,1166,1185,1186,1187,1189,1193,1196,1198,1201,1202,1260,1264,1265,1266,1292,1293],applic:[1141,1152,1153,1189,1193,1198,1260],appropri:[1243,1244],approxim:[47,397,398,915,916,1018,1020,1021,1023,1031,1036,1045,1046,1047,1057,1058],arang:[512,926,933,934,1205],arbitrari:[44,45,940,960,968,997,998,1000],arc:[1018,1025],arctan:[1018,1024],area:[42,64,1018,1021,1023,1260],arg:[15,16,17,44,45,47,65,69,968,977,990,994,1000,1012,1063,1078,1079,1080,1102,1267,1268,1290,1291],arg_nam:1063,arg_stateful_idx:[1290,1291],argmax:1243,argmin:[512,1205],args_to_ivi:15,args_to_n:15,argsort:1246,argument:[15,16,17,18,19,41,44,45,46,47,65,69,923,924,940,960,968,977,978,990,994,1000,1063,1065,1069,1077,1097,1102,1189,1193,1205,1207,1267,1268,1290,1291],aris:[42,1260],arithmet:[47,1248,1251,1254],arithmetic_oper:[0,1,2,47],aros:42,around:[44,45,46,47],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,54,401,915,916,917,918,919,920,921,922,926,928,929,930,931,932,933,934,935,936,937,938,939,940,944,945,951,955,956,958,959,960,968,986,987,988,991,992,993,994,997,998,999,1000,1002,1004,1008,1012,1013,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1070,1071,1073,1074,1075,1078,1079,1080,1082,1083,1084,1085,1086,1090,1091,1092,1093,1094,1096,1098,1099,1101,1102,1110,1112,1113,1114,1116,1117,1118,1120,1121,1124,1125,1129,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1191,1198,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1233,1236,1237,1238,1239,1240,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1278,1286,1287,1289,1294,1298],arrang:[1063,1078],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,47],array_api_methods_to_test:47,array_builtin:47,array_equ:1063,array_lik:[926,927],array_modul:47,array_oper:[0,3,4],arrays_and_dtyp:[415,420,940,960],arrays_as_list:[44,45],arrays_equ:[44,45,1063],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:20,arraywithgener:22,arraywithgradi:24,arraywithimag:26,arraywithlinalg:28,arraywithlog:30,arraywithmath:32,arraywithmeta:34,arraywithrandom:36,arraywithreduct:38,arriv:[44,45,46],articl:1260,arxiv:1260,as_arrai:[44,45,1205,1216,1228],as_bool:[44,45],as_on:[44,45],as_random_uniform:[44,45],as_str:[421,512,518,940,948,949,950,951,968,986],as_tensor:512,as_vari:[44,45],as_zero:[44,45],asarrai:[401,926],ascend:[1246,1247],asin:1018,asinh:1018,ask:43,aspect:[1134,1139],assert:[44,45,1063,1068],assert_contains_sub_contain:[44,45],assert_contains_sub_structur:[44,45],assert_ident:[44,45],assert_identical_structur:[44,45],assert_is_bool:[44,45],assert_supports_inplac:1063,associ:[47,1154,1170],assum:[1018,1031,1057],astyp:[512,940],asynchron:[44,45,46],at_dev:[44,46,968,981,982],at_kei:[44,45],at_key_chain:[44,45],atan2:1018,atan:1018,atanh:1018,attent:[42,47,1141,1152,1153,1278,1289],attribut:[0,6,44,45,940,955,956,1205,1233],audienc:1260,author:1260,automat:[43,47,54],avail:[41,44,45,47,968,1003,1005,1006,1015,1063,1079],averag:[1118,1120,1121,1125,1185,1186,1187,1248,1251],average_across_step:[1185,1186,1187],avoid:[47,968,1018,1036],awesom:43,axes:[44,45,47,512,528,968,1012,1154,1161,1169,1175,1176,1177,1178,1179,1182,1184,1205,1208,1231,1243,1244,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],axes_length:[44,45,1063,1078,1079,1080],axi:[44,45,397,399,401,408,409,463,464,465,473,512,514,517,525,527,915,920,926,933,934,968,970,973,980,991,992,993,994,997,998,999,1000,1012,1063,1074,1075,1084,1116,1154,1157,1168,1169,1171,1173,1174,1175,1176,1177,1178,1180,1181,1182,1183,1184,1205,1208,1211,1212,1219,1229,1230,1236,1242,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],axis0:[44,45,1175,1182],axis1:[44,45,1154,1157,1175,1182],axis2:[1154,1157],back:[42,47,54,1263,1290,1291,1294,1298],backend:[15,17,19,44,45,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,463,464,465,466,467,468,469,470,471,472,473,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,940,947,957,967,968,1003,1006,1015,1063,1091,1095,1118,1121,1123,1125,1126,1127,1132,1260,1267,1268,1294,1295,1296,1297,1298,1299],backend_nam:47,background:1260,backward:[1257,1258,1259],band:[1063,1083],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,65,401,409,415,421,422,926,934,940,968,970,971,972,973,974,975,977,978,980,981,982,983,1018,1045,1046,1047,1063,1087,1103,1109,1118,1248,1249,1260,1264,1265,1266,1269,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],basi:47,batch:[44,45,968,1010,1011,1063,1083,1134,1138,1141,1150,1154,1166,1169,1185,1186,1187,1188,1201,1202,1205,1217,1292,1293],batch_shap:[512,523,1134,1135,1136,1137,1138,1139,1140,1141,1151,1152,1153,1154,1170,1205,1217,1225,1236,1237,1278,1287],batch_siz:[1141,1142,1143,1144,1145,1146,1147,1148,1236,1237],becaus:[47,1205,1207],becom:[41,43,47,1018,1025,1205,1210],been:[1063,1078,1079,1080,1236,1237],befor:[44,45,47,968,1012,1141,1152,1153,1185,1186,1187,1189,1198,1248,1251,1253,1254,1255],before_1:[1175,1176,1184],before_n:[1175,1176,1184],begin:[1189,1190,1197],behaviour:47,behind:[1118,1121,1123,1125,1126,1127,1260],being:[42,43,44,45,47,1063,1100,1105,1205,1207],believ:[42,47],belong:[44,45],below:[47,926,937,938,1154,1157,1260],below_depth:[44,45],benefit:[42,43,1260],bernoul:[1141,1149,1278,1286],best:[47,1063,1097,1260],beta1:[1118,1120,1121,1125,1294,1295,1296],beta2:[1118,1120,1121,1125,1294,1295,1296],beta:[1201,1202],better:43,between:[41,44,45,46,54,940,955,1171,1173,1174,1189,1193,1205,1207,1236,1238,1294,1296],bia:[1141,1150,1151,1278,1279,1280,1281,1282,1283,1284,1285,1288],bias_initi:[1278,1279,1280,1281,1282,1283,1284,1285,1288],bilinear:[1134,1135],bilinear_resampl:1134,bilinearli:[1134,1135],binari:[1018,1027,1029,1052,1171,1172],binary_cross_entropi:1171,bio:42,bit:[415,940,952,955,956,1018,1028,1134,1136,1140,1248,1253,1255,1260],bitwis:[1018,1027,1029,1052],bitwise_and:1018,bitwise_invert:1018,bitwise_oper:[0,7,8],bitwise_or:1018,block:[54,1260],bluetooth:42,bool:[15,18,19,44,45,46,47,915,916,923,924,940,948,949,950,951,957,958,959,967,968,986,999,1003,1007,1012,1015,1017,1018,1038,1039,1040,1041,1042,1043,1049,1050,1051,1054,1063,1064,1066,1067,1074,1077,1081,1083,1090,1096,1097,1116,1117,1118,1121,1122,1123,1124,1125,1126,1127,1129,1141,1149,1154,1155,1161,1166,1169,1175,1181,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1205,1213,1216,1228,1232,1236,1237,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1256,1257,1258,1259,1267,1268,1278,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],both:[47,1154,1160,1205,1212],bottleneck:41,bottom:1260,boundari:[44,45,1236,1240],branch:[47,923,924],bring:42,brittl:47,broadcast:[44,45,47,940,944,1018,1025,1027,1029,1033,1038,1042,1043,1048,1051,1052,1054,1154,1160,1161,1169,1175,1180,1205,1209,1213,1221,1222,1223,1243,1244,1248,1250,1251,1253,1254,1257,1258,1259],broadcast_to:[415,940,1205],btx:42,build:[42,54,1260,1278,1289,1290,1291],build_mod:[1278,1289,1290,1291],builder:[47,64,1260],built:[968,1205,1207,1278,1289,1290,1291],builtin:47,builtin_pow:47,builtin_some_op:47,bumpi:42,bus:42,busi:47,cach:[968,984,1063,1069],cache_fn:1063,calcul:[42,44,45,46,47,1018,1019,1020,1021,1023,1031,1033,1036,1045,1046,1047,1048,1057,1058,1059,1248,1250,1253,1255,1256],call:[42,47,968,1012,1063,1100,1105,1115,1118,1122,1189,1190,1193,1197,1278,1289,1290,1291,1294,1298],callabl:[44,45,923,924,968,977,978,1012,1063,1069,1077,1079,1097,1115,1141,1152,1185,1186,1187,1188,1189,1193,1194,1195,1197,1198],can:[41,42,43,47,54,926,928,968,1010,1011,1012,1134,1136,1205,1227,1260,1263],cannot:47,captur:1260,care:42,cast:[44,45,512,940,1134,1136,1140,1205,1211,1248,1253,1255],catalyst:43,catch_except:[1063,1077],categori:[47,54],caus:47,ceil:[1018,1205,1207],celebr:42,cell:[1141,1151,1278,1287],central:42,certain:[44,45,926,933,934,1205,1207],certainli:42,chain:[44,45,1185,1186,1187,1300,1301],chang:[43,47,968,1189,1191,1198,1205,1227,1260,1263],channel:[1063,1083,1134,1136,1137,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288],charact:42,charger:42,check:[15,16,17,18,19,41,42,43,44,45,47,940,946,957,967,968,1007,1017,1063,1068,1081,1090,1096,1110,1117,1118,1124,1189,1190,1197,1260],check_nest:[1189,1197],check_shap:[44,45],check_submod_ret:[1290,1291],check_typ:[44,45],choic:[43,1260],choleski:1154,choos:[1018,1025,1050,1051,1205,1232,1248,1250,1260],choose_random_framework:65,chosen:[44,45,1205,1207,1232],chunk:[968,1010,1011,1012],chunk_siz:[968,1012],circl:[1018,1022],clark:1260,clear:[41,42,43,47,968,984],clear_framework_stack:65,clear_mem_on_dev:[421,968],clearli:42,click:1260,clip:[44,45,512,1063,1070,1071,1205,1221,1223,1260],clip_matrix_norm:1063,clip_max:[44,45],clip_min:[44,45],clip_vector_norm:[44,45,1063],clone:[44,45,968,987,988,989,990],close:[47,1018,1022,1036,1134,1139],closest:[940,946,1018,1030,1037],closest_valid_dtyp:940,cloth:41,code:[41,42,43,44,45,46,47,54,64,1260,1263],codebas:[43,54,968,1010,1011,1260],codomain:[1018,1020,1021,1023,1031,1036,1045,1047,1057,1058,1059],colab:1260,collabor:[40,41,42],collect:[15,44,45,397,421,463,512,915,923,968,1063,1118,1134,1141,1171,1189,1201,1205,1235,1236,1264,1278,1292,1294],color:[44,45,46,1303,1304],column:[926,931,1154,1164,1205,1217],combin:[44,45,46,1134,1139,1260],combo:1263,come:[64,1263],comic:42,command:1260,comment:47,common:[41,44,45,47,1018,1025],common_key_chain:[44,45],commun:[42,47,1260,1263],communuti:47,compani:42,compar:[44,45,1063,1064,1066,1067,1246,1247],comparison_oper:[0,9,10],compat:[42,47,940,944,1018,1027,1029,1033,1038,1042,1043,1048,1049,1051,1052,1054,1154,1169,1205,1213,1227,1248,1250,1253,1257,1258,1259,1260],compil:[54,512,1290,1291,1294,1295,1296,1297,1298,1299],compile_on_next_step:[1290,1291,1294,1295,1296,1297,1298,1299],complet:[42,44,45,47,1154,1164],complianc:42,compliant:[1018,1036,1050,1051,1248,1250],compon:[42,1205,1212],composit:47,comput:[42,43,44,45,968,1012,1018,1022,1024,1025,1027,1029,1034,1035,1038,1042,1043,1044,1049,1050,1051,1052,1053,1054,1061,1063,1070,1071,1074,1075,1118,1120,1121,1122,1123,1125,1126,1127,1129,1131,1134,1137,1141,1142,1143,1144,1145,1146,1147,1148,1150,1152,1154,1155,1158,1159,1160,1161,1163,1164,1165,1168,1169,1171,1172,1173,1174,1189,1193,1205,1213,1220,1248,1249,1250,1251,1252,1253,1254,1255,1256],concat:[44,45,968,997,998,999,1000,1012,1063,1083],concaten:[44,45,512,1063,1083,1205,1260],concatten:[44,45,968,997,998,999,1000,1012],conda:42,condit:[512,923,924,1189,1197,1205,1232],conditon:[1189,1197],config:[44,45],configur:[44,45],conflict:47,conform:[47,1018,1036],confus:43,connect:[42,1278,1288,1289],consid:[41,42,44,45,1018,1050,1051],consider:41,consist:[41,44,45,968,1000,1248,1249,1290,1291],consortium:[40,42,1263],constant:[968,977,978,1171,1172,1173,1174,1175,1176,1189,1193,1201,1202,1269,1270,1274,1277,1290,1291,1292,1293],constant_pad:1175,constantli:41,constitu:[44,45],construct:[1175,1183,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],constructor:[44,45,46,1063,1065,1300,1301],consum:968,cont_feat_dim:[1141,1152],contaienr:[44,45],contain:[15,18,19,41,46,47,54,926,930,935,937,938,939,940,945,968,987,991,1012,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1056,1057,1058,1059,1060,1063,1070,1071,1072,1090,1108,1109,1118,1120,1121,1123,1125,1126,1127,1154,1155,1156,1157,1158,1160,1162,1164,1167,1169,1175,1179,1185,1186,1187,1188,1205,1206,1208,1210,1213,1221,1223,1236,1237,1243,1244,1248,1250,1251,1252,1253,1254,1255,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],container0:[44,45],container_combine_method:[44,45,46],container_rightmost:[44,45],container_typ:[463,1063],contains_sub_contain:[44,45],contains_sub_structur:[44,45],content:[44,45],context:[512,1141,1152,1205,1224,1278,1289],context_dim:[1278,1289],contextmanag:[65,66],continu:[42,43,47],contract:[44,45,1248,1249],contrari:42,contribut:1263,contributor:[47,1260],control:1260,conv1d:[1141,1278],conv1d_transpos:1141,conv1dtranspos:1278,conv2d:[1141,1278],conv2d_transpos:1141,conv2dtranspos:1278,conv3d:[1141,1278],conv3d_transpos:1141,conv3dtranspos:1278,convent:[41,44,45,1154,1160,1248,1249],conver:[968,984,995,1007,1014,1017],converg:43,convers:[16,17,18,19,43,44,45,54,1263],convert:[15,16,17,18,19,43,44,45,47,926,928,940,947,953,954,968,995,996,1063,1107,1113,1114,1134,1136,1140,1154,1170,1189,1191,1198,1268],convert_dtyp:940,convinc:42,convolut:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],cool:47,cooler:47,coordin:[1018,1022,1025,1205,1222],copi:[44,45,47,401,403,1063,1073,1189,1191],copy_arrai:[463,1063],copy_nest:1189,core:[41,968,1005,1260],corner:47,correct:[47,1248,1256,1260],correctli:[44,45,47,1018,1025,1154,1161,1243,1244,1248,1251,1254],correspond:[44,45,47,1205,1211,1236,1237,1243,1244,1248,1253,1255],cos:[1018,1061,1063,1083],cosh:1018,cosin:[1018,1020,1021,1031,1032],cost:[1118,1120,1121,1123,1125,1126,1127,1185,1186,1187,1188],cost_fn:[1185,1188],could:[42,43],count:[44,45,1175,1178,1257,1258,1259],cours:47,cprint:1303,cpu:[44,45,47,926,927,933,934,968,1005,1007,1013,1014,1017,1063,1084,1085,1101,1102,1205,1207,1217,1225,1226,1233,1236,1237,1238,1239,1240,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],creat:[42,44,45,64,926,927,928,929,930,931,932,933,934,935,936,939,968,977,978,1063,1084,1085,1101,1102,1112,1118,1131,1205,1207,1215,1217,1225,1226,1233,1236,1237,1238,1239,1240,1260,1263,1267,1268,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],create_if_abs:[44,45],create_vari:1269,creation:[44,45,46,47,402,403,404,405,406,407,408,409,410,411,412,413,414,927,928,929,930,931,932,933,934,935,936,937,938,939],crop:[1134,1138],crop_siz:[1134,1138],cross:[1171,1172,1173,1174,1205],cross_entropi:1171,cuda:[44,45,926,927,933,934,968,977,996,1013,1063,1084,1085,1101,1102,1205,1207,1217,1225,1226,1233,1236,1237,1238,1239,1240,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],cumprod:[463,1063],cumsum:1063,cumul:[1063,1074,1075],cupi:42,current:[43,44,45,46,47,940,947,957,967,968,977,1001,1002,1004,1008,1063,1076,1086,1091,1095,1098,1099,1189,1190,1197,1260],current_framework:65,current_framework_str:[512,1063],custom:[42,47],cut:41,cutoff_at_depth:[44,45],cutoff_at_height:[44,45],d_in:[1141,1142,1143,1144,1145,1146,1147],d_out:[1141,1142,1143,1144,1145,1146,1147],da_dim_s:968,da_tune_step:968,daniel:1260,dask:42,data:[40,42,44,45,46,47,926,927,928,929,930,931,932,935,936,937,938,939,944,945,946,947,951,952,953,954,955,956,957,958,959,967,968,970,971,972,973,974,975,980,981,982,996,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1063,1096,1110,1118,1124,1132,1141,1150,1154,1155,1156,1157,1158,1160,1162,1164,1169,1175,1178,1179,1205,1207,1213,1215,1217,1226,1227,1229,1233,1243,1244,1246,1247,1248,1250,1253,1255,1256,1257,1258,1259,1260,1263],data_format:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],data_typ:[415,417,418,419,420,940,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967],dataload:64,dataset:[44,45,64],datatyp:[44,45,926,928,940,946,958,959],dcdw:[1118,1120,1121,1123,1125,1126],debug_mod:48,debug_mode_in:[48,51],debugg:[49,50,51,52,53],decai:[1118,1125,1126,1294,1296,1297],decay_lambda:[1118,1125,1126,1294,1296,1297],decid:[44,45],decomposit:[1154,1155,1164,1166],decor:47,decrement:[1063,1092],dedic:[1118,1132,1267,1268],deep:[41,44,45,1260],deep_copi:[44,45],deeper:[41,968,990,994,1000,1189,1198,1260],deepli:[1189,1191],deepmind:43,def:[47,66,102,264,416,568,734,941,942,943,969,976,979,1119,1260,1270,1273,1276],default_dev:47,default_devic:968,default_dtyp:[47,940],default_float_dtyp:940,default_int_dtyp:940,default_key_color:[44,45,46],default_v:[1063,1077],defaultdevic:[968,969],defaultdtyp:[940,941],defaultfloatdtyp:[940,942],defaultintdtyp:[940,943],defer:47,defin:[47,1205,1212,1225,1233,1236,1238,1248,1250],definit:[47,1154,1155],degre:[1018,1061,1248,1256],delai:47,delet:47,delta:[1118,1120],demo:1260,denomin:[1063,1082,1088,1104,1108,1109,1201,1202,1292,1293],denot:47,dens:[1278,1288],depend:[42,47,1018,1019,1020,1021,1023,1031,1036,1045,1046,1047,1057,1058,1154,1164,1166,1205,1232,1246,1247,1260],depth:[44,45,512,526,968,990,994,1000,1063,1089,1189,1198,1205,1225,1290,1291],depth_cutoff:[44,45],depthwis:[1141,1148,1278,1285],depthwise_conv2d:1141,depthwiseconv2d:1278,deriv:[926,930,932,936,1118,1120,1121,1123,1125,1126,1127,1189,1191,1198,1260,1290,1294,1298,1300],descend:[1154,1166,1167,1246,1247],descent:[1118,1123,1294,1299],describ:[44,45,1248,1249,1253,1255],descript:[1154,1169],design:[41,42],desir:[41,44,45,926,927,940,945,968,1013,1134,1139,1205,1207,1217,1218,1226,1233,1248,1251,1254],desired_aspect_ratio:[1134,1139],despit:42,det:1154,detect:[44,45,1189,1190,1197],detect_key_diff:[44,45],detect_shape_diff:[44,45],detect_value_diff:[44,45],determin:[41,44,45,47,926,927,940,945,946,952,957,958,959,967,968,1003,1005,1006,1015,1018,1020,1021,1023,1027,1029,1031,1033,1036,1039,1040,1041,1045,1047,1048,1052,1057,1058,1059,1063,1064,1066,1067,1090,1091,1095,1096,1110,1117,1118,1124,1141,1152,1154,1155,1156,1157,1160,1165,1169,1185,1186,1187,1188,1205,1207,1257,1258,1259],dev:[44,45,46,47,401,402,403,405,408,409,411,421,463,465,466,471,472,512,513,523,526,529,926,927,928,930,933,934,936,968,971,972,974,975,977,978,981,982,984,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1004,1007,1008,1009,1010,1011,1012,1013,1014,1017,1063,1084,1085,1101,1102,1118,1133,1205,1207,1217,1225,1226,1233,1236,1237,1238,1239,1240,1267,1268,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],dev_clon:[44,45,968],dev_clone_arrai:968,dev_clone_it:968,dev_clone_nest:968,dev_dist:[44,45,968],dev_dist_arrai:968,dev_dist_it:968,dev_dist_nest:968,dev_from_str:[47,421,968],dev_mapp:968,dev_str:[44,45],dev_to_str:[421,968],dev_unifi:968,dev_unify_arrai:968,dev_unify_it:968,dev_unify_nest:968,dev_util:968,devclonedit:968,devcloneditem:968,devclonednest:968,devdistit:968,devdistitem:968,devdistnest:968,develop:[41,42,43,47,1260],deviat:[43,44,45,1201,1202,1236,1239,1248,1254,1292,1293],devic:[21,42,44,45,47,401,404,406,407,410,414,422,512,522,926,927,928,929,930,931,932,933,934,935,936,937,938,939,970,971,972,973,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1063,1084,1085,1101,1102,1118,1133,1205,1207,1215,1217,1225,1226,1233,1236,1237,1238,1239,1240,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],devmanag:[968,976],devmapp:[968,978],devmappermultiproc:968,diag:[1154,1166],diagon:[926,931,937,938,1154,1168,1205,1217],dict:[15,16,17,18,19,44,45,46,968,970,973,977,978,980,990,991,992,993,994,1063,1078,1079,1080,1097,1185,1186,1187,1189,1191,1192,1193,1196,1198,1267,1268],dict_in:[44,45,46],dictat:47,dictionari:[44,45,46],did:42,diff:[44,45],diff_kei:[44,45],differ:[41,42,43,44,45,46,47,940,955,968,987,988,991,992,1141,1150,1248,1253,1255,1260],differenti:1260,dilat:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],dim:[44,45,47,1134,1135,1139,1154,1166,1205,1225,1278,1289],dim_siz:[44,45,968],dimens:[44,45,46,915,920,926,937,938,968,999,1063,1078,1079,1080,1083,1116,1134,1138,1141,1142,1143,1144,1145,1146,1147,1148,1151,1154,1155,1156,1157,1158,1160,1161,1162,1164,1166,1167,1169,1171,1173,1174,1175,1177,1178,1179,1180,1181,1185,1186,1187,1188,1205,1209,1211,1212,1216,1219,1225,1227,1229,1230,1231,1236,1242,1243,1244,1248,1249,1250,1251,1253,1254,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285,1288,1289],dimension:[44,45,926,931,1154,1156,1160,1166,1169,1175,1181,1205,1229,1243,1244,1248,1250,1253,1255,1257,1258,1259],directli:[43,47,1189,1198],directori:[1063,1106,1111],discord:[41,42,43,47],discret:[1171,1173],discuss:[41,42,43,47],disk:[44,45,1134,1136],distanc:[1205,1207],distinct:[42,54],distribut:[44,45,968,987,991,992,993,994,1141,1149,1236,1237,1238,1239,1240,1278,1286,1290,1291],distributedarrai:[44,45],distrubt:[1171,1173],dive:1260,divid:[44,45,1018,1063,1108,1175,1181],dividend:[1018,1033],divis:[1018,1033,1063,1082,1088,1104,1108,1109,1118,1120,1121,1125,1294,1295,1296],divisor:[1018,1033,1118,1120,1121,1125,1294,1295,1296],doc:1260,docstr:47,document:47,doe:[42,44,45,47,1175,1181,1205,1207],doesn:1260,doing:[42,47],domain:[1018,1020,1021,1023,1031,1036,1045,1047,1057,1058,1059],don:[43,47,1260],done:47,dopamin:43,dot:[1141,1152,1153,1154,1159,1278,1289],downscal:[1063,1070,1071],drag:1260,draw:[1236,1237,1239,1240],drawn:[1236,1237,1238,1239,1240],drop:1260,dropout:[1141,1278,1289],dropout_r:[1278,1289],ds_tune_step:968,dtype:[44,45,47,401,402,403,404,405,406,407,410,411,414,415,418,419,420,512,513,515,522,523,529,926,927,928,929,930,931,932,935,936,939,940,945,946,947,948,949,950,952,953,954,955,956,957,958,959,960,961,962,963,967,1205,1207,1215,1217,1225,1226,1233,1243,1244,1248,1253,1255],dtype_bit:[512,940],dtype_from_str:[47,512,940],dtype_in:[512,519,520,521,940,947,952,953,954,957,958,959,967],dtype_to_str:[512,940],due:42,duplic:[44,45,47],dure:[44,45,47,923,924,1063,1115,1118,1120,1121,1125,1154,1160,1185,1186,1187,1188,1290,1291,1294,1295,1296,1298],dynam:[47,512,516,923,924],each:[41,42,43,44,45,46,47,54,968,977,978,987,988,989,990,991,992,993,999,1011,1012,1018,1019,1020,1021,1022,1023,1027,1028,1029,1030,1031,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1059,1060,1063,1064,1118,1121,1123,1125,1126,1127,1134,1137,1141,1142,1143,1144,1145,1146,1147,1148,1149,1154,1155,1156,1160,1162,1166,1175,1176,1180,1181,1183,1184,1189,1193,1205,1206,1213,1230,1236,1237,1248,1249,1263,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],easi:42,easili:[42,1260],ecosystem:1263,edg:[1175,1176,1184,1205,1210],effect:[42,1118,1127],effective_grad:[1118,1127],effort:42,eigenvalu:[1154,1158],eigvalsh:1154,einop:[42,44,45,1063,1078,1079,1080],einops_rearrang:[44,45,1063],einops_reduc:[44,45,1063],einops_repeat:[44,45,1063],einstein:[44,45,1248,1249],einsum:[44,45,1248],either:[44,45,47,1018,1040,1045,1047,1048,1057,1063,1077,1097,1154,1160,1185,1186,1187,1188,1205,1222,1224,1248,1253,1255,1278,1289,1290,1291],electron:42,element:[44,45,47,915,916,917,918,919,920,921,922,926,931,932,937,938,940,945,968,989,993,999,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1066,1067,1070,1071,1074,1075,1082,1114,1141,1149,1154,1160,1164,1175,1178,1180,1181,1205,1206,1207,1208,1210,1213,1214,1217,1218,1221,1223,1232,1248,1249,1250,1251,1252,1253,1257,1258,1259,1278,1286],elementwis:[44,45,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062],elementwise_affin:[1292,1293],elemtn:[1236,1237],els:[47,1063,1068,1077,1081],elsewher:[926,931,1205,1232],email:42,emphas:1260,empti:[44,45,401,926,1257,1258,1259],empty_lik:[401,926],enabl:[42,44,45,46,47,54,1260],encapsul:[940,956],encod:[42,1063,1083,1134,1136],encourag:[42,1263],end:[54,1205,1207,1260,1263],engag:[42,47],ensur:47,entir:[42,43,44,45,968,1012,1248,1250,1253,1255,1256,1257,1258,1259,1260,1278,1287],entri:[44,45,926,933,934,1175,1181,1205,1229],entropi:[1171,1172,1173,1174],environ:1260,eps:[415,940,955],epsilon:[1118,1120,1121,1125,1171,1172,1173,1174,1201,1202,1292,1293,1294,1295,1296],equal:[44,45,926,931,932,1018,1039,1040,1061,1063,1064,1066,1067,1154,1157,1175,1176,1181,1184,1205,1236,1240,1246,1247],equality_matrix:[1063,1064],equat:[44,45,1248,1249],equival:[1018,1050,1051,1061,1154,1169,1205,1207],erf:1018,erron:43,error:[43,44,45,47,915,916,968,1018,1034,1205,1229,1248,1250,1290,1291,1294,1298],especi:41,essenti:[41,42,47],etc:[43,44,45,47,926,927,933,934,968,1013,1063,1084,1085,1101,1102,1205,1207,1217,1225,1226,1233,1236,1237,1238,1239,1240,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],euclidean:[1154,1169],euler:925,evalu:[44,45,1018,1036,1045,1046,1047,1053,1060,1189,1190,1197,1205,1222,1257,1258,1259],even:[42,43,47],evenli:[44,45,926,933,934,1175,1181,1205,1207],everi:[47,926,932,1063,1064],everyon:43,everyth:43,evolv:41,exact:[44,45],exactli:[41,43,1263],exampl:[43,47,923,924,1205,1210,1230,1260],example_input:[512,516,923,924],exce:[1205,1223],except:[44,45,48,51,926,931,940,944,1063,1068,1077,1115,1205,1207,1211,1257,1258,1259],exchang:42,excit:[42,1260],exclud:[65,67,1205,1207,1236,1240],exclus:[44,45,463,464,470,1063,1074,1096,1118,1124,1236,1238],execut:[47,1063,1115],execute_with_gradi:[1118,1260],exist:[41,42,44,45,1063,1077,1260,1294,1298],exp:[1018,1036,1048],expand:[44,45,1063,1083,1175,1177],expand_dim:[44,45,1175],expect:[43,1063,1065],explain:[47,1263],explicitli:[47,1278,1287,1289,1290,1291],explod:[40,41],explos:[40,42],expm1:1018,expon:[47,1063,1109],exponenti:[47,1018,1034,1035,1048],expos:[41,926,927,1063,1072],express:[1018,1020,1031,1057,1205,1222],exsit:[44,45],extend:47,extens:47,extra:[44,45,46,1118,1122],eye:[401,926,1154,1159],eyebrow:42,fabian:1260,fabio:1260,factor:[42,968,977,1010,1011,1012,1118,1120,1121,1125,1126,1141,1142,1143,1144,1145,1146,1147,1148,1154,1155,1166,1278,1279,1280,1281,1282,1283,1284,1285,1294,1295,1296,1297],fail:47,falck:1260,fall:[54,1290,1291,1294,1298],fallback_to_non_compil:[1290,1291,1294,1298],fals:[15,18,19,44,45,46,65,72,73,74,75,76,421,463,464,470,473,512,518,940,948,949,950,951,968,986,999,1007,1012,1017,1018,1039,1040,1041,1050,1051,1063,1064,1074,1077,1081,1083,1096,1097,1116,1118,1121,1122,1123,1124,1125,1126,1127,1154,1155,1161,1169,1175,1181,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1205,1216,1228,1232,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1267,1268,1290,1291,1294,1295,1296,1297,1298,1299],fan_in:1269,fan_mod:1269,fan_out:1269,faq:[41,42,43],far:[1189,1190,1197],fastai:43,faster:[923,924],favourit:1260,fdlibm:[1018,1036],feasibl:42,feat_dim:[1141,1152,1153],fed:[968,1012],feed:[968,1012],few:[43,47,64,1263],field:[1154,1164],file:[44,45,47,1063,1106,1111,1290,1291],filepath:[44,45],fill:[44,45,926,929,932,935,936,939,1205,1215,1226,1236,1238],fill_valu:[401,407,512,522,926,932,1205,1215],filter:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],filter_s:[1278,1279,1280],filter_shap:[1278,1281,1282,1283,1284,1285],find:[41,44,45,47],find_sub_contain:[44,45],find_sub_structur:[44,45],finfo:[102,264,415,416,568,734,940],finish:1260,finit:[1018,1039],first:[41,42,44,45,47,923,924,926,933,934,968,999,1018,1027,1029,1038,1042,1043,1048,1049,1051,1052,1054,1063,1066,1118,1122,1154,1157,1160,1164,1166,1175,1182,1185,1186,1187,1188,1189,1190,1197,1205,1211,1212,1213,1230,1236,1242,1243,1244,1278,1289,1290,1291,1294,1298],firstlayersiren:1269,fist:[968,1012],fit:[44,45,397,421,463,512,1134,1139,1175,1180],fix:47,flag:[44,45,47,1118,1124],flat:[44,45,47,1063,1101,1175,1180],flat_list:[44,45],flatten:[44,45,1063,1083,1154,1169,1175,1180,1243,1244,1248,1251,1254],flatten_key_chain:[44,45,1290,1291],flax:43,flexibl:1260,flip:[44,45,1018,1028,1175],float32:[47,512,523,926,927,940,945,953,954,1205,1207,1217,1226,1233],float_dtyp:[940,949,962],float_img_to_uint8_img:1134,floor:[1018,1063,1082,1205],floormod:[463,1063],folder:[47,1260],follow:[41,42,44,45,47,54,940,956,968,1012,1063,1092,1093,1094,1108,1109,1118,1121,1123,1125,1126,1127,1141,1152,1153,1154,1164,1169,1189,1193,1198,1260,1278,1288,1294,1298],followng:[940,955],fomaml_step:1185,forget:[1118,1120,1121,1125,1294,1295,1296],forgiven:42,fork:[1205,1224],forkserv:[1205,1224],form:[15,16,17,18,19,42,44,45,926,927,928,937,938,1118,1121,1123,1125,1126,1127,1141,1154,1155,1156,1157,1158,1162,1164,1167,1189,1191,1198],format:[44,45,47,926,927,940,945,947,951,968,986,1205,1207,1217,1226,1233,1248,1249,1260],format_fn:[44,45],format_key_chain:[44,45],forward:[1290,1291,1294,1298],found:[44,45,46],foundat:42,fourier:[1063,1083],fourier_encod:1063,frame:42,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,227,230,232,233,234,235,236,237,238,240,241,244,253,254,255,256,257,258,259,260,261,262,264,265,266,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,375,376,377,378,380,383,385,386,387,388,389,390,391,392,394,395,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,422,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,468,469,470,471,472,473,475,476,477,478,480,481,482,484,485,486,487,488,489,490,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,533,535,538,540,541,542,543,544,545,546,548,549,554,555,556,557,558,559,560,561,562,563,564,565,566,568,569,570,571,572,574,575,576,577,578,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,643,644,645,646,647,648,649,650,651,652,653,654,655,656,658,659,660,661,662,663,664,665,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,686,687,688,689,691,694,696,697,698,699,700,701,702,704,705,708,709,710,711,712,713,714,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,743,744,745,746,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,818,819,820,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,899,902,904,905,906,907,908,909,910,912,913,916,917,918,919,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1236,1237,1238,1239,1240,1241,1242,1244,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1263,1265,1266,1267,1268,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1291,1293,1294,1295,1296,1297,1298,1299,1301,1302,1304],framework_handl:[65,67,68,69,70,71,72,73,74,75,76,77],framewrk:[1205,1224],frantic:43,free:47,freed:47,freedom:[1248,1256],freeli:47,frequenc:[1063,1083],from:[41,42,43,44,45,46,47,926,928,930,932,936,940,947,960,968,977,978,1012,1018,1059,1063,1077,1084,1085,1112,1118,1121,1125,1134,1138,1141,1149,1152,1154,1157,1175,1178,1185,1186,1187,1188,1189,1191,1198,1205,1217,1227,1229,1232,1236,1237,1238,1239,1240,1248,1252,1253,1255,1257,1258,1259,1260,1263,1267,1268,1278,1286,1289,1294,1298],from_cal:[1290,1291],from_disk_as_hdf5:[44,45],from_disk_as_json:[44,45],from_disk_as_pickl:[44,45],from_flat_list:[44,45],from_numpi:[44,45],front:[41,54,1263],frustrat:47,fulfil:54,full:[42,43,47,512,940,955,1154,1164,1205,1260],full_lik:[401,926],full_matric:[1154,1166],fulli:[43,47,1260,1278,1288,1289],func:[44,45,512,516,923,924,968,1012,1063,1069,1118,1122],fundament:41,funni:42,further:[42,43,47,54],futur:[41,43],gain:1269,gamma:[1201,1202],gather:[44,45,463,1063,1085],gather_nd:[44,45,463,1063],gauss:[1018,1034],gaussian:[915,916],geglu:1264,gelu:[397,915,1264],gener:[23,44,45,47,421,464,465,466,467,468,469,470,471,472,473,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,923,926,933,934,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1124,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1236,1238,1240,1241,1294,1298],geometr:[1063,1083],get:[43,44,45,47,940,951,952,955,956,968,977,978,986,1001,1002,1007,1011,1014,1017,1063,1065,1086,1087,1088,1100,1260,1263,1278,1287],get_all_arrays_in_memori:1063,get_all_arrays_on_dev:968,get_framework:65,get_initial_st:[1278,1287],get_min_bas:1063,get_min_denomin:1063,get_mod_kei:[1290,1291],get_num_dim:[512,1205],get_referrers_recurs:1063,gist:1260,github:41,give:[43,47,1205,1227],given:[42,43,44,45,47,926,927,929,933,934,940,945,968,1001,1007,1010,1011,1012,1014,1017,1063,1074,1075,1085,1101,1102,1116,1118,1120,1121,1123,1125,1126,1127,1141,1142,1143,1144,1145,1146,1147,1148,1154,1159,1170,1175,1178,1180,1181,1183,1189,1194,1195,1205,1207,1210,1226,1231,1233,1236,1239,1240,1242,1248,1251,1254,1267,1268],global:[44,45,46,940,948,949,950,968,977,978,985,1010,1011,1012,1063,1076,1087,1088,1100,1103,1104,1105,1108,1109,1118,1133,1201,1202,1292,1293],global_framework:[65,69],global_norm:[44,45],glorotuniform:[1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288],gmail:42,goal:42,gone:42,good:47,googl:[42,1260],got:[47,1260],gpu0:47,gpu2:47,gpu:[968,1003,1006],gpu_is_avail:[421,968],grad:[1260,1294,1298],gradient:[25,44,45,968,1012,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1137,1185,1186,1187,1188,1294,1295,1296,1297,1298,1299],gradient_descent_upd:[1118,1185,1186,1187,1188],gradient_imag:1134,gradienttrack:[1118,1119],graph:[43,1118,1121,1123,1125,1126,1127,1290,1291],great:[42,43],greater:[44,45,1018,1020,1037,1205,1207,1214,1229,1236,1240],greater_equ:1018,greatest:[1018,1037],green:[44,45,46,1303,1304],grid:[1205,1222],ground:41,group:[1134,1139],grown:41,growth:42,guarante:43,guid:47,gym:1260,h5_file_s:[44,45],h5_obj_or_filepath:[44,45],h5py:[44,45],haiku:43,half:[1205,1207,1236,1240],hand:1260,handl:[44,45,46,47,923,924,968,984,986,995,996,1007,1014,1017,1118,1121,1123,1125,1126,1127,1294,1295,1296,1297,1298,1299],handler:54,happen:[43,47],happi:43,hardwar:42,has:[41,42,43,44,45,47,1018,1019,1024,1154,1160,1165,1205,1230,1248,1253,1255],has_kei:[44,45],has_key_chain:[44,45],has_nan:[44,45,1063],hasn:43,have:[40,41,42,43,44,45,47,926,929,930,932,935,936,937,938,939,940,944,955,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1063,1078,1079,1080,1118,1124,1132,1154,1155,1156,1157,1158,1160,1162,1164,1166,1167,1169,1175,1178,1179,1205,1211,1212,1213,1215,1230,1243,1244,1246,1247,1248,1250,1253,1255,1256,1257,1258,1259,1260],haven:47,hdf5:[44,45,1290,1291],head:[1141,1152,1278,1289],head_dim:[1278,1289],height:[1134,1139],height_cutoff:[44,45],help:[47,64,65,415,421,422,940,968,980,981,982,983,1118,1260,1269,1271,1272,1274,1275,1277],here:[47,1260],hidden:[1141,1151,1278,1287],hierarch:[1063,1072],hierarchi:[44,45],high:[43,44,45,1236,1238,1240],higher:[1118,1121,1123,1125,1126,1127,1154,1166],highest:[1236,1238],highli:1260,hinder:41,hint:47,hold:[926,927,940,945,1063,1101,1102,1205,1207],honk:43,hope:42,hopefulli:[41,42,43],host:[42,1260],hot:[1205,1225],hour:[43,47],how:[41,43,1260,1263,1278,1289,1290,1291],howev:[42,47],html:42,huge:[40,42],hyperbol:[915,922,1018,1021,1023,1026,1032,1058,1062],hypothet:47,icon:1260,idea:[43,1260],ident:[41,43,44,45,47,512,1205],identical_array_shap:[44,45],identical_config:[44,45],identical_structur:[44,45],ieee:[42,925,940,955,1018,1036,1059],if_exist:[44,45],ignit:43,ignor:[44,45,1294,1298],ignore_key_error:[44,45],ignore_miss:[1294,1298],ignore_non:[44,45],iii:47,iinfo:[415,940],imag:[27,54,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1205,1219],image_dim:[1134,1138],immedi:1260,implement:[47,940,960,1018,1019,1020,1021,1023,1031,1036,1045,1046,1047,1057,1058,1246,1247,1248,1250,1260],improv:43,in_featur:[1141,1150],inadvert:47,includ:[42,44,45,47,926,928,1063,1090,1108,1109,1117,1154,1169,1189,1190,1205,1207,1236,1240,1248,1250,1253,1257,1258,1259,1278,1288,1289,1292,1293],include_deriv:[1189,1191,1198],include_empti:[44,45],include_inf:[44,45,1063,1090,1117],include_nest:[1189,1190],include_self:[44,45],inclus:[47,1236,1238],incom:[1141,1150],incompat:[940,944],increas:[41,968,990,994,1000,1175,1176,1177,1184,1189,1198],increment:[1063,1093],inde:1260,indent:[44,45,46],independ:[1236,1237],index:[44,45,512,926,931,1063,1084,1085,1189,1192,1194,1195,1196,1199,1205,1208,1222,1229,1230,1243,1244,1246,1247],index_nest:1189,indic:[44,45,463,465,466,471,472,512,526,915,920,1063,1084,1085,1101,1102,1141,1142,1143,1144,1145,1146,1147,1148,1154,1169,1189,1190,1192,1194,1195,1196,1197,1199,1200,1201,1202,1205,1208,1218,1225,1236,1237,1243,1244,1246,1247,1278,1279,1280,1281,1282,1283,1284,1285,1290,1291],indices_wher:[512,1205],indistinguish:[1018,1059],industri:42,inevit:43,inf:[44,45,1018,1024,1063,1090,1117,1154,1169],infer:[923,924,926,928,930,932,936,1134,1138,1205,1216,1217,1227,1228,1248,1252],infin:[1018,1019,1021,1023,1030,1031,1036,1037,1039,1040,1045,1047,1048,1057,1058,1059,1154,1169,1248,1250,1257,1258,1259],infinit:[1018,1059],inform:[940,955,956,1118,1129],init_c:[1141,1151],init_h:[1141,1151],init_on_first_step:[1294,1298],initi:[42,44,45,46,47,65,415,421,422,940,968,980,981,982,983,1118,1141,1151,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1294,1298],initialz:[1290,1291],inner:[1154,1160,1185,1186,1187,1188],inner_batch_fn:[1185,1186,1187],inner_batch_shap:[1141,1150],inner_cost_fn:[1185,1186,1187],inner_grad_step:[1185,1186,1187,1188],inner_learning_r:[1185,1186,1187,1188],inner_optimization_step:[1185,1186,1187,1188],inner_v:[1185,1186,1187],innermost:[926,937,938,1154,1155,1156,1157,1158,1162,1164,1167],innov:42,inplac:[44,45,1063,1068,1091,1095,1110,1118,1121,1123,1125,1126,1127,1267,1268,1294,1295,1296,1297,1298,1299],inplace_arrays_support:[463,1063],inplace_decr:[463,1063],inplace_incr:[463,1063],inplace_oper:[0,11,12],inplace_upd:[44,45,463,1063,1267,1268],inplace_variables_support:[463,1063],input:[15,18,19,44,45,46,47,915,916,917,918,919,920,921,922,923,924,926,928,930,932,936,937,938,940,945,946,948,949,950,951,952,958,959,960,968,977,978,985,986,987,990,991,994,1000,1012,1013,1018,1019,1020,1021,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1068,1070,1071,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1090,1092,1093,1094,1096,1107,1110,1112,1113,1114,1116,1117,1118,1122,1124,1129,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1164,1166,1167,1169,1175,1176,1177,1178,1179,1180,1182,1183,1184,1185,1186,1187,1188,1201,1202,1205,1206,1208,1209,1210,1211,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1228,1229,1230,1231,1236,1237,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1292,1293],input_ax:[968,1012],input_channel:[1278,1279,1280,1281,1282,1283,1284,1287,1288],insert:[1175,1177,1243,1244],insid:47,instal:1260,instanc:[15,16,17,18,19,44,45,47,968,977,1267,1268,1300,1301],instant:42,instead:[44,45,47,1248,1251,1254],int16:[1248,1253,1255],int32:[47,1248,1253,1255],int64:[926,927,940,945,1205,1207,1217,1226,1233,1248,1253,1255],int_dtyp:[940,950,963],integ:[44,45,940,956,959,960,1018,1019,1027,1028,1029,1030,1037,1052,1056,1154,1169,1175,1181,1205,1207,1214,1236,1238,1241,1248,1250,1253,1255,1257,1258,1259],integr:1260,intel:42,intend:47,inter:1260,interact:1260,interchang:[44,45,1175,1182],interest:1260,interfac:[42,926,927],intermedi:[44,45],intern:[44,45,968,1118,1132,1189,1190,1197,1198,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1300,1301],interoper:42,interpol:[1205,1219],interpret:[926,928],interv:[44,45,926,933,934,1018,1022,1205,1207,1210,1236,1240,1257,1258,1259],introduc:41,inv:1154,invalid:[1257,1258,1259],invalid_dtyp:940,invent:41,invers:[1018,1020,1021,1022,1023,1024,1026,1154,1159,1163],invert:[1018,1028,1154,1159,1163],investig:47,invoc:[923,924],involv:[42,940,960,1263],irrespect:1260,is_arrai:[463,1063],is_float_dtyp:940,is_int_dtyp:940,is_vari:1118,isfinit:1018,isinf:1018,isnan:1018,issu:43,issue_numb:47,item:[15,19,44,45,940,948,968,977,978,980,987,989,991,993,999,1063,1072,1089,1108,1109,1189,1193,1194,1195,1198,1199,1200,1260,1290,1291],iter:[15,16,17,18,19,43,44,45,46,923,924,968,971,972,974,975,977,978,981,982,989,991,992,993,994,999,1012,1063,1064,1102,1175,1176,1180,1181,1183,1184,1189,1190,1191,1193,1197,1198,1205,1209,1211,1217,1222,1226,1227,1228,1230,1231],iterbal:[968,989,993,999],its:[968,1012,1154,1160,1175,1182,1205,1217,1227,1231,1260],itself:[41,47,1189,1198],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,50,51,52,53,54,64,65,67,68,69,70,71,72,73,74,75,76,77,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,463,464,465,466,467,468,469,470,471,472,473,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,970,971,972,973,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1263,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1304],ivy_backend:[44,45],ivy_test:47,ivyh:[44,45,46],jame:1260,jax:[42,43,47,1118,1124,1260],jax_concat:1260,jnp:1260,join:[44,45,1205,1211,1230],journal:1260,journei:1263,json:[44,45],json_filepath:[44,45],jsonabl:[44,45],jupyt:42,just:[42,43,47,1260,1278,1287],kaimingnorm:[1269,1273],keep:[44,45,968,1013,1063,1116,1260],keep_inner_v:[1185,1186,1187],keep_non:[44,45],keep_orig:[44,45],keep_outer_v:[1185,1186,1187],keepdim:[44,45,463,473,1063,1116,1154,1161,1169,1243,1244,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],kei:[15,16,17,44,45,46,47,968,980,1063,1072,1141,1152,1153,1185,1186,1187,1189,1192,1196,1260,1267,1268,1278,1289,1294,1298],kept:[44,45,46,1185,1186,1187],kera:43,kernel:[1141,1151],key1:[44,45],key2:[44,45],key3:[44,45],key_chain:[44,45],key_chains_contain:[44,45],key_length_limit:[44,45,46],key_slic:[44,45],keychain:[44,45],keychain_map:[44,45],keyword:[15,16,17,44,45,46,968,977,978,990,994,1000,1063,1065,1078,1079,1080,1097,1189,1193,1290,1291],keyword_color_dict:[44,45,46],kind:[940,955,956,1248,1253,1255],know:43,kwarg:[15,16,17,44,45,46,65,69,968,977,990,994,1000,1063,1097,1267,1268,1290,1291],kwarg_stateful_idx:[1290,1291],label:[47,1171,1172,1173,1174],lamb:[1118,1125,1294],lamb_upd:1118,lambda:[1294,1297,1299],languag:[41,43],lar:[1118,1125,1126,1294],larger:[940,955,1205,1210],largest:[44,45,940,955,956,1205,1214],lars_upd:1118,last:[43,44,45,915,920,1141,1151,1154,1157,1161,1166,1175,1178,1181,1205,1207,1212,1219,1230,1246,1247,1257,1258,1259,1278,1288],later:[44,45,1063,1069],latest:[1278,1287],layer:[41,1118,1121,1123,1125,1127,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1201,1202,1260,1269,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],layer_norm:1201,layernorm:1292,layerwis:[1118,1126,1294,1297],lead:[42,43,44,45,46,1154,1164],leading_shap:[44,45],leaf:[15,18,19,44,45,1189,1190,1197],leaf_keys_onli:[44,45],leafwis:[44,45],leaki:[915,916,917],leaky_relu:[397,915],learn:[41,42,1118,1121,1123,1125,1126,1127,1185,1186,1187,1188,1236,1242,1248,1252,1260,1294,1295,1296,1297,1298,1299],learnabl:[1201,1202,1292,1293],least:[47,1154,1160],leav:[15,18,19,44,45,1189,1190,1191,1197,1198],left:[44,45,47,1154,1161,1243,1244,1248,1251,1254,1260],leftmost:[44,45],length:[44,45,46,1154,1167,1205,1207,1227,1229,1231],lenton2021ivi:1260,lenton:1260,less:[42,44,45,47,1018,1020,1021,1030,1045,1047,1059,1154,1169,1236,1240],less_equ:1018,let:43,level:[43,1260],librari:[41,42,43,64,1018,1036,1050,1051,1248,1250,1260],lies:41,lightn:43,lightweight:1260,like:[42,47,1118,1124,1236,1240,1260],likewis:47,limit:[44,45,46,47,940,955,956,1063,1070,1071,1205,1210],linalg:29,line:[43,47,64,1263],linear0:1260,linear1:1260,linear:[915,916,917,918,1063,1083,1141,1149,1205,1219,1260,1278,1279,1280,1281,1282,1283,1284,1285],linear_algebra:[1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170],linear_resampl:[512,1205],linearli:[1063,1083],link:[47,1260],linspac:[401,926,1205,1207],list:[15,18,19,44,45,401,404,410,414,926,927,928,929,935,939,968,977,978,987,988,990,991,992,994,997,998,1012,1063,1067,1107,1112,1116,1141,1142,1143,1144,1145,1146,1147,1148,1175,1177,1178,1181,1185,1186,1187,1189,1190,1191,1193,1197,1198,1205,1207,1222,1257,1258,1259,1260,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285],list_join:[44,45,46],list_stack:[44,45],liter:[1154,1169],littl:41,live:[42,43],load:[44,45],loader:1260,local:47,local_set:[1063,1089],locat:[47,1236,1237],log10:1018,log1p:1018,log2:1018,log:[926,934,1018,1046,1048,1154,1165,1171,1172,1173,1174],logaddexp:1018,logarithm:[1018,1044,1045,1046,1047,1048,1154,1165],logdet:[1154,1165],logic:[31,1018,1049,1050,1051,1257,1258,1259],logical_and:1018,logical_not:1018,logical_or:1018,logical_xor:1018,logit:[1171,1174],logspac:[401,926],look:[41,47],loop:[1185,1186,1187,1188],loss:[1172,1173,1174,1260],loss_fn:1260,lot:[42,43],love:43,low:[44,45,1236,1238,1240],lower:[44,45,47,926,931,937,1154,1155,1205,1221,1236,1240],lower_depth:[1290,1291],lowest:[15,18,19,44,45,1189,1198,1236,1238],lstm:[1141,1151,1278],lstm_updat:[47,1141],lucid:43,machin:[42,940,955,956,1236,1242,1248,1252,1260],made:[42,47],magnitud:[1018,1019,1154,1167],mai:[43,1018,1038,1043,1050,1051,1063,1077,1205,1207,1213,1246,1247,1248,1250,1260],main:[926,931,937,938,1154,1157,1205,1217,1260],mainli:1260,maintain:[41,47,1246,1247],major:42,make:[42,43,47,968,1260],maml:[1185,1186,1187],maml_step:1185,manag:[43,968],mandat:42,manhattan:[1154,1169],mani:[41,42,43,44,45,47,1175,1181,1260],manipul:[41,1176,1177,1178,1179,1180,1181,1182,1183,1184],manner:[15,18,19,41,44,45,47,1189,1198],manual:[1189,1190,1197],map:[44,45,46,968,977,1189,1194,1195,1198,1278,1289],map_cont:[44,45],map_nest_at_index:1189,map_nest_at_indic:1189,map_sequ:[44,45],mapper:[968,977,978],mark:47,mask:[1141,1152,1153],master:47,match:[44,45,1063,1097],match_kwarg:1063,math:33,mathbb:[1154,1170],mathbf:[1154,1170],mathemat:[925,1018,1036,1154,1169],matmul:[47,1154,1205],matric:[926,937,938,1141,1150,1154,1155,1156,1157,1158,1162,1164,1167],matrix:[44,45,926,937,938,1063,1064,1070,1141,1150,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1167,1170,1205,1220,1278,1288],matrix_norm:[44,45,1154],matrix_transpos:1154,matter:[41,1260],matur:42,max:[44,45,415,940,955,956,1063,1070,1071,1079,1101,1102,1205,1221,1248,1294,1296],max_batch_s:[44,45],max_chunk_s:[968,1012],max_depth:[44,45,968,972,975,982,990,994,1000,1063,1089,1189,1198],max_dev_dim_step_ratio:968,max_freq:[1063,1083],max_length:[44,45],max_norm:[44,45,1063,1070,1071],max_split_factor_step_s:968,max_trust_ratio:[1118,1125,1294,1296],maxim:1260,maximis:1260,maximum:[44,45,46,968,990,994,1000,1012,1063,1070,1071,1083,1118,1125,1189,1198,1205,1210,1243,1244,1248,1250],mayb:[15,18,19],mean:[44,45,968,997,998,999,1000,1012,1063,1079,1185,1186,1187,1188,1189,1193,1236,1239,1248,1254,1269],measur:[1141,1152,1278,1289],mechan:[64,1260],member:[42,47],memori:[64,968,984,1007,1012,1014,1017,1141,1151,1260],mention:[42,47],merg:47,merge_with_upstream:47,meshgrid:[512,1205],messag:[42,1303,1304],meta:[35,1186,1187,1188],method:[44,45,46,47,926,927,1063,1072,1101,1102,1118,1125,1126,1189,1190,1197,1198,1205,1222,1260,1278,1289,1290,1291],microsoft:42,might:[1063,1077],min:[44,45,415,940,955,956,1063,1079,1101,1102,1108,1154,1164,1167,1169,1205,1223,1248],min_bas:[1063,1109],min_denomin:[1063,1108],min_dev_dim_s:968,min_sf_tune_step:968,min_unit_dev_tune_step:968,mind:1260,mini:[1201,1202,1292,1293],minimum:[44,45,926,927,940,945,968,1018,1019,1063,1087,1088,1103,1104,1108,1109,1205,1207,1208,1210,1248,1250,1252],miss:[1294,1298],mission:42,mix:[940,960],ml_framework:[1205,1207],mod:[1063,1082],mod_depth:[1290,1291],mod_height:[1290,1291],mod_with_top_mod_key_chain:[1290,1291],mode:[44,45,923,924,968,997,998,999,1000,1012,1154,1164,1166],model:1260,modern:[41,42],modin:42,modul:[43,44,45,46,65,1205,1224,1260,1264,1265,1266,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1292,1293,1300,1301],moment:[1118,1120,1121,1125,1294,1295,1296],momentum:42,month:41,more:[47,1018,1036,1154,1160,1175,1178,1205,1230,1260],most:[42,44,45,47,1260],motherboard:42,motiv:42,move:[44,45,47,968,1013],much:[42,47,1260],multi:[54,1141,1152,1205,1224,1263,1278,1289],multi_head_attent:1141,multi_index_nest:1189,multi_map:[44,45],multidev:[968,979,980,981,1000],multidevcontain:[44,45],multidevic:[968,977],multidevit:[968,971,974,977,978,982],multidevitem:[968,970,973],multidevnest:[968,972,975],multiheadattent:1278,multinomi:1236,multipl:[43,44,45,1063,1097,1154,1159,1175,1181,1201,1202,1243,1244,1248,1250,1251,1253,1254,1255,1257,1258,1259,1278,1288],multipli:[44,45,1063,1074],multiprocess:[44,45,46,512,968,977,1205],must:[41,43,44,45,46,47,926,929,930,931,932,935,936,937,938,939,940,944,968,997,998,999,1000,1012,1018,1019,1020,1021,1023,1025,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1042,1043,1045,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1063,1072,1102,1154,1155,1156,1157,1158,1160,1162,1164,1169,1175,1178,1179,1205,1207,1211,1212,1213,1221,1223,1230,1236,1241,1243,1244,1246,1247,1248,1250,1252,1253,1255,1256,1257,1258,1259,1294,1298],mutabl:[1189,1191,1198],mutlidevic:[968,977],mw_tm1:[1118,1121,1125],mx_concat:1260,mxn:[926,937,938,1154,1157,1162,1164,1167],mxnet:[42,47,1260],my_func:47,mymodel:1260,n_col:[401,406,926,931],n_row:[401,406,926,931],name:[47,923,924,1154,1164],name_of_your_branch:47,name_of_your_pr_branch:47,namedtupl:[1154,1164],namespac:47,nan:[44,45,47,925,1018,1019,1020,1021,1023,1030,1031,1036,1037,1039,1041,1045,1047,1048,1057,1058,1059,1063,1090,1117,1248,1250,1257,1258,1259],nativ:[15,17,18,19,44,45,47,940,946,953,954,968,984,986,995,996,1007,1014,1017,1260,1267,1268],native_modul:[1267,1268],native_module_class:[1267,1268],nativearrai:[15,18,19,47,926,927,928,930,932,933,934,936,937,938,940,944,945,951,955,956,958,959,960,968,986,1012,1013,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1070,1071,1073,1074,1075,1078,1079,1080,1082,1083,1084,1085,1090,1101,1102,1112,1113,1114,1116,1117,1154,1155,1158,1160,1162,1165,1166,1167,1169,1170,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1191,1198,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1233,1243,1244,1246,1247,1248,1250,1252,1253,1256,1257,1258,1259],natur:[42,1018,1044,1046,1154,1165],ncdhw:[1141,1146,1147,1278,1283,1284],nchw:[1141,1144,1145,1148,1278,1281,1282,1285],ncw:[1141,1142,1143,1278,1279,1280],ndarrai:[47,401,404,405,406,407,410,411,412,413,414,415,417,418,419,420,926,928,1063,1113],ndhwc:[1141,1146,1147,1278,1283,1284],ndim:[1154,1164],nearest:[1018,1056],necess:42,need:[43,47,1063,1070,1071,1141,1143,1145,1147,1260,1278,1280,1282,1284],neg:[44,45,915,917,926,931,1018,1039,1040,1154,1169,1175,1178,1257,1258,1259],negative_slop:1269,nest:[15,16,17,18,19,44,45,46,926,927,968,990,994,1000,1063,1112,1185,1186,1187,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1290,1291,1294,1295,1296,1297,1298,1299],nested_indices_wher:1189,nested_map:1189,net:[42,43],network:[42,1141,1150,1260,1264,1278,1290,1291],neural:[1141,1260,1264,1278],never:47,new_std:[1201,1202,1292,1293],newest:41,newli:[47,923,924,1063,1069,1205,1209],newlin:[44,45,46],newshap:[1205,1209,1227],next:[43,940,955,1290,1291,1294,1295,1296,1297,1298,1299],nhwc:[1141,1144,1145,1148,1278,1281,1282,1285],nice:43,node:[42,44,45,1189,1190,1197],noinspect:[47,941,942,943,969,1119],non:[44,45,923,924,940,957,1018,1050,1051,1154,1156,1169,1243,1244,1248,1250,1253,1257,1258,1259,1290,1291,1294,1298],none:[44,45,46,47,65,67,70,401,402,403,404,405,406,407,408,409,410,411,414,421,463,465,466,471,472,512,513,516,522,523,526,527,528,529,923,924,926,927,928,929,930,931,932,933,934,935,936,939,940,948,949,950,955,956,968,977,978,984,985,1010,1011,1012,1013,1063,1076,1077,1081,1084,1085,1089,1091,1092,1093,1094,1095,1101,1102,1103,1104,1108,1109,1115,1118,1121,1123,1125,1126,1127,1133,1134,1138,1141,1143,1145,1147,1150,1151,1152,1153,1154,1161,1169,1175,1177,1178,1180,1181,1185,1186,1187,1188,1189,1190,1193,1197,1198,1201,1202,1205,1207,1215,1217,1224,1225,1226,1229,1231,1233,1236,1237,1238,1239,1240,1243,1244,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1267,1268,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],norm:[44,45,1063,1070,1071,1154,1161,1169,1202,1293,1294,1296],normal:[1201,1202,1236,1239,1292,1293],normalized_idx:[1201,1202],normalized_shap:[1292,1293],not_equ:1018,notat:[44,45,1248,1249],note:[47,940,960,1018,1036,1248,1250],noth:[44,45],now:[43,44,45,47,968,1013,1205,1206,1260,1278,1289,1290,1291],np_concat:1260,np_finfo:415,num:[401,408,409,926,933,934],num_arrai:[44,45],num_arrays_in_memori:1063,num_arrays_on_dev:968,num_band:[1063,1083],num_channel:[1278,1285],num_class:[1236,1237],num_cpu_cor:968,num_gpu:[421,968],num_head:[1141,1152,1278,1289],num_kei:[1141,1152,1153],num_lay:[1278,1287],num_or_size_split:[44,45,1175,1181],num_queri:[1141,1152,1153],num_sampl:[512,525,1134,1135,1205,1219,1236,1237],num_task:[1185,1186,1187,1188],number:[40,41,44,45,46,923,924,925,926,931,933,934,940,952,955,956,958,959,960,968,1004,1005,1006,1018,1030,1037,1063,1083,1098,1114,1117,1141,1152,1154,1165,1166,1175,1176,1177,1179,1180,1181,1183,1184,1185,1186,1187,1188,1205,1207,1210,1216,1217,1219,1221,1236,1237,1241,1248,1250,1251,1253,1254,1255,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289],numer:[47,1018,1019,1030,1033,1036,1037,1039,1040,1041,1042,1050,1051,1053,1054,1063,1087,1088,1103,1104,1108,1109,1154,1160,1243,1244,1248,1250,1253,1255,1269],numhead:[1141,1152],numpi:[41,42,44,45,47,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,463,464,465,466,467,468,469,470,471,472,473,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,1063,1113,1154,1166,1248,1249,1260],nwc:[1141,1142,1143,1278,1279,1280],obj:[44,45],objax:43,object:[44,45,46,65,415,926,927,940,945,955,968,1118,1189,1192,1194,1195,1196,1199,1200,1205,1207,1236,1242,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1290,1291],object_in:[401,402,403,926,927],obsolet:[41,43],obvious:47,occupi:[940,955,956,1063,1101,1102],occur:[1243,1244],occurr:[1243,1244],octoml:42,off:[43,1154,1157,1205,1207],offer:[43,1260],offset:[1154,1157,1168,1201,1202],often:43,old:[44,45,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233],on_init:[1278,1289,1290,1291],onc:[43,47,968,1012,1236,1237,1260],one:[42,43,44,45,47,54,926,931,940,947,968,997,998,999,1000,1012,1063,1097,1101,1102,1154,1160,1161,1164,1169,1175,1178,1205,1217,1225,1229,1230,1243,1244,1248,1249,1251,1254,1260],one_hot:[512,1205],onearrai:[1175,1177],ones:[44,45,401,926,931,936,1205,1217,1225,1260],ones_lik:[401,926],ongo:47,onli:[41,44,45,47,64,968,1018,1050,1051,1154,1160,1164,1175,1178,1189,1190,1191,1197,1243,1244,1294,1295,1296,1297,1298,1299],onlin:[47,1260],onnx:42,onto:[40,41,968,997,998,1013,1189,1193,1198],oom:968,open:[41,42,43,1205,1207,1236,1240,1260],oper:[41,44,45,926,933,934,940,960,1063,1068,1078,1079,1080,1110,1118,1121,1123,1125,1126,1127,1141,1142,1143,1144,1145,1146,1147,1148,1150],operand:[44,45,1018,1020,1021,1023,1030,1031,1036,1037,1045,1047,1048,1057,1058,1059,1248,1249,1250],oppos:[1063,1083],optim:[43,968,1118,1121,1123,1125,1126,1127,1185,1186,1187,1188,1260,1295,1296,1297,1299],optimizer_upd:1118,option:[15,18,19,44,45,46,47,401,404,405,406,407,410,411,414,915,916,920,923,924,926,927,928,929,930,931,932,933,934,935,936,939,940,946,948,949,950,951,957,967,968,977,978,986,990,991,992,993,994,997,998,999,1000,1007,1010,1011,1012,1013,1017,1063,1064,1070,1071,1074,1076,1077,1083,1084,1085,1090,1096,1097,1101,1102,1105,1108,1109,1116,1117,1118,1121,1123,1124,1125,1126,1127,1129,1134,1138,1141,1149,1150,1152,1153,1154,1161,1169,1171,1172,1173,1174,1175,1177,1178,1180,1181,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1201,1202,1205,1207,1208,1211,1215,1216,1217,1219,1222,1224,1225,1226,1228,1229,1230,1231,1233,1236,1237,1243,1244,1248,1250,1251,1252,1253,1254,1256,1257,1258,1259,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],ord:[1154,1166,1169],order:[41,44,45,46,47,1118,1121,1123,1125,1126,1127,1154,1161,1167,1169,1175,1178,1185,1186,1187,1246,1247,1300,1301],organ:[42,47],origin:[43,44,45,46,1154,1161,1205,1227,1233],orthonorm:[1154,1164],other:[42,44,45,47,64,923,924,1018,1036,1063,1064,1118,1122,1205,1207,1217,1236,1240,1260],other_i:47,otherwis:[15,16,17,18,19,44,45,940,948,949,950,968,985,1018,1039,1040,1041,1063,1068,1115,1118,1124,1129,1133,1154,1155,1156,1169,1185,1186,1187,1205,1231,1232,1243,1244,1248,1250,1251,1253,1254,1255,1257,1258,1259],our:[41,42,47,1260],ourselv:42,out:[41,42,43,47,926,932,935,937,938,939,940,944,955,956,960,1018,1019,1020,1021,1023,1024,1027,1028,1029,1030,1031,1036,1037,1039,1040,1041,1042,1045,1046,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1141,1149,1151,1154,1155,1157,1160,1162,1164,1165,1167,1168,1169,1175,1178,1179,1205,1207,1243,1244,1246,1247,1248,1250,1253,1255,1257,1258,1259,1260,1278,1286],out_feat_dim:[1141,1152],out_featur:[1141,1149,1150],out_i:[1018,1039,1040,1041],outdat:41,outer:[1185,1186,1187,1188],outer_batch_fn:[1185,1186,1187],outer_batch_shap:[1141,1150],outer_cost_fn:[1185,1186,1187],outer_v:[1185,1186,1187],outlook:42,output:[44,45,47,926,929,930,931,932,935,936,939,968,977,978,1012,1018,1025,1063,1069,1118,1122,1141,1143,1145,1147,1149,1151,1152,1153,1175,1178,1180,1183,1205,1207,1215,1217,1236,1238,1239,1240,1260,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289],output_ax:[968,1012],output_channel:[1278,1279,1280,1281,1282,1283,1284,1287,1288],output_shap:[1141,1143,1145,1147,1278,1280,1282,1284],outsid:[1205,1210],over:[41,43,44,45,1154,1161,1169,1201,1202,1236,1240,1248,1250,1251,1253,1254,1255,1256,1257,1258,1259,1292,1293],overflow:[1205,1207],overrid:[1205,1225,1233],overriden:[1294,1298],overwrit:[44,45,968,1012],overwrite_at_key_chain:[44,45],own:[42,43,1260],packag:47,pad:[1063,1083,1141,1142,1143,1144,1145,1146,1147,1148,1175,1176,1184,1278,1279,1280,1281,1282,1283,1284,1285],pad_width:[1175,1176,1184],page:[64,1260,1263],paint:41,pair:[1141,1153],panda:42,paper:43,parallel:[968,977,978],parallelis:[968,977,978],param:[44,45,46,463,465,466,926,929,931,936,968,1012,1018,1060,1063,1077,1084,1085,1154,1158,1205,1206,1225,1226,1248,1252,1256,1290,1291],paramet:[15,16,17,18,19,44,45,46,47,915,916,917,918,919,920,921,922,923,924,926,927,929,930,931,932,933,934,936,940,944,945,946,947,951,952,953,954,957,958,959,967,968,977,978,984,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1007,1010,1011,1012,1013,1014,1017,1018,1022,1024,1025,1026,1032,1033,1034,1035,1036,1038,1040,1043,1044,1052,1053,1055,1056,1061,1062,1063,1064,1066,1067,1068,1069,1070,1071,1073,1074,1075,1078,1079,1080,1081,1082,1083,1084,1085,1090,1092,1093,1094,1096,1097,1101,1102,1103,1104,1105,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1129,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1159,1161,1162,1163,1164,1166,1170,1171,1172,1173,1174,1175,1176,1177,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1236,1237,1238,1239,1240,1241,1242,1248,1249,1251,1252,1253,1254,1255,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],parameter:[1236,1239,1240],pardo:1260,pars:[1063,1072],part:[926,937,938,1018,1024,1118,1121,1123,1125,1126,1127,1260,1290,1291],parti:42,partial:[44,45,47,1290,1291],particular:[47,1018,1019],pass:[44,45,46,47,940,946,968,977,1012,1063,1069,1118,1132,1185,1186,1187,1267,1268,1290,1291,1294,1298,1300,1301],pattern:[43,44,45,1063,1078,1079,1080],pcie:42,peopl:47,per:[968,1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],perceiverio:43,percent_used_mem_on_dev:968,percentag:[968,1007],perfectli:43,perform:[43,44,45,47,915,920,926,933,934,968,1063,1074,1078,1079,1080,1092,1093,1094,1118,1121,1123,1125,1126,1127,1134,1135,1141,1149,1151,1185,1186,1187,1188,1189,1194,1195,1205,1208,1219,1248,1251,1254,1257,1258,1259],period:47,permit:47,permut:[1175,1179,1182,1205,1231],permute_dim:1175,perpendicular:[1205,1212],person:[47,1260],pickl:[44,45],pickle_filepath:[44,45],pictur:41,pinv:1154,pip:1260,pipelin:41,place:[44,45,47,926,928,929,930,931,932,935,936,939,968,1013,1063,1092,1093,1094,1175,1177,1205,1215,1294,1295,1296,1297,1298,1299],placehold:[47,1189,1198],pleas:[41,42,43,47],point:[43,47,925,926,929,931,935,939,940,955,958,960,1018,1020,1021,1023,1030,1031,1033,1036,1037,1045,1047,1048,1057,1058,1059,1154,1155,1156,1158,1164,1169,1205,1207,1248,1250,1253,1255],poor:43,pop:42,popul:[44,45,1236,1237],popular:1263,population_s:[1236,1237],port:43,portabl:1260,posit:[15,16,17,926,931,940,955,968,990,994,1000,1018,1019,1039,1040,1063,1083,1154,1155,1175,1177,1205,1206,1207,1236,1241,1257,1258,1259,1267,1268],possibi:[44,45],possibl:[42,47,1063,1097,1112,1134,1139,1248,1250],post:[1201,1202,1263],post_shap:[44,45],potenti:[1018,1036],power:[47,1063,1087,1103,1109,1269],practic:1260,pre:[968,1260],pre_shap:[44,45],preced:42,precis:[940,955,1018,1059],pred:[1171,1172,1173,1174],predict:[1171,1172,1173,1174],prepend:[1154,1160],preprint:1260,present:[41,44,45],preserv:[44,45,46,1118,1129,1175,1178],preserve_typ:[44,45,1118,1129],press:1260,prevent:[47,1118,1120,1121,1125,1294,1295,1296],prevet:47,previou:[1118,1121,1125],previous:[1063,1069],prime:1260,princip:[1018,1020],principl:41,print:[44,45,46,968,1008,1063,1099,1260],print_all_arrays_in_memori:1063,print_all_arrays_on_dev:968,print_ind:[44,45,46],print_limit:[44,45,46],print_line_spac:[44,45,46],prioriti:[44,45,47,65,69],privat:[1294,1298],prob:[1141,1149,1236,1237,1278,1286],probabl:[43,1141,1149,1236,1237,1278,1286],problem:[42,47],process:[42,43,47,968,977,978,1007,1017,1205,1224],process_specif:[968,1007,1017],prod:[44,45,1063,1079,1248],produc:[968,977,978],product:[44,45,1063,1074,1141,1152,1153,1154,1160,1205,1212,1220,1248,1249,1253,1278,1289],profil:[421,968],progress:47,project:[41,42,43,1260],promis:42,promot:[47,940,960,1018,1020,1021,1023,1027,1029,1031,1033,1036,1045,1047,1048,1052,1057,1058,1059,1154,1155,1160,1169],prompt:1260,propag:[1248,1250],properli:47,properti:[44,45,415,968,980,1290,1291,1294,1295,1296,1297,1299],prototyp:41,provid:[41,44,45,47,923,924,940,948,949,950,957,960,967,968,985,1063,1077,1102,1118,1121,1123,1125,1126,1127,1133,1175,1178,1205,1225,1233,1243,1244,1257,1258,1259,1260,1278,1287,1294,1295,1296,1297,1298,1299],prune:[44,45],prune_empti:[44,45],prune_kei:[44,45],prune_key_chain:[44,45],prune_key_from_key_chain:[44,45],prune_keys_from_key_chain:[44,45],prune_unappli:[44,45],pseudo:[1154,1163],publish:43,pull:43,pure:[44,45,1260],purpos:[47,54,1018,1036],pursuit:42,pyshadowingbuiltin:47,pyshadowingnam:[941,942,943,969,1119],python:[40,41,42,44,45,968,1007,1017,1205,1207,1260,1263],pytorch:[42,43,1118,1121,1123,1125,1126,1127,1260,1294,1295,1296,1297,1298,1299],quadrant:[1018,1025],qualiti:47,quansight:42,queri:[44,45,968,1001,1011,1141,1152,1153,1278,1289],query_dim:[1278,1289],query_kei:[44,45],question:[41,42,43],queue:[44,45,46,968,977,978,1063,1100,1105],queue_class:[968,977,978],queue_load_s:[44,45,46],queue_timeout:[44,45,46,1063],quick:1260,quickli:[41,43,47],quo:43,radian:[1018,1020,1022,1025,1031,1057,1061],rai:42,raid:42,rais:[42,44,45,47,940,944,1063,1068,1087,1103,1109,1115,1205,1229,1248,1250,1257,1258,1259,1290,1291,1294,1298],ram:[968,1007,1014,1017],randint:1236,random:[37,44,45,1237,1238,1239,1240,1241,1242],random_crop:1134,random_norm:1236,random_uniform:1236,randomli:[1134,1138,1141,1149,1278,1286],rang:[926,933,934,1018,1025,1205,1207,1248,1253,1255,1260],rank:[1063,1116,1154,1164,1169,1175,1176,1184,1257,1258,1259],rapid:[41,42],rapidli:41,rate:[1118,1121,1123,1125,1126,1127,1185,1186,1187,1188,1278,1289,1294,1295,1296,1297,1298,1299],rather:[42,44,45,47,968,1012,1063,1096,1118,1124,1205,1207],ratio:[968,1118,1125,1134,1139,1294,1296],raw:[44,45],reach:[41,42,43,47,968,990,994,1000,1189,1198],read:[44,45],real:[1018,1024],rearrang:[44,45,1063,1078,1080],reason:42,rebuild:[44,45,46],rebuild_child_contain:[44,45,46],rece:[1185,1187],receiv:[47,968,977,978,1063,1065,1097,1278,1288],receivess:968,receivng:[1185,1188],recent:[41,42],recev:[1185,1186,1187],recommend:[1018,1050,1051,1260],rectifi:[915,917,918],recurr:[1141,1151],recurrent_bia:[1141,1151],recurrent_kernel:[1141,1151],recurs:[44,45,1189,1190,1191,1197,1198],redefin:47,reduc:[44,45,968,1012,1063,1079,1154,1164,1243,1244,1248,1250,1251,1253,1254,1257,1258,1259],reduce_max:[44,45],reduce_mean:1260,reduce_min:[44,45],reduct:[39,44,45,463,471,472,1063,1079,1101,1102,1257,1258,1259],refactor:47,refer:[47,926,931,1018,1036,1046,1118,1120,1121,1154,1170,1257,1258,1259,1278,1288],reflect:47,reflected_oper:[0,13,14],regard:[42,968],regardless:[43,44,45,923,924],rel:[1118,1121,1123,1125,1126,1127,1154,1157,1175,1178,1246,1247],relat:47,releas:43,relev:[42,1294,1295,1296,1297,1298,1299],relu:[397,915,916,917,1260],remain:[47,1189,1193,1205,1227],remaind:[44,45,1063,1082,1175,1181],remov:[44,45,47,1154,1157,1160,1185,1186,1187,1205,1229],remove_key_length_limit:[44,45],remove_print_limit:[44,45],reorder:[44,45,1175,1178],rep:[1175,1183],repeat:[44,45,47,1063,1080,1175,1183],repeated_config_check:968,repeatedli:[1189,1196],repetit:[44,45,1175,1180,1183],replac:[42,44,45,47,1063,1101,1102,1205,1210,1236,1237],repo:[41,42,43,47,1260,1263],repositori:[43,47],repres:[47,940,947,952,1018,1021,1023,1058,1141,1150,1154,1165],represent:[44,45,46,47,925,940,947,953,954,955,956,968,995,996,1018,1019,1027,1029,1052,1063,1107,1112],reptil:[1185,1188],reptile_step:1185,request:43,requir:[47,923,924,926,927,940,945,1018,1059,1205,1207,1267,1268],resampl:[1205,1219],research:41,reserv:47,reshap:[44,45,47,1205],reshape_lik:[44,45],resolv:[1248,1253,1255],respect:[1018,1019,1027,1029,1033,1038,1042,1043,1048,1049,1051,1052,1054,1118,1120,1121,1122,1123,1125,1126,1127,1154,1164,1185,1186,1187,1188,1205,1213],respond:47,respons:47,restor:[44,45],restructur:[44,45],restructure_key_chain:[44,45],result:[44,45,46,47,940,960,968,977,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1057,1058,1059,1060,1063,1101,1102,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1154,1155,1157,1161,1169,1205,1207,1213,1230,1243,1244,1248,1250,1251,1253,1254,1257,1258,1259,1260],result_typ:[415,940],ret_fn:[968,977,978],retain:[1118,1122],retain_grad:[1118,1122],retrn:[1063,1107],return_cont:[44,45],return_dict:[44,45],return_inner_v:[1185,1186,1187,1188],return_sequ:[1278,1287],return_st:[1278,1287],rev:[1063,1077],revers:[44,45,1063,1077,1175,1178,1205,1231],review:47,right:[44,45,47],rigor:41,road:42,robot:[64,1260],ronald:1260,root:[47,1018,1059],round:[41,42,43,1018,1030,1037,1059,1205,1207],row:[926,931,1205,1217,1236,1237],rule:[47,940,960,1018,1033,1154,1155,1205,1207],run:[47,968,977,1118,1120,1121,1125,1185,1186,1187,1188,1278,1289,1290,1291],runner:41,rush:43,safe:[968,977],safety_factor:968,sai:43,said:43,sake:43,same:[15,16,17,41,43,44,45,47,926,930,932,936,937,938,940,944,945,968,977,978,1012,1013,1018,1019,1024,1028,1030,1037,1056,1063,1082,1084,1085,1101,1102,1118,1124,1129,1141,1142,1143,1144,1145,1146,1147,1148,1154,1155,1156,1157,1158,1162,1164,1166,1175,1178,1179,1185,1186,1187,1205,1206,1211,1214,1225,1230,1233,1246,1247,1248,1249,1250,1253,1255,1256,1260,1278,1279,1280,1281,1282,1283,1284,1285],same_arrai:[44,45],sampl:[1134,1135,1141,1149,1205,1219,1236,1237,1239,1240,1260,1278,1286],sata:42,satisfi:[926,927,1154,1159,1170],save:[43,44,45,1063,1106,1111,1134,1136,1290,1291],save_dir:[421,422,968,983],save_weight:[1290,1291],scalabl:41,scalar:[926,932,1063,1114,1117,1154,1169,1205,1210,1225],scale:[968,1010,1011,1118,1126,1141,1149,1152,1153,1201,1202,1278,1286,1289,1294,1297],scaled_dot_product_attent:1141,scatter:[1063,1101,1102,1205,1225],scatter_flat:[463,1063],scatter_nd:[463,1063],scene:[40,41,1118,1121,1123,1125,1126,1127],schemat:1260,scikit:42,scipi:42,screen:[44,45],script:47,search:[15,18,19,41,44,45,1244],second:[43,44,45,968,999,1018,1027,1029,1038,1042,1043,1048,1049,1051,1052,1054,1063,1066,1100,1105,1118,1120,1121,1125,1154,1157,1160,1164,1175,1182,1185,1187,1205,1212,1213,1294,1295,1296],sector:[42,1018,1021,1023],see:[41,47,65,415,421,422,926,933,934,940,944,960,968,980,981,982,983,1018,1027,1029,1033,1036,1042,1048,1051,1052,1054,1118,1154,1169,1205,1207,1248,1250,1253,1257,1258,1259,1260,1269,1271,1272,1274,1275,1277],seed:[44,45,1236],seed_valu:[44,45,1236,1241],seem:1260,seen:[41,42],seen_set:[1063,1089],select:[926,927,1205,1229],self:[44,45,47,65,415,421,422,940,968,980,981,982,983,1118,1260,1269,1271,1272,1274,1275,1277,1294,1298],semant:41,send:42,sentinel:[1248,1250],seper:[47,1063,1083],seq:[44,45,46,1248,1249,1290,1291],sequenc:[15,16,17,44,45,46,47,923,924,926,927,940,945,968,977,978,987,988,989,990,991,992,993,994,997,998,1012,1063,1067,1097,1102,1118,1122,1134,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1154,1161,1175,1176,1180,1181,1183,1184,1189,1200,1201,1202,1205,1207,1209,1211,1217,1222,1226,1227,1230,1231,1236,1238,1240,1248,1251,1254,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1287,1290,1291,1292,1293,1294,1298,1300,1301],seri:47,serv:54,set:[15,18,19,41,44,45,968,997,998,1010,1011,1012,1063,1064,1076,1103,1104,1105,1106,1118,1121,1123,1124,1125,1126,1127,1154,1161,1189,1190,1197,1199,1200,1205,1217,1236,1237,1241,1243,1244,1246,1247,1248,1251,1254,1260,1278,1287,1294,1295,1296,1297,1298,1299],set_at_kei:[44,45],set_at_key_chain:[44,45],set_breakpoint_debug_mod:48,set_debug_mod:48,set_default_devic:968,set_default_dtyp:940,set_default_float_dtyp:940,set_default_int_dtyp:940,set_exception_debug_mod:48,set_framework:[44,45,47,65,1260],set_ivy_backend:[44,45],set_min_bas:1063,set_min_denomin:1063,set_nest_at_index:1189,set_nest_at_indic:1189,set_queue_timeout:1063,set_split_factor:968,set_stat:[1294,1295,1296,1297,1298,1299],set_tmp_dir:1063,set_with_grad:1118,sgd:1294,shape:[44,45,47,401,404,410,414,415,417,463,472,512,522,926,929,930,932,935,936,937,938,939,940,944,945,968,980,1018,1024,1025,1056,1063,1082,1085,1101,1102,1107,1134,1138,1141,1143,1145,1147,1154,1155,1156,1157,1158,1159,1160,1162,1164,1167,1175,1176,1177,1178,1180,1184,1205,1206,1209,1211,1214,1215,1216,1217,1225,1226,1227,1229,1230,1233,1236,1238,1239,1240,1243,1244,1246,1247,1248,1249,1278,1280,1281,1282,1283,1284,1285,1292,1293],shape_slic:[44,45],shape_to_tupl:1063,sharabl:41,share:[42,44,45,1260],shaw:42,should:[40,42,44,45,46,47,923,924,926,937,938,940,944,968,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1039,1040,1041,1042,1045,1047,1048,1049,1050,1051,1052,1054,1057,1058,1059,1063,1069,1072,1118,1121,1123,1125,1126,1127,1154,1155,1156,1157,1160,1164,1169,1205,1209,1225,1227,1243,1244,1248,1249,1250,1253,1255,1260],show:[44,45,1260],show_mod_in_top_mod:[1290,1291],show_structur:[1290,1291],show_sub_contain:[44,45],show_v:[1290,1291],show_v_in_top_v:[1290,1291],shown:[44,45],shuffl:[44,45,1236],shuffle_h5_fil:[44,45],side:47,sigmoid:[397,915,1260],sign:[42,1018,1019,1154,1165,1248,1253,1255],signatur:[42,47,65,397,415,421,422,463,512,940,968,980,981,982,983,1118,1269,1271,1272,1274,1275,1277],signific:[41,42],significantli:41,similar:[41,47,1141,1152,1278,1289],simpl:[41,47,1063,1081,1260],simpler:47,simpli:[44,45,47,1018,1036,1260],simplifi:42,simultan:[41,43,1260],sin:[1018,1061,1063,1083],sinc:42,sine:[1018,1022,1023,1057,1058],singl:[43,44,45,923,924,968,977,978,997,998,999,1000,1063,1114,1117,1134,1139,1205,1229,1236,1239,1240,1248,1251,1254,1260],singleton:[1154,1169,1248,1250,1253,1257,1258,1259],singular:[1154,1166,1167],sinh:1018,siren:1269,situat:47,size:[44,45,46,463,471,926,933,934,968,991,992,993,994,1010,1011,1012,1063,1101,1134,1138,1154,1157,1161,1164,1166,1175,1181,1205,1207,1209,1236,1237,1239,1240,1243,1244,1248,1251,1254,1257,1258,1259,1278,1279,1280],size_ordered_arrai:[44,45],skew:[1154,1170],skip:[44,45],slew:43,slice:[44,45,1063,1084,1085,1189,1196],slice_kei:[44,45],slice_obj:[44,45],slice_via_kei:[44,45],slide:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],slodget:1154,slope:[915,917],small:[1171,1172,1173,1174,1201,1202,1260,1292,1293],smaller:[1205,1210,1248,1253,1255],smallest:[44,45,940,955,956,1018,1030,1205,1208],smallest_norm:[415,940,955],smtp:42,softmax:[397,915,1141,1152,1153],softplu:[397,915],softwar:[41,42],solut:47,some:[42,43,44,45,47,1018,1036,1118,1120,1121,1123,1125,1126,1127,1132,1141,1149,1205,1207,1260,1278,1286],some_backend:47,some_namespac:47,somehow:42,someth:47,something_cool:47,sometim:47,somewher:[44,45],sonnet:43,soon:[47,64,1263],sort:[44,45,46,1154,1166,1167,1247],sort_by_kei:[44,45],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,65,67,68,69,70,71,72,73,74,75,76,77,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,418,419,420,421,422,463,464,465,466,467,468,469,470,471,472,473,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,915,916,917,918,919,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,970,971,972,973,974,975,977,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1304],space:[42,926,933,934,1063,1083,1205,1207],spars:[1171,1174],sparse_cross_entropi:1171,spawn:[1205,1224],special:[47,1018,1019,1020,1021,1023,1030,1031,1036,1037,1045,1047,1048,1057,1058,1059,1248,1250],specif:[41,44,45,47,940,960,968,1010,1018,1050,1051,1063,1072,1078,1079,1080,1185,1186,1187,1188,1205,1224,1236,1242,1248,1250,1260,1263,1290,1291],specifc:[1236,1237],specifi:[44,45,47,926,927,929,933,934,935,937,938,939,940,944,945,947,968,987,988,989,990,991,992,993,994,997,998,1002,1004,1008,1011,1012,1013,1063,1084,1085,1090,1116,1154,1157,1161,1169,1175,1176,1178,1184,1189,1194,1195,1199,1200,1205,1207,1208,1210,1211,1215,1230,1243,1244,1246,1247,1248,1249,1251,1253,1254,1255,1257,1258,1259],speed:41,spend:43,spent:43,sphinx:47,spin:43,split:[44,45,54,968,977,991,992,993,994,1010,1011,1012,1063,1097,1175],split_factor:[968,977],split_func_cal:968,sponsor:42,spread:[968,1000],spyder:42,sqrt:[1018,1154,1169],squar:[1018,1059,1154,1155,1156,1158,1159,1165,1205,1217],squeez:[512,1205],stabil:[1063,1108,1109,1246,1247],stabl:[1063,1087,1088,1103,1104,1108,1109,1246,1247],stable_divid:1063,stable_pow:1063,stack:[44,45,926,937,938,1134,1139,1154,1156,1157,1158,1160,1162,1164,1167,1189,1190,1197,1205,1278,1287],stack_imag:1134,stage:[42,47],standard:[40,44,45,940,955,1201,1202,1236,1239,1248,1254,1263,1292,1293],start:[44,45,47,401,408,409,421,422,512,513,926,933,934,968,983,1205,1207,1260],starting_index:[44,45],starting_split_factor:968,state:[42,54,1141,1151,1264,1265,1266,1267,1268,1269,1271,1272,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],static_argnam:[512,516,923,924],static_argnum:[512,516,923,924],statist:[1249,1250,1251,1252,1253,1254,1255,1256],statu:43,std:[44,45,1236,1239,1248],step:[43,44,45,512,513,926,933,934,968,1118,1120,1121,1123,1125,1126,1127,1185,1186,1187,1188,1205,1207,1260,1294,1295,1296,1297,1298,1299],stephen:1260,stick:1260,still:[42,44,45,47],stochast:[1294,1299],stop:[44,45,401,408,409,421,422,512,513,926,933,934,968,983,1012,1118,1121,1123,1125,1126,1127,1129,1185,1186,1187,1188,1205,1207,1294,1295,1296,1297,1298,1299],stop_gradi:[44,45,968,1012,1118,1121,1123,1125,1126,1127,1185,1186,1187,1188,1294,1295,1296,1297,1298,1299],storag:42,store:[44,45,1063,1083,1118,1132,1175,1181,1290,1291],store_var:[1290,1291],str:[15,16,17,44,45,46,47,401,404,405,406,407,410,411,414,415,418,419,923,924,926,927,928,930,932,936,940,946,947,948,949,950,952,953,954,955,956,957,958,959,961,962,963,967,968,977,978,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1012,1063,1076,1078,1079,1080,1101,1102,1154,1161,1164,1185,1186,1187,1188,1189,1193,1205,1222,1224,1226,1248,1249,1253,1267,1268,1278,1289,1290,1291],streamlin:43,strength:1260,stride:[1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],string:[44,45,47,926,927,940,945,951,953,954,957,967,968,984,986,995,996,1001,1007,1013,1014,1017,1063,1076,1141,1142,1143,1144,1145,1146,1147,1148,1205,1207,1217,1226,1233,1278,1279,1280,1281,1282,1283,1284,1285,1290,1291],strip:42,strong:42,strongli:1263,structur:[44,45,46,47,1063,1072],structural_diff:[44,45],style:47,sub:[44,45,47,968,991,992,997,998,999,1000,1154,1157,1175,1181,1185,1186,1187,1188],sub_cont:[44,45],sub_cont_or_keychain:[44,45],sub_cont_to_find:[44,45],sub_mod:[1290,1291],sub_modul:[1300,1301],sub_str:[44,45],sub_struc_to_find:[44,45],submodul:[54,1292,1293,1300,1301],subsequ:47,subset:47,substanti:42,substr:[44,45],success:42,suggest:1260,suit:42,suitabl:[1134,1139],sum:[44,45,463,471,472,968,997,998,999,1000,1012,1018,1048,1063,1075,1079,1101,1102,1154,1168,1169,1248,1249],summat:[44,45,1248,1249],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,165,166,168,169,170,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,220,221,222,223,224,225,227,230,232,233,234,235,236,237,238,240,241,244,253,254,255,256,257,258,259,260,261,262,264,265,266,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,315,316,317,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,375,376,377,378,380,383,385,386,387,388,389,390,391,392,394,395,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,422,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,468,469,470,471,472,473,475,476,477,478,480,481,482,484,485,486,487,488,489,490,492,493,494,495,496,497,498,499,500,501,502,503,504,505,507,508,509,510,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,533,535,538,540,541,542,543,544,545,546,548,549,554,555,556,557,558,559,560,561,562,563,564,565,566,568,569,570,571,572,574,575,576,577,578,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,643,644,645,646,647,648,649,650,651,652,653,654,655,656,658,659,660,661,662,663,664,665,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,686,687,688,689,691,694,696,697,698,699,700,701,702,704,705,708,709,710,711,712,713,714,717,718,720,721,722,723,724,725,726,727,728,729,730,731,732,734,735,736,737,738,740,741,742,743,744,745,746,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,818,819,820,822,823,824,825,826,827,828,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,847,848,849,850,851,852,853,854,855,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,894,895,896,897,899,902,904,905,906,907,908,909,910,912,913,916,917,918,919,920,921,922,924,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1237,1238,1239,1240,1241,1242,1244,1247,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1263,1265,1266,1268,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1291,1293,1294,1295,1296,1297,1298,1299,1301,1302,1304],supports_inplac:1063,sure:47,svd:1154,svdval:1154,swap:[44,45,1175,1182],swapax:[44,45,1175],symmetr:[1154,1155,1158,1170],sympi:42,syntax:[41,42,397,421,463,512],tab:1260,take:[43,47,1205,1219,1263],taken:[47,1154,1157,1248,1251,1254],tan:[1018,1024],tangent:[915,922,1018,1024,1025,1026,1061,1062],tanh:[915,1018],target:[44,45,968,984,987,988,989,990,991,992,993,994,997,998,999,1000,1013,1260],target_dict:[44,45],task:[47,1185,1186,1187,1188],tcp:42,team:47,technolog:42,templat:1260,temporari:[1063,1106,1111],tensor:[41,44,45,47,463,471,472,926,933,934,940,951,968,986,1063,1101,1102,1141,1149,1151,1175,1181,1205,1207,1208,1209,1221,1223,1225,1226,1227,1233,1236,1237,1238,1260,1278,1286,1288,1294,1295,1296,1297,1298,1299],tensorflow:[42,43,47,1141,1143,1145,1147,1260,1278,1280,1282,1284],term:[41,44,45,47,1141,1151,1260,1278,1288],termcolor:[44,45,46],termin:[44,45,46],test:[43,47,940,958,959,1018,1039,1040,1041,1257,1258,1259],test_array_api:47,tf_concat:1260,than:[42,44,45,47,940,955,968,1012,1018,1020,1021,1030,1037,1045,1047,1059,1063,1096,1118,1124,1154,1160,1169,1175,1178,1205,1207,1210,1214,1221,1229,1230,1236,1240,1248,1253,1255,1260],thank:42,thei:[44,45,47,1018,1025,1185,1186,1187,1236,1237,1260,1300,1301],them:[40,41,42,43,1260],themselv:[1189,1190],therefor:[41,47],thi:[41,42,43,44,45,46,47,926,928,968,990,994,1000,1007,1012,1017,1018,1019,1036,1050,1051,1063,1083,1100,1105,1118,1121,1123,1124,1125,1126,1127,1132,1141,1150,1154,1161,1165,1168,1189,1193,1198,1205,1207,1227,1243,1244,1248,1251,1254,1260,1263,1290,1291,1294,1295,1296,1297,1298,1299],thing:[41,42,43,47,1260],those:[41,44,45,47,1118,1132,1154,1164,1166,1205,1210],though:47,thought:[42,47],three:54,threshold:[1205,1221,1223],through:[44,45,47],tick:47,tickbox:47,tile:1175,time:[41,42,43,47,1118,1121,1125,1141,1151,1175,1183,1185,1186,1187,1188,1236,1237,1243,1244,1278,1289,1290,1291],timeout:[44,45,46,968,977,978,1063,1100,1105],timestep:[1141,1151,1278,1287],titl:[47,1260],tmp_dir:1063,tmp_dr:[1063,1106],to_appli:[44,45],to_clon:968,to_dev:[44,45,421,968],to_dict:[44,45],to_disk_as_hdf5:[44,45],to_disk_as_json:[44,45],to_disk_as_pickl:[44,45],to_distribut:968,to_flat_list:[44,45],to_iter:[44,45],to_iterator_kei:[44,45],to_iterator_valu:[44,45],to_ivi:[15,44,45],to_ivy_modul:1267,to_json:[44,45],to_kv_fn:[1141,1152],to_kv_v:[1141,1152],to_list:[44,45,463,1063],to_multi_dev:[44,45],to_mut:[1189,1191,1198],to_n:[15,44,45],to_numpi:[44,45,463,1063,1260],to_out_fn:[1141,1152],to_out_v:[1141,1152],to_q_fn:[1141,1152],to_q_v:[1141,1152],to_raw:[44,45],to_scalar:[463,1063],togeth:[42,44,45,1300,1301],tool:[40,43,1260],top_mod:[1290,1291],torch:[47,923,924,1260],torch_concat:1260,torchvis:43,total:[43,44,45,46,968,1014],total_mem_on_dev:968,toward:1263,tpu:[968,1015],tpu_is_avail:[421,968],trace:[44,45,1063,1096,1154],track:[47,968,1189,1198,1290,1291],track_submod_call_ord:[1290,1291],track_submod_ret:[1290,1291],trail:[1292,1293],train:[43,64,1118,1120,1121,1125,1260],trainabl:[1118,1124,1267,1268,1290,1291,1300],trainer:[43,64,1260],transform:[1141,1149,1150],transpil:[54,1263],transpos:[44,45,512,968,999,1141,1143,1145,1147,1154,1162,1205,1278,1280,1282,1284],travers:[15,18,19,44,45,1189,1198],trax:43,treat:[44,45,923,924],tri:[44,45],triangular:[926,937,938,1154,1155,1164],trigonometr:[1018,1024],tril:[401,926],trim_kei:[44,45],triu:[401,926],trust:[1118,1125,1294,1296],truth:[1018,1038,1042,1043,1054,1205,1213],try_else_non:1063,try_import_ivy_jax:65,try_import_ivy_mxnet:65,try_import_ivy_numpi:65,try_import_ivy_tf:65,try_import_ivy_torch:65,try_kc:[44,45],tune:968,tune_dev_alloc:968,tune_dev_split:968,tune_step:968,tupl:[15,16,17,18,19,44,45,47,401,404,410,414,415,417,923,924,926,928,929,935,939,940,944,1063,1083,1107,1154,1166,1169,1175,1176,1177,1178,1179,1184,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1205,1215,1236,1238,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259],turn:43,tutori:47,two:[43,44,45,54,926,931,937,938,1063,1066,1154,1155,1156,1157,1158,1160,1161,1162,1164,1165,1166,1167,1168,1175,1182,1205,1207,1212,1220],type:[15,18,44,45,46,47,65,418,419,421,422,926,927,929,930,931,932,935,936,937,938,939,944,945,946,947,951,952,953,954,955,956,957,958,959,960,967,968,980,981,982,983,995,996,1000,1012,1018,1019,1020,1021,1023,1027,1028,1029,1030,1031,1033,1036,1037,1038,1039,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1052,1054,1056,1057,1058,1059,1063,1072,1077,1082,1096,1110,1117,1118,1124,1129,1154,1155,1156,1157,1158,1160,1162,1164,1169,1175,1178,1179,1205,1206,1207,1211,1213,1214,1215,1217,1225,1226,1233,1243,1244,1246,1247,1248,1250,1253,1255,1256,1257,1258,1259,1260,1269,1271,1272,1274,1275,1277,1290,1291],types_to_iteratively_nest:[44,45,46],uint16:[1248,1253,1255],uint32:[1248,1253,1255],uint64:[1248,1253,1255],uint8:[1134,1136,1140],uint8_img_to_float_img:1134,unabl:47,unchang:[15,16,17,18,19],uncom:47,underli:[1018,1027,1029,1052],understand:43,underwai:47,unecessari:47,unfairli:47,unif:[42,1263],unifi:[40,42,44,45,968,997,998,999,1000,1012,1260],uniform:[44,45,1236,1237,1239,1240,1269,1271,1272,1275,1276],uniformli:[1236,1238,1240],uniniti:[926,929,930],union:[15,18,19,44,45,47,401,404,405,407,410,411,414,415,418,419,420,923,924,926,927,928,929,930,932,933,934,935,936,937,938,939,940,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,967,968,986,991,992,993,994,1012,1013,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1066,1067,1070,1071,1073,1074,1075,1078,1079,1080,1082,1083,1084,1085,1090,1101,1102,1107,1112,1113,1114,1116,1117,1154,1155,1158,1160,1162,1165,1166,1167,1169,1170,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1189,1190,1191,1197,1198,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1229,1230,1231,1232,1233,1243,1244,1246,1247,1248,1250,1252,1253,1256,1257,1258,1259],uniqu:[41,968,977,978,1185,1186,1187,1188,1189,1193],unit:[47,915,916,917,918,968,1018,1022],unitari:[1154,1166],univers:41,unless:[1205,1225,1233],unlik:[42,968],unnorm:[1236,1237],unpack:[1063,1116],unrel:42,unrol:[1141,1151],unset_debug_mod:48,unset_default_devic:968,unset_default_dtyp:940,unset_default_float_dtyp:940,unset_default_int_dtyp:940,unset_framework:65,unset_with_grad:1118,unsign:[1248,1253,1255],unstack:[44,45,463,1063],unsurprisingli:41,until:[42,47],unus:[923,924],updat:[44,45,463,471,472,968,977,1063,1094,1101,1102,1118,1120,1121,1123,1125,1126,1127,1141,1151,1185,1186,1187,1189,1194,1195,1199,1200,1267,1268,1294,1295,1296,1297,1298,1299],update_backend:[44,45],update_config:[44,45],upon:47,upper:[44,45,926,931,938,1154,1155,1164,1236,1240],upper_depth:[1290,1291],upstream:47,usabl:1260,usag:[42,968,1012],use:[43,44,45,46,47,968,977,978,1003,1015,1063,1108,1109,1141,1152,1175,1180,1201,1202,1260,1292,1293],used:[44,45,47,940,952,968,977,1007,1010,1011,1017,1063,1087,1088,1097,1101,1102,1103,1104,1118,1125,1126,1154,1157,1161,1185,1186,1187,1188,1189,1198,1205,1233,1278,1289,1294,1296,1297],used_dev:[968,977],used_mem_on_dev:968,useful:[44,45,968,1012,1141,1150,1260],user:[41,42,1260,1278,1289,1290,1291],uses:1260,using:[43,44,45,47,1118,1120,1121,1141,1149,1153,1189,1192,1196,1248,1249,1260,1278,1286],util:[968,1001,1258,1259],v_with_top_v_key_chain:[1290,1291],val:[44,45,463,467,468,469,1063,1092,1093,1094,1103,1104],valid:[940,946,1063,1108,1109,1141,1142,1143,1144,1145,1146,1147,1148,1257,1258,1259,1278,1279,1280,1281,1282,1283,1284,1285],valid_dtyp:940,valu:[44,45,926,931,932,933,934,968,980,1011,1012,1018,1019,1020,1030,1034,1035,1037,1038,1042,1043,1044,1054,1055,1056,1063,1070,1071,1072,1077,1083,1084,1085,1100,1101,1102,1103,1104,1105,1117,1118,1122,1125,1134,1140,1141,1152,1153,1154,1164,1165,1166,1167,1168,1169,1175,1176,1180,1184,1185,1186,1187,1189,1193,1194,1195,1199,1200,1201,1202,1205,1206,1207,1208,1210,1213,1215,1221,1223,1227,1231,1232,1236,1239,1240,1243,1244,1246,1247,1248,1250,1252,1253,1255,1278,1289,1292,1293,1294,1296],value_is_nan:1063,vanilla:[1185,1187],var_shap:1269,variabl:[15,16,17,18,19,44,45,1063,1068,1092,1093,1094,1095,1096,1110,1118,1121,1122,1123,1124,1125,1126,1127,1129,1132,1141,1152,1185,1186,1187,1188,1201,1202,1267,1268,1269,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301],variable_data:1118,varianc:[44,45,1248,1256],variou:[47,1260],vector:[44,45,1063,1071,1141,1150,1154,1160,1166,1167,1169,1170,1205,1212,1278,1288],vector_norm:[44,45,1154],vector_to_skew_symmetric_matrix:1154,verbos:1304,veri:[41,42,47,1260],verifi:[47,1263],version:[41,42,43,47],via:[1189,1190,1197],view:[1134,1139],virtual:42,vision:[64,1260],vital:41,volum:[1141,1146],vw_tm1:[1118,1121,1125],wai:[41,42],wait:[44,45,46,47],want:[42,47,1260],warn:[65,72,73,74,75,76],warp:[1134,1135],websit:[42,47],week:43,weight:[1118,1120,1121,1123,1125,1126,1127,1141,1150,1151,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1290,1291,1294,1296,1297],weight_initi:[1278,1279,1280,1281,1282,1283,1284,1285,1287,1288],weights_path:[1290,1291],welcom:1263,well:[44,45,1063,1090],were:[44,45],what:[42,43,47,1260],wheel:41,when:[41,42,44,45,46,47,968,1018,1036,1063,1069,1109,1154,1166,1205,1232,1243,1244,1248,1250,1260,1290,1291],where:[41,42,43,44,45,47,512,926,931,932,1018,1046,1154,1164,1166,1167,1175,1176,1177,1179,1184,1189,1190,1197,1205,1207,1209,1210,1218,1225,1236,1237,1257,1258,1259],wherea:47,wherebi:[1189,1198],whether:[15,18,19,44,45,46,915,916,923,924,940,951,957,958,959,967,968,986,999,1003,1007,1012,1015,1017,1018,1041,1063,1064,1066,1067,1074,1077,1081,1083,1090,1091,1095,1096,1097,1110,1116,1117,1118,1121,1122,1123,1124,1125,1126,1127,1129,1141,1149,1185,1186,1187,1188,1189,1190,1191,1193,1197,1198,1205,1216,1228,1236,1237,1257,1258,1259,1260,1267,1268,1278,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],which:[41,42,43,44,45,46,47,54,915,920,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,946,951,955,956,957,967,968,977,978,986,991,992,993,994,997,998,999,1000,1002,1004,1008,1010,1011,1012,1018,1025,1063,1072,1074,1075,1077,1084,1085,1086,1098,1099,1101,1102,1116,1118,1121,1122,1123,1125,1126,1127,1129,1131,1132,1134,1136,1141,1152,1153,1154,1157,1161,1169,1175,1178,1180,1181,1189,1193,1194,1195,1199,1200,1205,1207,1211,1212,1215,1217,1218,1219,1225,1226,1230,1232,1233,1236,1237,1238,1239,1240,1243,1244,1246,1247,1248,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1267,1268,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1300,1301],whilst:47,whitespac:[44,45,46],who:47,whose:[47,926,927,931,937,938,1018,1021,1023,1031,1057,1058,1063,1069,1154,1155,1156,1157,1158,1162,1164,1167,1175,1178,1248,1249,1251,1254],why:[40,42,1260],width:[1134,1139],window:[1134,1139,1141,1142,1143,1144,1145,1146,1147,1148,1278,1279,1280,1281,1282,1283,1284,1285],wireless:42,wise:[44,45,47,915,916,917,918,919,920,921,922,1018,1019,1020,1022,1024,1025,1027,1028,1029,1033,1034,1035,1038,1042,1043,1044,1048,1049,1050,1051,1052,1054,1056,1061,1063,1082,1118,1121,1123,1125,1127,1205,1210,1213,1214,1221,1223],with_bia:[1278,1288],with_cal:[1063,1077],with_default_key_color:[44,45],with_entries_as_list:[44,45],with_grad:[1118,1128],with_ivy_backend:[44,45],with_key_length_limit:[44,45],with_partial_v:[1290,1291],with_print_ind:[44,45],with_print_limit:[44,45],with_print_line_spac:[44,45],with_remaind:[44,45,1175,1181],with_to_kv_fn:[1278,1289],with_to_out_fn:[1278,1289],with_to_q_fn:[1278,1289],within:[15,18,19,47,1154,1166,1205,1207,1236,1240],without:[44,45,47,1063,1100,1105,1189,1191,1205,1227],won:[42,43],wonder:[41,43,1260],word:[15,16,17,1205,1207,1236,1240,1267,1268],work:[43,47,1263],worker:[968,977,978],worker_class:[968,977,978],workflow:[43,64],wors:42,would:[42,47,915,920,1260],wouldn:43,wrap:[15,44,45,46,47,397,421,463,512,1063,1069,1118,1132,1260],wrapper:47,write:[43,44,45,47,1260],written:[41,47,1260],ws_new:[1118,1121,1123,1125,1126,1127],x1_i:[1018,1027,1029,1033,1038,1042,1043,1048,1049,1051,1052,1054,1205,1213],x2_i:[1018,1027,1029,1033,1038,1042,1043,1048,1049,1051,1052,1054,1205,1213],x_feat_dim:[1141,1152],x_i:[1018,1019,1020,1021,1023,1028,1030,1031,1036,1037,1039,1040,1041,1045,1047,1050,1057,1058,1059,1060,1248,1250],x_in:1260,x_inv:[1154,1159],x_max:[512,1205,1210],x_min:[512,1205,1210],xor:[1018,1052],year:[41,43,1260],yet:[1189,1198],yield:[1205,1232],you:[41,42,43,47,1260,1263],your:[42,43,1260],yourself:[47,1260],yourslef:47,youtub:47,zero:[43,44,45,401,926,929,931,937,938,1018,1036,1050,1051,1063,1101,1102,1118,1120,1121,1125,1126,1141,1149,1154,1156,1160,1169,1175,1176,1184,1205,1225,1233,1243,1244,1248,1250,1253,1255,1257,1258,1259,1269,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1294,1295,1296,1297],zero_pad:1175,zeros_lik:[512,1205]},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Background","ML Explosion","Standardization","Why Unify?","Container","Container","MultiDevContainer","Contributing","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Design","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Extensions","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Activations","softmax","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Mxnet","Activations","gelu","Array api","Data types","Function and method signatures","Searching functions","Set functions","Statistical functions","Constants","Creation","array","asarray","empty","eye","linspace","logspace","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","Elementwise","acos","acosh","bitwise_and","bitwise_or","ceil","floor","greater_equal","isfinite","isinf","isnan","less","logical_and","logical_not","logical_or","logical_xor","negative","round","sin","sinh","sqrt","square","tanh","General","array_equal","cumprod","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matrix_norm","pinv","qr","slogdet","svd","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","repeat","split","tile","zero_pad","Old","General","abs","arange","broadcast_to","cast","clip","compile","concatenate","cross","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","matmul","meshgrid","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Numpy","Activations","gelu","softmax","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","compile","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Tensorflow","Activations","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv2d","conv3d","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","linear_resample","one_hot","squeeze","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Torch","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","array_equal","container_types","copy_array","cumprod","cumsum","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","to_list","to_numpy","to_scalar","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","broadcast_to","cast","clip","compile","concatenate","cross","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","get_num_dims","identity","indices_where","linear_resample","maximum","meshgrid","minimum","multiprocessing","one_hot","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Ivy","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Compilation","compile","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","broadcast_to","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","result_type","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","divide","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","all_equal","arg_names","array_equal","arrays_equal","assert_supports_inplace","cache_fn","clip_matrix_norm","clip_vector_norm","container_types","copy_array","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","exists","floormod","fourier_encode","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_referrers_recursive","has_nans","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","match_kwargs","num_arrays_in_memory","print_all_arrays_in_memory","queue_timeout","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape_to_tuple","stable_divide","stable_pow","supports_inplace","tmp_dir","to_list","to_numpy","to_scalar","try_else_none","unstack","value_is_nan","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slodget","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Meta","fomaml_step","maml_step","reptile_step","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Norms","layer_norm","Old","Dtype","General","abs","arange","argmin","broadcast_to","clip","concatenate","cross","equal","floor","full","get_num_dims","identity","indices_where","linear_resample","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linalg","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Roadmap","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Verbosity","cprint"],titleterms:{"default":1077,"function":[247,248,249,250],"var":[238,392,546,702,910,1256],Ones:1274,The:42,abs:[115,349,424,581,668,748,858,1019,1206],aco:[116,274,425,582,749,1020],acosh:[117,275,426,583,750,1021],activ:[81,243,397,551,707,915,1264],adam:1295,adam_step:1120,adam_upd:1121,algebra:[179,217,326,372,491,530,642,683,829,889,1154],all:[240,394,548,704,912,1258],all_equ:1064,all_nested_indic:1190,ani:[241,395,549,705,913,1259],api:[0,42,47,245],arang:[201,350,513,669,859,1207],arg_nam:1065,argmax:[227,380,535,691,899,1244],argmin:[202,514,670,860,1208],args_to_ivi:16,args_to_n:17,argsort:[230,383,538,694,902,1247],arithmet:1,arrai:[0,3,42,47,88,245,253,402,554,720,927],array_equ:[297,793,1066],arrays_equ:1067,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[89,254,403,555,721,928],asin:[118,427,584,751,1022],asinh:[119,428,585,752,1023],assert_supports_inplac:1068,atan2:[754,1025],atan:[753,1024],atanh:[755,1026],attribut:5,backend:[47,79],background:40,bilinear_resampl:[168,315,480,635,818,1135],binary_cross_entropi:1172,bitwis:7,bitwise_and:[120,276,429,586,756,1027],bitwise_invert:[121,430,587,757,1028],bitwise_or:[122,277,431,588,758,1029],broadcast_to:[103,351,417,569,735,861,944,1209],builder:56,cache_fn:1069,cast:[203,352,515,671,862,945],ceil:[123,278,432,589,759,1030],choleski:[180,327,492,643,830,1155],choose_random_framework:67,citat:1260,clear_framework_stack:68,clear_mem_on_dev:[741,984],clip:[353,863,1210],clip_matrix_norm:1070,clip_vector_norm:1071,closest_valid_dtyp:946,comparison:9,competit:42,compil:[354,516,864,923,924],complimentari:42,concaten:[204,355,517,672,865,1211],constant:[83,251,400,552,715,925],constant_pad:[340,658,847,1176],contain:[44,45],container_typ:[794,1072],content:1260,contribut:47,conv1d:[172,319,484,822,1142,1279],conv1d_transpos:[173,320,485,823,1143],conv1dtranspos:1280,conv2d:[174,321,486,639,824,1144,1281],conv2d_transpos:[175,322,487,825,1145],conv2dtranspos:1282,conv3d:[176,323,488,640,826,1146,1283],conv3d_transpos:[177,324,489,827,1147],conv3dtranspos:1284,convers:15,convert:[84,716,1267],convert_dtyp:947,copy_arrai:[795,1073],copy_nest:1191,cos:[124,433,590,760,1031],cosh:[125,434,591,761,1032],cprint:1304,creat:47,creation:[87,252,401,553,719,926],cross:[356,866,1212],cross_entropi:1173,cumprod:[154,298,464,796,1074],cumsum:[797,1075],current_framework:69,current_framework_str:[867,1076],data:[101,246,263,415,567,733,940],debug_mod:49,debugg:48,default_devic:985,default_dtyp:948,default_float_dtyp:949,default_int_dtyp:950,depthwise_conv2d:[178,325,490,641,828,1148],depthwiseconv2d:1285,design:[47,54],det:[181,328,493,644,831,1156],dev:[109,269,575,742,986],dev_clon:987,dev_clone_arrai:988,dev_clone_it:989,dev_clone_nest:990,dev_dist:991,dev_dist_arrai:992,dev_dist_it:993,dev_dist_nest:994,dev_from_str:[110,270,576,743,995],dev_to_str:[111,271,577,744,996],dev_unifi:997,dev_unify_arrai:998,dev_unify_it:999,dev_unify_nest:1000,dev_util:1001,devclonedit:971,devcloneditem:970,devclonednest:972,devdistit:974,devdistitem:973,devdistnest:975,devic:[20,107,267,421,573,739,968],devmapp:977,devmappermultiproc:978,diagon:[182,329,494,645,832,1157],divid:1033,document:1260,dropout:[1149,1286],dtype:[205,357,518,673,868,951,1204],dtype_bit:[206,358,519,674,869,952],dtype_from_str:[207,359,520,675,870,953],dtype_to_str:[208,360,521,676,871,954],ecosystem:57,eigvalsh:[183,330,495,646,833,1158],einops_rearrang:1078,einops_reduc:1079,einops_repeat:1080,einsum:[232,385,540,696,904,1249],elementwis:[114,273,423,580,747,1018],empti:[90,255,404,556,722,929],empty_lik:[91,405,557,723,930],equal:[126,435,592,762,1213],erf:[436,763,1034],execute_with_gradi:[165,310,475,630,812,1122],exist:1081,exp:[764,1035],expand_dim:[195,341,507,659,848,1177],explos:41,expm1:[127,437,593,765,1036],extens:64,eye:[92,256,406,558,724,931],finfo:[104,265,418,570,736,955],firstlayersiren:1271,flip:[196,342,508,660,849,1178],float_img_to_uint8_img:1136,floor:[128,279,438,594,766,1037,1214],floormod:[299,798,1082],fomaml_step:1186,fork:47,fourier_encod:1083,framework:65,full:[209,361,522,677,872,1215],full_lik:[93,407,559,725,932],func:78,gather:[155,300,465,620,799,1084],gather_nd:[156,301,466,621,800,1085],geglu:1265,gelu:[244,398,708,916,1266],gener:[22,153,200,296,348,463,512,619,667,792,857,1063,1205],get_all_arrays_in_memori:1086,get_all_arrays_on_dev:1002,get_framework:70,get_min_bas:1087,get_min_denomin:1088,get_num_dim:[873,1216],get_referrers_recurs:1089,glorotuniform:1272,gpu_is_avail:1003,gradient:[24,164,309,474,629,811,1118],gradient_descent_upd:1123,gradient_imag:[169,316,481,636,819,1137],greater_equ:[129,280,439,595,767,1038],gym:58,handler:65,has_nan:1090,ident:[210,362,523,678,874,1217],iinfo:[105,266,419,571,737,956],imag:[26,167,314,479,634,817,1134],implement:43,index_nest:1192,indices_wher:[211,363,524,875,1218],infinit:43,initi:1269,inplac:11,inplace_arrays_support:1091,inplace_decr:[157,302,467,622,801,1092],inplace_incr:[158,303,468,623,802,1093],inplace_upd:[159,304,469,624,803,1094],inplace_variables_support:1095,inv:[834,1159],invalid_dtyp:957,is_arrai:[160,305,470,625,804,1096],is_float_dtyp:958,is_int_dtyp:959,is_vari:[166,311,476,631,813,1124],isfinit:[130,281,440,596,768,1039],isinf:[131,282,441,597,769,1040],isnan:[132,283,442,598,770,1041],issu:47,ivi:[47,55,56,57,58,59,60,61,62,63,914],ivymodul:[85,717],jax:80,keep:47,lamb:1296,lamb_upd:1125,lar:1297,lars_upd:1126,layer:[171,318,483,638,821,1141,1278],layer_norm:1202,layernorm:1293,leaky_relu:[709,917],less:[133,284,443,599,771,1042],less_equ:[134,444,600,772,1043],life:43,linalg:[28,1234],linear:[179,217,326,372,491,530,642,683,829,889,1150,1154,1288],linear_resampl:[212,364,525,679,876,1219],linspac:[94,257,408,560,726,933],list:47,log10:[136,446,602,774,1045],log1p:[137,447,603,775,1046],log2:[138,448,604,776,1047],log:[135,445,601,773,1044],logaddexp:[139,449,605,777,1048],logic:30,logical_and:[140,285,450,606,778,1049],logical_not:[141,286,451,607,779,1050],logical_or:[142,287,452,608,780,1051],logical_xor:[143,288,453,609,781,1052],logspac:[95,258,409,561,727,934],loss:1171,lstm:1287,lstm_updat:1151,maml_step:1187,manipul:[194,339,506,657,846,1175],map:1193,map_nest_at_index:1194,map_nest_at_indic:1195,match_kwarg:1097,math:32,matmul:[184,365,496,647,835,1160,1220],matrix_norm:[185,331,497,648,836,1161],matrix_transpos:[186,498,649,837,1162],max:[233,386,541,697,905,1250],maximum:[877,1221],mean:[234,387,542,698,906,1251],mech:59,memori:60,meshgrid:[366,878,1222],meta:[34,1185],method:247,min:[235,388,543,699,907,1252],minimum:[879,1223],model:61,modul:[1290,1291],more:43,multi_head_attent:1152,multi_index_nest:1196,multidevcontain:46,multidevit:981,multidevitem:980,multidevnest:982,multiheadattent:1289,multinomi:[220,375,533,686,892,1237],multiprocess:[880,1224],mxnet:242,neg:[144,289,454,610,782,1053],nest:1189,nested_indices_wher:1197,nested_map:1198,next:1260,norm:[1201,1292],not_equ:[145,455,611,783,1054],num_arrays_in_memori:1098,num_arrays_on_dev:1004,num_cpu_cor:1005,num_gpu:[112,1006],numpi:396,nutshel:1260,old:[199,347,511,666,856,1203],one_hot:[213,526,680,881,1225],ones:[96,259,410,562,728,935,1226],ones_lik:[97,260,411,563,729,936],oper:[1,3,7,9,11,13,47],optim:[1294,1298],optimizer_upd:1127,overview:1260,percent_used_mem_on_dev:1007,permute_dim:[197,509,661,850,1179],pinv:[332,838,1163],posit:[146,456,612,784,1055],print_all_arrays_in_memori:1099,print_all_arrays_on_dev:1008,prod:[236,389,544,700,908,1253],profil:[108,268,422,574,740,983],pull:47,queue_timeout:1100,randint:[221,376,687,893,1238],random:[36,219,374,532,685,891,1236],random_crop:1138,random_norm:[222,377,688,894,1239],random_uniform:[223,378,689,895,1240],reduct:[38,218,373,531,684,890,1235],reflect:13,relu:[710,918],repeat:[343,851,1180],reptile_step:1188,request:47,reshap:[882,1227],result_typ:[106,420,572,738,960],roadmap:1263,robot:62,round:[147,290,457,613,785,1056],scaled_dot_product_attent:1153,scatter_flat:[161,306,471,626,805,1101],scatter_nd:[162,307,472,627,806,1102],search:[226,248,379,534,690,898,1243],seed:[224,896,1241],sequenti:[1300,1301],set:[228,249,381,536,692,900,1245],set_breakpoint_debug_mod:50,set_debug_mod:51,set_default_devic:1009,set_default_dtyp:961,set_default_float_dtyp:962,set_default_int_dtyp:963,set_exception_debug_mod:52,set_framework:71,set_min_bas:1103,set_min_denomin:1104,set_nest_at_index:1199,set_nest_at_indic:1200,set_queue_timeout:1105,set_split_factor:1010,set_tmp_dir:1106,set_with_grad:1128,sgd:1299,shape:[883,1228],shape_to_tupl:1107,shelf:43,shuffl:[225,897,1242],sigmoid:[711,919],signatur:247,sin:[148,291,458,614,786,1057],sinh:[149,292,459,615,787,1058],siren:1275,skeptic:42,slodget:1165,slogdet:[188,334,500,651,840],softmax:[82,399,712,920],softplu:[713,921],sort:[229,382,537,693,901,1246],sparse_cross_entropi:1174,split:[198,344,510,662,852,1181],split_factor:1011,split_func_cal:1012,sqrt:[150,293,460,616,788,1059],squar:[151,294,461,617,789,1060],squeez:[214,367,527,681,884,1229],stable_divid:1108,stable_pow:1109,stack:[368,885,1230],stack_imag:[170,317,482,637,820,1139],standard:[42,47],statist:[231,250,384,539,695,903,1248],std:[390,1254],stop_gradi:[312,477,632,814,1129],submodul:47,sum:[237,391,545,701,909,1255],supports_inplac:1110,svd:[189,335,501,652,841,1166],svdval:[190,502,653,842,1167],swapax:[663,853,1182],tan:[790,1061],tanh:[152,295,462,618,714,791,922,1062],tensorflow:550,tile:[345,664,854,1183],tmp_dir:1111,to_dev:[113,272,578,745,1013],to_ivi:18,to_ivy_modul:[86,718,1268],to_list:[807,1112],to_n:19,to_numpi:[808,1113],to_scalar:[809,1114],todo:47,torch:706,total_mem_on_dev:1014,tpu_is_avail:[579,746,1015],trace:[191,336,503,654,843,1168],transpos:[215,369,528,886,1231],tree:1260,tril:[98,261,412,564,730,937],triu:[99,413,565,731,938],try_else_non:1115,try_import_ivy_jax:72,try_import_ivy_mxnet:73,try_import_ivy_numpi:74,try_import_ivy_tf:75,try_import_ivy_torch:76,type:[101,246,263,415,567,733,940],uint8_img_to_float_img:1140,unifi:43,unset_debug_mod:53,unset_default_devic:1016,unset_default_dtyp:964,unset_default_float_dtyp:965,unset_default_int_dtyp:966,unset_framework:77,unset_with_grad:1130,unstack:[163,308,473,628,810,1116],updat:47,used_mem_on_dev:1017,util:[239,393,547,703,911,1257],valid_dtyp:967,value_is_nan:1117,variabl:[313,478,633,815,1131],variable_data:[816,1132],vector_norm:[192,337,504,655,844,1169],vector_to_skew_symmetric_matrix:[193,338,505,656,845,1170],verbos:1303,vision:63,where:[370,887,1232,1260],why:43,with_grad:1133,work:42,wrapper:78,your:47,zero:[100,262,414,566,732,939,1277],zero_pad:[346,665,855,1184],zeros_lik:[216,371,529,682,888,1233]}})