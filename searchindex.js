Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","background","background/ml_explosion","background/standardization","background/why_unify","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","design","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","extensions","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/activations","functional/backends/jax/activations/softmax","functional/backends/jax/constants","functional/backends/jax/converters","functional/backends/jax/converters/IvyModule","functional/backends/jax/converters/to_ivy_module","functional/backends/jax/creation","functional/backends/jax/creation/array","functional/backends/jax/creation/asarray","functional/backends/jax/creation/empty","functional/backends/jax/creation/empty_like","functional/backends/jax/creation/eye","functional/backends/jax/creation/full_like","functional/backends/jax/creation/linspace","functional/backends/jax/creation/logspace","functional/backends/jax/creation/ones","functional/backends/jax/creation/ones_like","functional/backends/jax/creation/tril","functional/backends/jax/creation/triu","functional/backends/jax/creation/zeros","functional/backends/jax/data_type","functional/backends/jax/data_type/Finfo:\n\n    def __init__","functional/backends/jax/data_type/broadcast_to","functional/backends/jax/data_type/finfo","functional/backends/jax/data_type/iinfo","functional/backends/jax/data_type/result_type","functional/backends/jax/device","functional/backends/jax/device/Profiler","functional/backends/jax/device/dev","functional/backends/jax/device/dev_from_str","functional/backends/jax/device/dev_to_str","functional/backends/jax/device/num_gpus","functional/backends/jax/device/to_dev","functional/backends/jax/elementwise","functional/backends/jax/elementwise/abs","functional/backends/jax/elementwise/acos","functional/backends/jax/elementwise/acosh","functional/backends/jax/elementwise/asin","functional/backends/jax/elementwise/asinh","functional/backends/jax/elementwise/atan","functional/backends/jax/elementwise/bitwise_and","functional/backends/jax/elementwise/bitwise_invert","functional/backends/jax/elementwise/bitwise_or","functional/backends/jax/elementwise/ceil","functional/backends/jax/elementwise/cos","functional/backends/jax/elementwise/cosh","functional/backends/jax/elementwise/equal","functional/backends/jax/elementwise/expm1","functional/backends/jax/elementwise/floor","functional/backends/jax/elementwise/greater_equal","functional/backends/jax/elementwise/isfinite","functional/backends/jax/elementwise/isinf","functional/backends/jax/elementwise/isnan","functional/backends/jax/elementwise/less","functional/backends/jax/elementwise/less_equal","functional/backends/jax/elementwise/log","functional/backends/jax/elementwise/log10","functional/backends/jax/elementwise/log1p","functional/backends/jax/elementwise/log2","functional/backends/jax/elementwise/logaddexp","functional/backends/jax/elementwise/logical_and","functional/backends/jax/elementwise/logical_not","functional/backends/jax/elementwise/logical_or","functional/backends/jax/elementwise/logical_xor","functional/backends/jax/elementwise/negative","functional/backends/jax/elementwise/not_equal","functional/backends/jax/elementwise/positive","functional/backends/jax/elementwise/remainder","functional/backends/jax/elementwise/round","functional/backends/jax/elementwise/sin","functional/backends/jax/elementwise/sinh","functional/backends/jax/elementwise/sqrt","functional/backends/jax/elementwise/square","functional/backends/jax/elementwise/tanh","functional/backends/jax/general","functional/backends/jax/general/cumprod","functional/backends/jax/general/gather","functional/backends/jax/general/gather_nd","functional/backends/jax/general/inplace_decrement","functional/backends/jax/general/inplace_increment","functional/backends/jax/general/inplace_update","functional/backends/jax/general/is_array","functional/backends/jax/general/scatter_flat","functional/backends/jax/general/scatter_nd","functional/backends/jax/general/unstack","functional/backends/jax/gradients","functional/backends/jax/gradients/execute_with_gradients","functional/backends/jax/gradients/is_variable","functional/backends/jax/image","functional/backends/jax/image/bilinear_resample","functional/backends/jax/image/gradient_image","functional/backends/jax/image/stack_images","functional/backends/jax/layers","functional/backends/jax/layers/conv1d","functional/backends/jax/layers/conv1d_transpose","functional/backends/jax/layers/conv2d","functional/backends/jax/layers/conv2d_transpose","functional/backends/jax/layers/conv3d","functional/backends/jax/layers/conv3d_transpose","functional/backends/jax/layers/depthwise_conv2d","functional/backends/jax/linear_algebra","functional/backends/jax/linear_algebra/cholesky","functional/backends/jax/linear_algebra/det","functional/backends/jax/linear_algebra/diagonal","functional/backends/jax/linear_algebra/eigvalsh","functional/backends/jax/linear_algebra/matmul","functional/backends/jax/linear_algebra/matrix_norm","functional/backends/jax/linear_algebra/matrix_transpose","functional/backends/jax/linear_algebra/qr","functional/backends/jax/linear_algebra/slogdet","functional/backends/jax/linear_algebra/svd","functional/backends/jax/linear_algebra/svdvals","functional/backends/jax/linear_algebra/trace","functional/backends/jax/linear_algebra/vector_norm","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/manipulation","functional/backends/jax/manipulation/expand_dims","functional/backends/jax/manipulation/flip","functional/backends/jax/manipulation/permute_dims","functional/backends/jax/manipulation/split","functional/backends/jax/old","functional/backends/jax/old/general","functional/backends/jax/old/general/arange","functional/backends/jax/old/general/argmin","functional/backends/jax/old/general/cast","functional/backends/jax/old/general/concatenate","functional/backends/jax/old/general/dtype","functional/backends/jax/old/general/dtype_bits","functional/backends/jax/old/general/dtype_from_str","functional/backends/jax/old/general/dtype_to_str","functional/backends/jax/old/general/full","functional/backends/jax/old/general/identity","functional/backends/jax/old/general/indices_where","functional/backends/jax/old/general/linear_resample","functional/backends/jax/old/general/one_hot","functional/backends/jax/old/general/squeeze","functional/backends/jax/old/general/transpose","functional/backends/jax/old/general/zeros_like","functional/backends/jax/old/linear_algebra","functional/backends/jax/old/reductions","functional/backends/jax/random","functional/backends/jax/random/multinomial","functional/backends/jax/random/randint","functional/backends/jax/random/random_normal","functional/backends/jax/random/random_uniform","functional/backends/jax/random/seed","functional/backends/jax/random/shuffle","functional/backends/jax/searching","functional/backends/jax/searching/argmax","functional/backends/jax/set","functional/backends/jax/sorting","functional/backends/jax/sorting/argsort","functional/backends/jax/statistical","functional/backends/jax/statistical/einsum","functional/backends/jax/statistical/max","functional/backends/jax/statistical/mean","functional/backends/jax/statistical/min","functional/backends/jax/statistical/prod","functional/backends/jax/statistical/sum","functional/backends/jax/statistical/var","functional/backends/jax/utility","functional/backends/jax/utility/all","functional/backends/jax/utility/any","functional/backends/mxnet","functional/backends/mxnet/activations","functional/backends/mxnet/activations/gelu","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/constants","functional/backends/mxnet/creation","functional/backends/mxnet/creation/array","functional/backends/mxnet/creation/asarray","functional/backends/mxnet/creation/empty","functional/backends/mxnet/creation/eye","functional/backends/mxnet/creation/linspace","functional/backends/mxnet/creation/logspace","functional/backends/mxnet/creation/ones","functional/backends/mxnet/creation/ones_like","functional/backends/mxnet/creation/tril","functional/backends/mxnet/creation/zeros","functional/backends/mxnet/data_type","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__","functional/backends/mxnet/data_type/finfo","functional/backends/mxnet/data_type/iinfo","functional/backends/mxnet/device","functional/backends/mxnet/device/Profiler","functional/backends/mxnet/device/dev","functional/backends/mxnet/device/dev_from_str","functional/backends/mxnet/device/dev_to_str","functional/backends/mxnet/device/to_dev","functional/backends/mxnet/elementwise","functional/backends/mxnet/elementwise/acos","functional/backends/mxnet/elementwise/acosh","functional/backends/mxnet/elementwise/bitwise_and","functional/backends/mxnet/elementwise/bitwise_or","functional/backends/mxnet/elementwise/ceil","functional/backends/mxnet/elementwise/floor","functional/backends/mxnet/elementwise/greater_equal","functional/backends/mxnet/elementwise/isfinite","functional/backends/mxnet/elementwise/isinf","functional/backends/mxnet/elementwise/isnan","functional/backends/mxnet/elementwise/less","functional/backends/mxnet/elementwise/logical_and","functional/backends/mxnet/elementwise/logical_not","functional/backends/mxnet/elementwise/logical_or","functional/backends/mxnet/elementwise/logical_xor","functional/backends/mxnet/elementwise/negative","functional/backends/mxnet/elementwise/round","functional/backends/mxnet/elementwise/sin","functional/backends/mxnet/elementwise/sinh","functional/backends/mxnet/elementwise/sqrt","functional/backends/mxnet/elementwise/square","functional/backends/mxnet/elementwise/tanh","functional/backends/mxnet/general","functional/backends/mxnet/general/array_equal","functional/backends/mxnet/general/cumprod","functional/backends/mxnet/general/floormod","functional/backends/mxnet/general/gather","functional/backends/mxnet/general/gather_nd","functional/backends/mxnet/general/inplace_decrement","functional/backends/mxnet/general/inplace_increment","functional/backends/mxnet/general/inplace_update","functional/backends/mxnet/general/is_array","functional/backends/mxnet/general/scatter_flat","functional/backends/mxnet/general/scatter_nd","functional/backends/mxnet/general/unstack","functional/backends/mxnet/gradients","functional/backends/mxnet/gradients/execute_with_gradients","functional/backends/mxnet/gradients/is_variable","functional/backends/mxnet/gradients/stop_gradient","functional/backends/mxnet/gradients/variable","functional/backends/mxnet/image","functional/backends/mxnet/image/bilinear_resample","functional/backends/mxnet/image/gradient_image","functional/backends/mxnet/image/stack_images","functional/backends/mxnet/layers","functional/backends/mxnet/layers/conv1d","functional/backends/mxnet/layers/conv1d_transpose","functional/backends/mxnet/layers/conv2d","functional/backends/mxnet/layers/conv2d_transpose","functional/backends/mxnet/layers/conv3d","functional/backends/mxnet/layers/conv3d_transpose","functional/backends/mxnet/layers/depthwise_conv2d","functional/backends/mxnet/linear_algebra","functional/backends/mxnet/linear_algebra/cholesky","functional/backends/mxnet/linear_algebra/det","functional/backends/mxnet/linear_algebra/diagonal","functional/backends/mxnet/linear_algebra/eigvalsh","functional/backends/mxnet/linear_algebra/matrix_norm","functional/backends/mxnet/linear_algebra/pinv","functional/backends/mxnet/linear_algebra/qr","functional/backends/mxnet/linear_algebra/slogdet","functional/backends/mxnet/linear_algebra/svd","functional/backends/mxnet/linear_algebra/trace","functional/backends/mxnet/linear_algebra/vector_norm","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/manipulation","functional/backends/mxnet/manipulation/constant_pad","functional/backends/mxnet/manipulation/expand_dims","functional/backends/mxnet/manipulation/flip","functional/backends/mxnet/manipulation/repeat","functional/backends/mxnet/manipulation/split","functional/backends/mxnet/manipulation/tile","functional/backends/mxnet/manipulation/zero_pad","functional/backends/mxnet/old","functional/backends/mxnet/old/general","functional/backends/mxnet/old/general/abs","functional/backends/mxnet/old/general/arange","functional/backends/mxnet/old/general/broadcast_to","functional/backends/mxnet/old/general/cast","functional/backends/mxnet/old/general/clip","functional/backends/mxnet/old/general/compile","functional/backends/mxnet/old/general/concatenate","functional/backends/mxnet/old/general/cross","functional/backends/mxnet/old/general/dtype","functional/backends/mxnet/old/general/dtype_bits","functional/backends/mxnet/old/general/dtype_from_str","functional/backends/mxnet/old/general/dtype_to_str","functional/backends/mxnet/old/general/full","functional/backends/mxnet/old/general/identity","functional/backends/mxnet/old/general/indices_where","functional/backends/mxnet/old/general/linear_resample","functional/backends/mxnet/old/general/matmul","functional/backends/mxnet/old/general/meshgrid","functional/backends/mxnet/old/general/squeeze","functional/backends/mxnet/old/general/stack","functional/backends/mxnet/old/general/transpose","functional/backends/mxnet/old/general/where","functional/backends/mxnet/old/general/zeros_like","functional/backends/mxnet/old/linear_algebra","functional/backends/mxnet/old/reductions","functional/backends/mxnet/random","functional/backends/mxnet/random/multinomial","functional/backends/mxnet/random/randint","functional/backends/mxnet/random/random_normal","functional/backends/mxnet/random/random_uniform","functional/backends/mxnet/searching","functional/backends/mxnet/searching/argmax","functional/backends/mxnet/set","functional/backends/mxnet/sorting","functional/backends/mxnet/sorting/argsort","functional/backends/mxnet/statistical","functional/backends/mxnet/statistical/einsum","functional/backends/mxnet/statistical/max","functional/backends/mxnet/statistical/mean","functional/backends/mxnet/statistical/min","functional/backends/mxnet/statistical/prod","functional/backends/mxnet/statistical/std","functional/backends/mxnet/statistical/sum","functional/backends/mxnet/statistical/var","functional/backends/mxnet/utility","functional/backends/mxnet/utility/all","functional/backends/mxnet/utility/any","functional/backends/numpy","functional/backends/numpy/activations","functional/backends/numpy/activations/gelu","functional/backends/numpy/activations/softmax","functional/backends/numpy/constants","functional/backends/numpy/creation","functional/backends/numpy/creation/array","functional/backends/numpy/creation/asarray","functional/backends/numpy/creation/empty","functional/backends/numpy/creation/empty_like","functional/backends/numpy/creation/eye","functional/backends/numpy/creation/full_like","functional/backends/numpy/creation/linspace","functional/backends/numpy/creation/logspace","functional/backends/numpy/creation/ones","functional/backends/numpy/creation/ones_like","functional/backends/numpy/creation/tril","functional/backends/numpy/creation/triu","functional/backends/numpy/creation/zeros","functional/backends/numpy/data_type","functional/backends/numpy/data_type/Finfo:\n\n    def __init__","functional/backends/numpy/data_type/broadcast_to","functional/backends/numpy/data_type/finfo","functional/backends/numpy/data_type/iinfo","functional/backends/numpy/data_type/result_type","functional/backends/numpy/device","functional/backends/numpy/device/Profiler","functional/backends/numpy/elementwise","functional/backends/numpy/elementwise/abs","functional/backends/numpy/elementwise/acos","functional/backends/numpy/elementwise/acosh","functional/backends/numpy/elementwise/asin","functional/backends/numpy/elementwise/asinh","functional/backends/numpy/elementwise/atan","functional/backends/numpy/elementwise/bitwise_and","functional/backends/numpy/elementwise/bitwise_invert","functional/backends/numpy/elementwise/bitwise_or","functional/backends/numpy/elementwise/ceil","functional/backends/numpy/elementwise/cos","functional/backends/numpy/elementwise/cosh","functional/backends/numpy/elementwise/equal","functional/backends/numpy/elementwise/erf","functional/backends/numpy/elementwise/expm1","functional/backends/numpy/elementwise/floor","functional/backends/numpy/elementwise/greater_equal","functional/backends/numpy/elementwise/isfinite","functional/backends/numpy/elementwise/isinf","functional/backends/numpy/elementwise/isnan","functional/backends/numpy/elementwise/less","functional/backends/numpy/elementwise/less_equal","functional/backends/numpy/elementwise/log","functional/backends/numpy/elementwise/log10","functional/backends/numpy/elementwise/log1p","functional/backends/numpy/elementwise/log2","functional/backends/numpy/elementwise/logaddexp","functional/backends/numpy/elementwise/logical_and","functional/backends/numpy/elementwise/logical_not","functional/backends/numpy/elementwise/logical_or","functional/backends/numpy/elementwise/logical_xor","functional/backends/numpy/elementwise/negative","functional/backends/numpy/elementwise/not_equal","functional/backends/numpy/elementwise/positive","functional/backends/numpy/elementwise/remainder","functional/backends/numpy/elementwise/round","functional/backends/numpy/elementwise/sin","functional/backends/numpy/elementwise/sinh","functional/backends/numpy/elementwise/sqrt","functional/backends/numpy/elementwise/square","functional/backends/numpy/elementwise/tanh","functional/backends/numpy/general","functional/backends/numpy/general/cumprod","functional/backends/numpy/general/gather","functional/backends/numpy/general/gather_nd","functional/backends/numpy/general/inplace_decrement","functional/backends/numpy/general/inplace_increment","functional/backends/numpy/general/inplace_update","functional/backends/numpy/general/is_array","functional/backends/numpy/general/scatter_flat","functional/backends/numpy/general/scatter_nd","functional/backends/numpy/general/unstack","functional/backends/numpy/gradients","functional/backends/numpy/gradients/execute_with_gradients","functional/backends/numpy/gradients/is_variable","functional/backends/numpy/gradients/stop_gradient","functional/backends/numpy/gradients/variable","functional/backends/numpy/image","functional/backends/numpy/image/bilinear_resample","functional/backends/numpy/image/gradient_image","functional/backends/numpy/image/stack_images","functional/backends/numpy/layers","functional/backends/numpy/layers/conv1d","functional/backends/numpy/layers/conv1d_transpose","functional/backends/numpy/layers/conv2d","functional/backends/numpy/layers/conv2d_transpose","functional/backends/numpy/layers/conv3d","functional/backends/numpy/layers/conv3d_transpose","functional/backends/numpy/layers/depthwise_conv2d","functional/backends/numpy/linear_algebra","functional/backends/numpy/linear_algebra/cholesky","functional/backends/numpy/linear_algebra/det","functional/backends/numpy/linear_algebra/diagonal","functional/backends/numpy/linear_algebra/eigvalsh","functional/backends/numpy/linear_algebra/matmul","functional/backends/numpy/linear_algebra/matrix_norm","functional/backends/numpy/linear_algebra/matrix_transpose","functional/backends/numpy/linear_algebra/qr","functional/backends/numpy/linear_algebra/slogdet","functional/backends/numpy/linear_algebra/svd","functional/backends/numpy/linear_algebra/svdvals","functional/backends/numpy/linear_algebra/trace","functional/backends/numpy/linear_algebra/vector_norm","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/manipulation","functional/backends/numpy/manipulation/expand_dims","functional/backends/numpy/manipulation/flip","functional/backends/numpy/manipulation/permute_dims","functional/backends/numpy/manipulation/split","functional/backends/numpy/old","functional/backends/numpy/old/general","functional/backends/numpy/old/general/arange","functional/backends/numpy/old/general/argmin","functional/backends/numpy/old/general/cast","functional/backends/numpy/old/general/compile","functional/backends/numpy/old/general/concatenate","functional/backends/numpy/old/general/dtype","functional/backends/numpy/old/general/dtype_bits","functional/backends/numpy/old/general/dtype_from_str","functional/backends/numpy/old/general/dtype_to_str","functional/backends/numpy/old/general/full","functional/backends/numpy/old/general/identity","functional/backends/numpy/old/general/indices_where","functional/backends/numpy/old/general/linear_resample","functional/backends/numpy/old/general/one_hot","functional/backends/numpy/old/general/squeeze","functional/backends/numpy/old/general/transpose","functional/backends/numpy/old/general/zeros_like","functional/backends/numpy/old/linear_algebra","functional/backends/numpy/old/reductions","functional/backends/numpy/random","functional/backends/numpy/random/multinomial","functional/backends/numpy/searching","functional/backends/numpy/searching/argmax","functional/backends/numpy/set","functional/backends/numpy/sorting","functional/backends/numpy/sorting/argsort","functional/backends/numpy/statistical","functional/backends/numpy/statistical/einsum","functional/backends/numpy/statistical/max","functional/backends/numpy/statistical/mean","functional/backends/numpy/statistical/min","functional/backends/numpy/statistical/prod","functional/backends/numpy/statistical/sum","functional/backends/numpy/statistical/var","functional/backends/numpy/utility","functional/backends/numpy/utility/all","functional/backends/numpy/utility/any","functional/backends/tensorflow","functional/backends/tensorflow/activations","functional/backends/tensorflow/constants","functional/backends/tensorflow/creation","functional/backends/tensorflow/creation/array","functional/backends/tensorflow/creation/asarray","functional/backends/tensorflow/creation/empty","functional/backends/tensorflow/creation/empty_like","functional/backends/tensorflow/creation/eye","functional/backends/tensorflow/creation/full_like","functional/backends/tensorflow/creation/linspace","functional/backends/tensorflow/creation/logspace","functional/backends/tensorflow/creation/ones","functional/backends/tensorflow/creation/ones_like","functional/backends/tensorflow/creation/tril","functional/backends/tensorflow/creation/triu","functional/backends/tensorflow/creation/zeros","functional/backends/tensorflow/data_type","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__","functional/backends/tensorflow/data_type/broadcast_to ","functional/backends/tensorflow/data_type/finfo","functional/backends/tensorflow/data_type/iinfo","functional/backends/tensorflow/data_type/result_type","functional/backends/tensorflow/device","functional/backends/tensorflow/device/Profiler","functional/backends/tensorflow/device/dev","functional/backends/tensorflow/device/dev_from_str","functional/backends/tensorflow/device/dev_to_str","functional/backends/tensorflow/device/to_dev","functional/backends/tensorflow/device/tpu_is_available","functional/backends/tensorflow/elementwise","functional/backends/tensorflow/elementwise/abs","functional/backends/tensorflow/elementwise/acos","functional/backends/tensorflow/elementwise/acosh","functional/backends/tensorflow/elementwise/asin","functional/backends/tensorflow/elementwise/asinh","functional/backends/tensorflow/elementwise/atan","functional/backends/tensorflow/elementwise/bitwise_and","functional/backends/tensorflow/elementwise/bitwise_invert","functional/backends/tensorflow/elementwise/bitwise_or","functional/backends/tensorflow/elementwise/ceil","functional/backends/tensorflow/elementwise/cos","functional/backends/tensorflow/elementwise/cosh","functional/backends/tensorflow/elementwise/equal","functional/backends/tensorflow/elementwise/expm1","functional/backends/tensorflow/elementwise/floor","functional/backends/tensorflow/elementwise/greater_equal","functional/backends/tensorflow/elementwise/isfinite","functional/backends/tensorflow/elementwise/isinf","functional/backends/tensorflow/elementwise/isnan","functional/backends/tensorflow/elementwise/less","functional/backends/tensorflow/elementwise/less_equal","functional/backends/tensorflow/elementwise/log","functional/backends/tensorflow/elementwise/log10","functional/backends/tensorflow/elementwise/log1p","functional/backends/tensorflow/elementwise/log2","functional/backends/tensorflow/elementwise/logaddexp","functional/backends/tensorflow/elementwise/logical_and","functional/backends/tensorflow/elementwise/logical_not","functional/backends/tensorflow/elementwise/logical_or","functional/backends/tensorflow/elementwise/logical_xor","functional/backends/tensorflow/elementwise/negative","functional/backends/tensorflow/elementwise/not_equal","functional/backends/tensorflow/elementwise/positive","functional/backends/tensorflow/elementwise/remainder","functional/backends/tensorflow/elementwise/round","functional/backends/tensorflow/elementwise/sin","functional/backends/tensorflow/elementwise/sinh","functional/backends/tensorflow/elementwise/sqrt","functional/backends/tensorflow/elementwise/square","functional/backends/tensorflow/elementwise/tanh","functional/backends/tensorflow/general","functional/backends/tensorflow/general/gather","functional/backends/tensorflow/general/gather_nd","functional/backends/tensorflow/general/inplace_decrement","functional/backends/tensorflow/general/inplace_increment","functional/backends/tensorflow/general/inplace_update","functional/backends/tensorflow/general/is_array","functional/backends/tensorflow/general/scatter_flat","functional/backends/tensorflow/general/scatter_nd","functional/backends/tensorflow/general/unstack","functional/backends/tensorflow/gradients","functional/backends/tensorflow/gradients/execute_with_gradients","functional/backends/tensorflow/gradients/is_variable","functional/backends/tensorflow/gradients/stop_gradient","functional/backends/tensorflow/gradients/variable","functional/backends/tensorflow/image","functional/backends/tensorflow/image/bilinear_resample","functional/backends/tensorflow/image/gradient_image","functional/backends/tensorflow/image/stack_images","functional/backends/tensorflow/layers","functional/backends/tensorflow/layers/conv2d","functional/backends/tensorflow/layers/conv3d","functional/backends/tensorflow/layers/depthwise_conv2d","functional/backends/tensorflow/linear_algebra","functional/backends/tensorflow/linear_algebra/cholesky","functional/backends/tensorflow/linear_algebra/det","functional/backends/tensorflow/linear_algebra/diagonal","functional/backends/tensorflow/linear_algebra/eigvalsh","functional/backends/tensorflow/linear_algebra/matmul","functional/backends/tensorflow/linear_algebra/matrix_norm","functional/backends/tensorflow/linear_algebra/matrix_transpose","functional/backends/tensorflow/linear_algebra/qr","functional/backends/tensorflow/linear_algebra/slogdet","functional/backends/tensorflow/linear_algebra/svd","functional/backends/tensorflow/linear_algebra/svdvals","functional/backends/tensorflow/linear_algebra/trace","functional/backends/tensorflow/linear_algebra/vector_norm","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/manipulation","functional/backends/tensorflow/manipulation/constant_pad","functional/backends/tensorflow/manipulation/expand_dims","functional/backends/tensorflow/manipulation/flip","functional/backends/tensorflow/manipulation/permute_dims","functional/backends/tensorflow/manipulation/split","functional/backends/tensorflow/manipulation/swapaxes","functional/backends/tensorflow/manipulation/tile","functional/backends/tensorflow/manipulation/zero_pad","functional/backends/tensorflow/old","functional/backends/tensorflow/old/general","functional/backends/tensorflow/old/general/abs","functional/backends/tensorflow/old/general/arange","functional/backends/tensorflow/old/general/argmin","functional/backends/tensorflow/old/general/cast","functional/backends/tensorflow/old/general/concatenate","functional/backends/tensorflow/old/general/dtype","functional/backends/tensorflow/old/general/dtype_bits","functional/backends/tensorflow/old/general/dtype_from_str","functional/backends/tensorflow/old/general/dtype_to_str","functional/backends/tensorflow/old/general/full","functional/backends/tensorflow/old/general/identity","functional/backends/tensorflow/old/general/linear_resample","functional/backends/tensorflow/old/general/one_hot","functional/backends/tensorflow/old/general/squeeze","functional/backends/tensorflow/old/general/zeros_like","functional/backends/tensorflow/old/linear_algebra","functional/backends/tensorflow/old/reductions","functional/backends/tensorflow/random","functional/backends/tensorflow/random/multinomial","functional/backends/tensorflow/random/randint","functional/backends/tensorflow/random/random_normal","functional/backends/tensorflow/random/random_uniform","functional/backends/tensorflow/searching","functional/backends/tensorflow/searching/argmax","functional/backends/tensorflow/set","functional/backends/tensorflow/sorting","functional/backends/tensorflow/sorting/argsort","functional/backends/tensorflow/statistical","functional/backends/tensorflow/statistical/einsum","functional/backends/tensorflow/statistical/max","functional/backends/tensorflow/statistical/mean","functional/backends/tensorflow/statistical/min","functional/backends/tensorflow/statistical/prod","functional/backends/tensorflow/statistical/sum","functional/backends/tensorflow/statistical/var","functional/backends/tensorflow/utility","functional/backends/tensorflow/utility/all","functional/backends/tensorflow/utility/any","functional/backends/torch","functional/backends/torch/activations","functional/backends/torch/activations/gelu","functional/backends/torch/activations/leaky_relu","functional/backends/torch/activations/relu","functional/backends/torch/activations/sigmoid","functional/backends/torch/activations/softmax","functional/backends/torch/activations/softplus","functional/backends/torch/activations/tanh","functional/backends/torch/constants","functional/backends/torch/converters","functional/backends/torch/converters/IvyModule","functional/backends/torch/converters/to_ivy_module","functional/backends/torch/creation","functional/backends/torch/creation/array","functional/backends/torch/creation/asarray","functional/backends/torch/creation/empty","functional/backends/torch/creation/empty_like","functional/backends/torch/creation/eye","functional/backends/torch/creation/full_like","functional/backends/torch/creation/linspace","functional/backends/torch/creation/logspace","functional/backends/torch/creation/ones","functional/backends/torch/creation/ones_like","functional/backends/torch/creation/tril","functional/backends/torch/creation/triu","functional/backends/torch/creation/zeros","functional/backends/torch/data_type","functional/backends/torch/data_type/Finfo:\n\n    def __init__","functional/backends/torch/data_type/broadcast_to","functional/backends/torch/data_type/finfo","functional/backends/torch/data_type/iinfo","functional/backends/torch/data_type/result_type","functional/backends/torch/device","functional/backends/torch/device/Profiler","functional/backends/torch/device/clear_mem_on_dev","functional/backends/torch/device/dev","functional/backends/torch/device/dev_from_str","functional/backends/torch/device/dev_to_str","functional/backends/torch/device/to_dev","functional/backends/torch/device/tpu_is_available","functional/backends/torch/elementwise","functional/backends/torch/elementwise/abs","functional/backends/torch/elementwise/acos","functional/backends/torch/elementwise/acosh","functional/backends/torch/elementwise/asin","functional/backends/torch/elementwise/asinh","functional/backends/torch/elementwise/atan","functional/backends/torch/elementwise/atan2","functional/backends/torch/elementwise/atanh","functional/backends/torch/elementwise/bitwise_and","functional/backends/torch/elementwise/bitwise_invert","functional/backends/torch/elementwise/bitwise_or","functional/backends/torch/elementwise/ceil","functional/backends/torch/elementwise/cos","functional/backends/torch/elementwise/cosh","functional/backends/torch/elementwise/equal","functional/backends/torch/elementwise/erf","functional/backends/torch/elementwise/exp","functional/backends/torch/elementwise/expm1","functional/backends/torch/elementwise/floor","functional/backends/torch/elementwise/greater_equal","functional/backends/torch/elementwise/isfinite","functional/backends/torch/elementwise/isinf","functional/backends/torch/elementwise/isnan","functional/backends/torch/elementwise/less","functional/backends/torch/elementwise/less_equal","functional/backends/torch/elementwise/log","functional/backends/torch/elementwise/log10","functional/backends/torch/elementwise/log1p","functional/backends/torch/elementwise/log2","functional/backends/torch/elementwise/logaddexp","functional/backends/torch/elementwise/logical_and","functional/backends/torch/elementwise/logical_not","functional/backends/torch/elementwise/logical_or","functional/backends/torch/elementwise/logical_xor","functional/backends/torch/elementwise/negative","functional/backends/torch/elementwise/not_equal","functional/backends/torch/elementwise/positive","functional/backends/torch/elementwise/remainder","functional/backends/torch/elementwise/round","functional/backends/torch/elementwise/sin","functional/backends/torch/elementwise/sinh","functional/backends/torch/elementwise/sqrt","functional/backends/torch/elementwise/square","functional/backends/torch/elementwise/tan","functional/backends/torch/elementwise/tanh","functional/backends/torch/general","functional/backends/torch/general/array_equal","functional/backends/torch/general/container_types","functional/backends/torch/general/copy_array","functional/backends/torch/general/cumprod","functional/backends/torch/general/cumsum","functional/backends/torch/general/floormod","functional/backends/torch/general/gather","functional/backends/torch/general/gather_nd","functional/backends/torch/general/inplace_decrement","functional/backends/torch/general/inplace_increment","functional/backends/torch/general/inplace_update","functional/backends/torch/general/is_array","functional/backends/torch/general/scatter_flat","functional/backends/torch/general/scatter_nd","functional/backends/torch/general/to_list","functional/backends/torch/general/to_numpy","functional/backends/torch/general/to_scalar","functional/backends/torch/general/unstack","functional/backends/torch/gradients","functional/backends/torch/gradients/execute_with_gradients","functional/backends/torch/gradients/is_variable","functional/backends/torch/gradients/stop_gradient","functional/backends/torch/gradients/variable","functional/backends/torch/gradients/variable_data","functional/backends/torch/image","functional/backends/torch/image/bilinear_resample","functional/backends/torch/image/gradient_image","functional/backends/torch/image/stack_images","functional/backends/torch/layers","functional/backends/torch/layers/conv1d","functional/backends/torch/layers/conv1d_transpose","functional/backends/torch/layers/conv2d","functional/backends/torch/layers/conv2d_transpose","functional/backends/torch/layers/conv3d","functional/backends/torch/layers/conv3d_transpose","functional/backends/torch/layers/depthwise_conv2d","functional/backends/torch/linear_algebra","functional/backends/torch/linear_algebra/cholesky","functional/backends/torch/linear_algebra/det","functional/backends/torch/linear_algebra/diagonal","functional/backends/torch/linear_algebra/eigvalsh","functional/backends/torch/linear_algebra/inv","functional/backends/torch/linear_algebra/matmul","functional/backends/torch/linear_algebra/matrix_norm","functional/backends/torch/linear_algebra/matrix_transpose","functional/backends/torch/linear_algebra/pinv","functional/backends/torch/linear_algebra/qr","functional/backends/torch/linear_algebra/slogdet","functional/backends/torch/linear_algebra/svd","functional/backends/torch/linear_algebra/svdvals","functional/backends/torch/linear_algebra/trace","functional/backends/torch/linear_algebra/vector_norm","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/manipulation","functional/backends/torch/manipulation/constant_pad","functional/backends/torch/manipulation/expand_dims","functional/backends/torch/manipulation/flip","functional/backends/torch/manipulation/permute_dims","functional/backends/torch/manipulation/repeat","functional/backends/torch/manipulation/split","functional/backends/torch/manipulation/swapaxes","functional/backends/torch/manipulation/tile","functional/backends/torch/manipulation/zero_pad","functional/backends/torch/old","functional/backends/torch/old/general","functional/backends/torch/old/general/abs","functional/backends/torch/old/general/arange","functional/backends/torch/old/general/argmin","functional/backends/torch/old/general/broadcast_to","functional/backends/torch/old/general/cast","functional/backends/torch/old/general/clip","functional/backends/torch/old/general/compile","functional/backends/torch/old/general/concatenate","functional/backends/torch/old/general/cross","functional/backends/torch/old/general/current_framework_str","functional/backends/torch/old/general/dtype","functional/backends/torch/old/general/dtype_bits","functional/backends/torch/old/general/dtype_from_str","functional/backends/torch/old/general/dtype_to_str","functional/backends/torch/old/general/full","functional/backends/torch/old/general/get_num_dims","functional/backends/torch/old/general/identity","functional/backends/torch/old/general/indices_where","functional/backends/torch/old/general/linear_resample","functional/backends/torch/old/general/maximum","functional/backends/torch/old/general/meshgrid","functional/backends/torch/old/general/minimum","functional/backends/torch/old/general/multiprocessing","functional/backends/torch/old/general/one_hot","functional/backends/torch/old/general/reshape","functional/backends/torch/old/general/shape","functional/backends/torch/old/general/squeeze","functional/backends/torch/old/general/stack","functional/backends/torch/old/general/transpose","functional/backends/torch/old/general/where","functional/backends/torch/old/general/zeros_like","functional/backends/torch/old/linear_algebra","functional/backends/torch/old/reductions","functional/backends/torch/random","functional/backends/torch/random/multinomial","functional/backends/torch/random/randint","functional/backends/torch/random/random_normal","functional/backends/torch/random/random_uniform","functional/backends/torch/random/seed","functional/backends/torch/random/shuffle","functional/backends/torch/searching","functional/backends/torch/searching/argmax","functional/backends/torch/set","functional/backends/torch/sorting","functional/backends/torch/sorting/argsort","functional/backends/torch/statistical","functional/backends/torch/statistical/einsum","functional/backends/torch/statistical/max","functional/backends/torch/statistical/mean","functional/backends/torch/statistical/min","functional/backends/torch/statistical/prod","functional/backends/torch/statistical/sum","functional/backends/torch/statistical/var","functional/backends/torch/utility","functional/backends/torch/utility/all","functional/backends/torch/utility/any","functional/ivy","functional/ivy/activations","functional/ivy/activations/gelu","functional/ivy/activations/leaky_relu","functional/ivy/activations/relu","functional/ivy/activations/sigmoid","functional/ivy/activations/softmax","functional/ivy/activations/softplus","functional/ivy/activations/tanh","functional/ivy/compilation","functional/ivy/compilation/compile","functional/ivy/constants","functional/ivy/creation","functional/ivy/creation/array","functional/ivy/creation/asarray","functional/ivy/creation/empty","functional/ivy/creation/empty_like","functional/ivy/creation/eye","functional/ivy/creation/full_like","functional/ivy/creation/linspace","functional/ivy/creation/logspace","functional/ivy/creation/ones","functional/ivy/creation/ones_like","functional/ivy/creation/tril","functional/ivy/creation/triu","functional/ivy/creation/zeros","functional/ivy/data_type","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/broadcast_to","functional/ivy/data_type/cast","functional/ivy/data_type/closest_valid_dtype","functional/ivy/data_type/convert_dtype","functional/ivy/data_type/default_dtype","functional/ivy/data_type/default_float_dtype","functional/ivy/data_type/default_int_dtype","functional/ivy/data_type/dtype","functional/ivy/data_type/dtype_bits","functional/ivy/data_type/dtype_from_str","functional/ivy/data_type/dtype_to_str","functional/ivy/data_type/finfo","functional/ivy/data_type/iinfo","functional/ivy/data_type/invalid_dtype","functional/ivy/data_type/is_float_dtype","functional/ivy/data_type/is_int_dtype","functional/ivy/data_type/result_type","functional/ivy/data_type/set_default_dtype","functional/ivy/data_type/set_default_float_dtype","functional/ivy/data_type/set_default_int_dtype","functional/ivy/data_type/unset_default_dtype","functional/ivy/data_type/unset_default_float_dtype","functional/ivy/data_type/unset_default_int_dtype","functional/ivy/data_type/valid_dtype","functional/ivy/device","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/device/DevClonedItem","functional/ivy/device/DevClonedIter","functional/ivy/device/DevClonedNest","functional/ivy/device/DevDistItem","functional/ivy/device/DevDistIter","functional/ivy/device/DevDistNest","functional/ivy/device/DevManager:\n\n    def __init__","functional/ivy/device/DevMapper","functional/ivy/device/DevMapperMultiProc","functional/ivy/device/MultiDev:\n\n    def __init__","functional/ivy/device/MultiDevItem","functional/ivy/device/MultiDevIter","functional/ivy/device/MultiDevNest","functional/ivy/device/Profiler","functional/ivy/device/clear_mem_on_dev","functional/ivy/device/default_device","functional/ivy/device/dev","functional/ivy/device/dev_clone","functional/ivy/device/dev_clone_array","functional/ivy/device/dev_clone_iter","functional/ivy/device/dev_clone_nest","functional/ivy/device/dev_dist","functional/ivy/device/dev_dist_array","functional/ivy/device/dev_dist_iter","functional/ivy/device/dev_dist_nest","functional/ivy/device/dev_from_str","functional/ivy/device/dev_to_str","functional/ivy/device/dev_unify","functional/ivy/device/dev_unify_array","functional/ivy/device/dev_unify_iter","functional/ivy/device/dev_unify_nest","functional/ivy/device/dev_util","functional/ivy/device/get_all_arrays_on_dev","functional/ivy/device/gpu_is_available","functional/ivy/device/num_arrays_on_dev","functional/ivy/device/num_cpu_cores","functional/ivy/device/num_gpus","functional/ivy/device/percent_used_mem_on_dev","functional/ivy/device/print_all_arrays_on_dev","functional/ivy/device/set_default_device","functional/ivy/device/set_split_factor","functional/ivy/device/split_factor","functional/ivy/device/split_func_call","functional/ivy/device/to_dev","functional/ivy/device/total_mem_on_dev","functional/ivy/device/tpu_is_available","functional/ivy/device/unset_default_device","functional/ivy/device/used_mem_on_dev","functional/ivy/elementwise","functional/ivy/elementwise/abs","functional/ivy/elementwise/acos","functional/ivy/elementwise/acosh","functional/ivy/elementwise/asin","functional/ivy/elementwise/asinh","functional/ivy/elementwise/atan","functional/ivy/elementwise/atan2","functional/ivy/elementwise/atanh","functional/ivy/elementwise/bitwise_and","functional/ivy/elementwise/bitwise_invert","functional/ivy/elementwise/bitwise_or","functional/ivy/elementwise/ceil","functional/ivy/elementwise/cos","functional/ivy/elementwise/cosh","functional/ivy/elementwise/divide","functional/ivy/elementwise/erf","functional/ivy/elementwise/exp","functional/ivy/elementwise/expm1","functional/ivy/elementwise/floor","functional/ivy/elementwise/greater_equal","functional/ivy/elementwise/isfinite","functional/ivy/elementwise/isinf","functional/ivy/elementwise/isnan","functional/ivy/elementwise/less","functional/ivy/elementwise/less_equal","functional/ivy/elementwise/log","functional/ivy/elementwise/log10","functional/ivy/elementwise/log1p","functional/ivy/elementwise/log2","functional/ivy/elementwise/logaddexp","functional/ivy/elementwise/logical_and","functional/ivy/elementwise/logical_not","functional/ivy/elementwise/logical_or","functional/ivy/elementwise/logical_xor","functional/ivy/elementwise/negative","functional/ivy/elementwise/not_equal","functional/ivy/elementwise/positive","functional/ivy/elementwise/remainder","functional/ivy/elementwise/round","functional/ivy/elementwise/sin","functional/ivy/elementwise/sinh","functional/ivy/elementwise/sqrt","functional/ivy/elementwise/square","functional/ivy/elementwise/tan","functional/ivy/elementwise/tanh","functional/ivy/general","functional/ivy/general/all_equal","functional/ivy/general/arg_names","functional/ivy/general/array_equal","functional/ivy/general/arrays_equal","functional/ivy/general/assert_supports_inplace","functional/ivy/general/cache_fn","functional/ivy/general/clip_matrix_norm","functional/ivy/general/clip_vector_norm","functional/ivy/general/container_types","functional/ivy/general/copy_array","functional/ivy/general/cumprod","functional/ivy/general/cumsum","functional/ivy/general/current_framework_str","functional/ivy/general/default","functional/ivy/general/einops_rearrange","functional/ivy/general/einops_reduce","functional/ivy/general/einops_repeat","functional/ivy/general/exists","functional/ivy/general/floormod","functional/ivy/general/fourier_encode","functional/ivy/general/gather","functional/ivy/general/gather_nd","functional/ivy/general/get_all_arrays_in_memory","functional/ivy/general/get_min_base","functional/ivy/general/get_min_denominator","functional/ivy/general/get_referrers_recursive","functional/ivy/general/has_nans","functional/ivy/general/inplace_arrays_supported","functional/ivy/general/inplace_decrement","functional/ivy/general/inplace_increment","functional/ivy/general/inplace_update","functional/ivy/general/inplace_variables_supported","functional/ivy/general/is_array","functional/ivy/general/match_kwargs","functional/ivy/general/num_arrays_in_memory","functional/ivy/general/print_all_arrays_in_memory","functional/ivy/general/queue_timeout","functional/ivy/general/scatter_flat","functional/ivy/general/scatter_nd","functional/ivy/general/set_min_base","functional/ivy/general/set_min_denominator","functional/ivy/general/set_queue_timeout","functional/ivy/general/set_tmp_dir","functional/ivy/general/shape_to_tuple","functional/ivy/general/stable_divide","functional/ivy/general/stable_pow","functional/ivy/general/supports_inplace","functional/ivy/general/tmp_dir","functional/ivy/general/to_list","functional/ivy/general/to_numpy","functional/ivy/general/to_scalar","functional/ivy/general/try_else_none","functional/ivy/general/unstack","functional/ivy/general/value_is_nan","functional/ivy/gradients","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/gradients/adam_step","functional/ivy/gradients/adam_update","functional/ivy/gradients/execute_with_gradients","functional/ivy/gradients/gradient_descent_update","functional/ivy/gradients/is_variable","functional/ivy/gradients/lamb_update","functional/ivy/gradients/lars_update","functional/ivy/gradients/optimizer_update","functional/ivy/gradients/set_with_grads","functional/ivy/gradients/stop_gradient","functional/ivy/gradients/unset_with_grads","functional/ivy/gradients/variable","functional/ivy/gradients/variable_data","functional/ivy/gradients/with_grads","functional/ivy/image","functional/ivy/image/bilinear_resample","functional/ivy/image/float_img_to_uint8_img","functional/ivy/image/gradient_image","functional/ivy/image/random_crop","functional/ivy/image/stack_images","functional/ivy/image/uint8_img_to_float_img","functional/ivy/layers","functional/ivy/layers/conv1d","functional/ivy/layers/conv1d_transpose","functional/ivy/layers/conv2d","functional/ivy/layers/conv2d_transpose","functional/ivy/layers/conv3d","functional/ivy/layers/conv3d_transpose","functional/ivy/layers/depthwise_conv2d","functional/ivy/layers/dropout","functional/ivy/layers/linear","functional/ivy/layers/lstm_update","functional/ivy/layers/multi_head_attention","functional/ivy/layers/scaled_dot_product_attention","functional/ivy/linear_algebra","functional/ivy/linear_algebra/cholesky","functional/ivy/linear_algebra/det","functional/ivy/linear_algebra/diagonal","functional/ivy/linear_algebra/eigvalsh","functional/ivy/linear_algebra/inv","functional/ivy/linear_algebra/matmul","functional/ivy/linear_algebra/matrix_norm","functional/ivy/linear_algebra/matrix_transpose","functional/ivy/linear_algebra/pinv","functional/ivy/linear_algebra/qr","functional/ivy/linear_algebra/slodget","functional/ivy/linear_algebra/svd","functional/ivy/linear_algebra/svdvals","functional/ivy/linear_algebra/trace","functional/ivy/linear_algebra/vector_norm","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix","functional/ivy/losses","functional/ivy/losses/binary_cross_entropy","functional/ivy/losses/cross_entropy","functional/ivy/losses/sparse_cross_entropy","functional/ivy/manipulation","functional/ivy/manipulation/constant_pad","functional/ivy/manipulation/expand_dims","functional/ivy/manipulation/flip","functional/ivy/manipulation/permute_dims","functional/ivy/manipulation/repeat","functional/ivy/manipulation/split","functional/ivy/manipulation/swapaxes","functional/ivy/manipulation/tile","functional/ivy/manipulation/zero_pad","functional/ivy/meta","functional/ivy/meta/fomaml_step","functional/ivy/meta/maml_step","functional/ivy/meta/reptile_step","functional/ivy/nest","functional/ivy/nest/all_nested_indices","functional/ivy/nest/copy_nest","functional/ivy/nest/index_nest","functional/ivy/nest/map","functional/ivy/nest/map_nest_at_index","functional/ivy/nest/map_nest_at_indices","functional/ivy/nest/multi_index_nest","functional/ivy/nest/nested_indices_where","functional/ivy/nest/nested_map","functional/ivy/nest/set_nest_at_index","functional/ivy/nest/set_nest_at_indices","functional/ivy/norms","functional/ivy/norms/layer_norm","functional/ivy/old","functional/ivy/old/dtype","functional/ivy/old/general","functional/ivy/old/general/abs","functional/ivy/old/general/arange","functional/ivy/old/general/argmin","functional/ivy/old/general/broadcast_to","functional/ivy/old/general/clip","functional/ivy/old/general/concatenate","functional/ivy/old/general/cross","functional/ivy/old/general/equal","functional/ivy/old/general/floor","functional/ivy/old/general/full","functional/ivy/old/general/get_num_dims","functional/ivy/old/general/identity","functional/ivy/old/general/indices_where","functional/ivy/old/general/linear_resample","functional/ivy/old/general/matmul","functional/ivy/old/general/maximum","functional/ivy/old/general/meshgrid","functional/ivy/old/general/minimum","functional/ivy/old/general/multiprocessing","functional/ivy/old/general/one_hot","functional/ivy/old/general/ones","functional/ivy/old/general/reshape","functional/ivy/old/general/shape","functional/ivy/old/general/squeeze","functional/ivy/old/general/stack","functional/ivy/old/general/transpose","functional/ivy/old/general/where","functional/ivy/old/general/zeros_like","functional/ivy/old/linalg","functional/ivy/old/reductions","functional/ivy/random","functional/ivy/random/multinomial","functional/ivy/random/randint","functional/ivy/random/random_normal","functional/ivy/random/random_uniform","functional/ivy/random/seed","functional/ivy/random/shuffle","functional/ivy/searching","functional/ivy/searching/argmax","functional/ivy/set","functional/ivy/sorting","functional/ivy/sorting/argsort","functional/ivy/statistical","functional/ivy/statistical/einsum","functional/ivy/statistical/max","functional/ivy/statistical/mean","functional/ivy/statistical/min","functional/ivy/statistical/prod","functional/ivy/statistical/std","functional/ivy/statistical/sum","functional/ivy/statistical/var","functional/ivy/utility","functional/ivy/utility/all","functional/ivy/utility/any","index","index_append","index_prepend","roadmap","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","verbosity","verbosity/cprint"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","background.rst","background/ml_explosion.rst","background/standardization.rst","background/why_unify.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","design.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","extensions.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/activations.rst","functional/backends/jax/activations/softmax.rst","functional/backends/jax/constants.rst","functional/backends/jax/converters.rst","functional/backends/jax/converters/IvyModule.rst","functional/backends/jax/converters/to_ivy_module.rst","functional/backends/jax/creation.rst","functional/backends/jax/creation/array.rst","functional/backends/jax/creation/asarray.rst","functional/backends/jax/creation/empty.rst","functional/backends/jax/creation/empty_like.rst","functional/backends/jax/creation/eye.rst","functional/backends/jax/creation/full_like.rst","functional/backends/jax/creation/linspace.rst","functional/backends/jax/creation/logspace.rst","functional/backends/jax/creation/ones.rst","functional/backends/jax/creation/ones_like.rst","functional/backends/jax/creation/tril.rst","functional/backends/jax/creation/triu.rst","functional/backends/jax/creation/zeros.rst","functional/backends/jax/data_type.rst","functional/backends/jax/data_type/Finfo:\n\n    def __init__.rst","functional/backends/jax/data_type/broadcast_to.rst","functional/backends/jax/data_type/finfo.rst","functional/backends/jax/data_type/iinfo.rst","functional/backends/jax/data_type/result_type.rst","functional/backends/jax/device.rst","functional/backends/jax/device/Profiler.rst","functional/backends/jax/device/dev.rst","functional/backends/jax/device/dev_from_str.rst","functional/backends/jax/device/dev_to_str.rst","functional/backends/jax/device/num_gpus.rst","functional/backends/jax/device/to_dev.rst","functional/backends/jax/elementwise.rst","functional/backends/jax/elementwise/abs.rst","functional/backends/jax/elementwise/acos.rst","functional/backends/jax/elementwise/acosh.rst","functional/backends/jax/elementwise/asin.rst","functional/backends/jax/elementwise/asinh.rst","functional/backends/jax/elementwise/atan.rst","functional/backends/jax/elementwise/bitwise_and.rst","functional/backends/jax/elementwise/bitwise_invert.rst","functional/backends/jax/elementwise/bitwise_or.rst","functional/backends/jax/elementwise/ceil.rst","functional/backends/jax/elementwise/cos.rst","functional/backends/jax/elementwise/cosh.rst","functional/backends/jax/elementwise/equal.rst","functional/backends/jax/elementwise/expm1.rst","functional/backends/jax/elementwise/floor.rst","functional/backends/jax/elementwise/greater_equal.rst","functional/backends/jax/elementwise/isfinite.rst","functional/backends/jax/elementwise/isinf.rst","functional/backends/jax/elementwise/isnan.rst","functional/backends/jax/elementwise/less.rst","functional/backends/jax/elementwise/less_equal.rst","functional/backends/jax/elementwise/log.rst","functional/backends/jax/elementwise/log10.rst","functional/backends/jax/elementwise/log1p.rst","functional/backends/jax/elementwise/log2.rst","functional/backends/jax/elementwise/logaddexp.rst","functional/backends/jax/elementwise/logical_and.rst","functional/backends/jax/elementwise/logical_not.rst","functional/backends/jax/elementwise/logical_or.rst","functional/backends/jax/elementwise/logical_xor.rst","functional/backends/jax/elementwise/negative.rst","functional/backends/jax/elementwise/not_equal.rst","functional/backends/jax/elementwise/positive.rst","functional/backends/jax/elementwise/remainder.rst","functional/backends/jax/elementwise/round.rst","functional/backends/jax/elementwise/sin.rst","functional/backends/jax/elementwise/sinh.rst","functional/backends/jax/elementwise/sqrt.rst","functional/backends/jax/elementwise/square.rst","functional/backends/jax/elementwise/tanh.rst","functional/backends/jax/general.rst","functional/backends/jax/general/cumprod.rst","functional/backends/jax/general/gather.rst","functional/backends/jax/general/gather_nd.rst","functional/backends/jax/general/inplace_decrement.rst","functional/backends/jax/general/inplace_increment.rst","functional/backends/jax/general/inplace_update.rst","functional/backends/jax/general/is_array.rst","functional/backends/jax/general/scatter_flat.rst","functional/backends/jax/general/scatter_nd.rst","functional/backends/jax/general/unstack.rst","functional/backends/jax/gradients.rst","functional/backends/jax/gradients/execute_with_gradients.rst","functional/backends/jax/gradients/is_variable.rst","functional/backends/jax/image.rst","functional/backends/jax/image/bilinear_resample.rst","functional/backends/jax/image/gradient_image.rst","functional/backends/jax/image/stack_images.rst","functional/backends/jax/layers.rst","functional/backends/jax/layers/conv1d.rst","functional/backends/jax/layers/conv1d_transpose.rst","functional/backends/jax/layers/conv2d.rst","functional/backends/jax/layers/conv2d_transpose.rst","functional/backends/jax/layers/conv3d.rst","functional/backends/jax/layers/conv3d_transpose.rst","functional/backends/jax/layers/depthwise_conv2d.rst","functional/backends/jax/linear_algebra.rst","functional/backends/jax/linear_algebra/cholesky.rst","functional/backends/jax/linear_algebra/det.rst","functional/backends/jax/linear_algebra/diagonal.rst","functional/backends/jax/linear_algebra/eigvalsh.rst","functional/backends/jax/linear_algebra/matmul.rst","functional/backends/jax/linear_algebra/matrix_norm.rst","functional/backends/jax/linear_algebra/matrix_transpose.rst","functional/backends/jax/linear_algebra/qr.rst","functional/backends/jax/linear_algebra/slogdet.rst","functional/backends/jax/linear_algebra/svd.rst","functional/backends/jax/linear_algebra/svdvals.rst","functional/backends/jax/linear_algebra/trace.rst","functional/backends/jax/linear_algebra/vector_norm.rst","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/manipulation.rst","functional/backends/jax/manipulation/expand_dims.rst","functional/backends/jax/manipulation/flip.rst","functional/backends/jax/manipulation/permute_dims.rst","functional/backends/jax/manipulation/split.rst","functional/backends/jax/old.rst","functional/backends/jax/old/general.rst","functional/backends/jax/old/general/arange.rst","functional/backends/jax/old/general/argmin.rst","functional/backends/jax/old/general/cast.rst","functional/backends/jax/old/general/concatenate.rst","functional/backends/jax/old/general/dtype.rst","functional/backends/jax/old/general/dtype_bits.rst","functional/backends/jax/old/general/dtype_from_str.rst","functional/backends/jax/old/general/dtype_to_str.rst","functional/backends/jax/old/general/full.rst","functional/backends/jax/old/general/identity.rst","functional/backends/jax/old/general/indices_where.rst","functional/backends/jax/old/general/linear_resample.rst","functional/backends/jax/old/general/one_hot.rst","functional/backends/jax/old/general/squeeze.rst","functional/backends/jax/old/general/transpose.rst","functional/backends/jax/old/general/zeros_like.rst","functional/backends/jax/old/linear_algebra.rst","functional/backends/jax/old/reductions.rst","functional/backends/jax/random.rst","functional/backends/jax/random/multinomial.rst","functional/backends/jax/random/randint.rst","functional/backends/jax/random/random_normal.rst","functional/backends/jax/random/random_uniform.rst","functional/backends/jax/random/seed.rst","functional/backends/jax/random/shuffle.rst","functional/backends/jax/searching.rst","functional/backends/jax/searching/argmax.rst","functional/backends/jax/set.rst","functional/backends/jax/sorting.rst","functional/backends/jax/sorting/argsort.rst","functional/backends/jax/statistical.rst","functional/backends/jax/statistical/einsum.rst","functional/backends/jax/statistical/max.rst","functional/backends/jax/statistical/mean.rst","functional/backends/jax/statistical/min.rst","functional/backends/jax/statistical/prod.rst","functional/backends/jax/statistical/sum.rst","functional/backends/jax/statistical/var.rst","functional/backends/jax/utility.rst","functional/backends/jax/utility/all.rst","functional/backends/jax/utility/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/activations.rst","functional/backends/mxnet/activations/gelu.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/constants.rst","functional/backends/mxnet/creation.rst","functional/backends/mxnet/creation/array.rst","functional/backends/mxnet/creation/asarray.rst","functional/backends/mxnet/creation/empty.rst","functional/backends/mxnet/creation/eye.rst","functional/backends/mxnet/creation/linspace.rst","functional/backends/mxnet/creation/logspace.rst","functional/backends/mxnet/creation/ones.rst","functional/backends/mxnet/creation/ones_like.rst","functional/backends/mxnet/creation/tril.rst","functional/backends/mxnet/creation/zeros.rst","functional/backends/mxnet/data_type.rst","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/data_type/finfo.rst","functional/backends/mxnet/data_type/iinfo.rst","functional/backends/mxnet/device.rst","functional/backends/mxnet/device/Profiler.rst","functional/backends/mxnet/device/dev.rst","functional/backends/mxnet/device/dev_from_str.rst","functional/backends/mxnet/device/dev_to_str.rst","functional/backends/mxnet/device/to_dev.rst","functional/backends/mxnet/elementwise.rst","functional/backends/mxnet/elementwise/acos.rst","functional/backends/mxnet/elementwise/acosh.rst","functional/backends/mxnet/elementwise/bitwise_and.rst","functional/backends/mxnet/elementwise/bitwise_or.rst","functional/backends/mxnet/elementwise/ceil.rst","functional/backends/mxnet/elementwise/floor.rst","functional/backends/mxnet/elementwise/greater_equal.rst","functional/backends/mxnet/elementwise/isfinite.rst","functional/backends/mxnet/elementwise/isinf.rst","functional/backends/mxnet/elementwise/isnan.rst","functional/backends/mxnet/elementwise/less.rst","functional/backends/mxnet/elementwise/logical_and.rst","functional/backends/mxnet/elementwise/logical_not.rst","functional/backends/mxnet/elementwise/logical_or.rst","functional/backends/mxnet/elementwise/logical_xor.rst","functional/backends/mxnet/elementwise/negative.rst","functional/backends/mxnet/elementwise/round.rst","functional/backends/mxnet/elementwise/sin.rst","functional/backends/mxnet/elementwise/sinh.rst","functional/backends/mxnet/elementwise/sqrt.rst","functional/backends/mxnet/elementwise/square.rst","functional/backends/mxnet/elementwise/tanh.rst","functional/backends/mxnet/general.rst","functional/backends/mxnet/general/array_equal.rst","functional/backends/mxnet/general/cumprod.rst","functional/backends/mxnet/general/floormod.rst","functional/backends/mxnet/general/gather.rst","functional/backends/mxnet/general/gather_nd.rst","functional/backends/mxnet/general/inplace_decrement.rst","functional/backends/mxnet/general/inplace_increment.rst","functional/backends/mxnet/general/inplace_update.rst","functional/backends/mxnet/general/is_array.rst","functional/backends/mxnet/general/scatter_flat.rst","functional/backends/mxnet/general/scatter_nd.rst","functional/backends/mxnet/general/unstack.rst","functional/backends/mxnet/gradients.rst","functional/backends/mxnet/gradients/execute_with_gradients.rst","functional/backends/mxnet/gradients/is_variable.rst","functional/backends/mxnet/gradients/stop_gradient.rst","functional/backends/mxnet/gradients/variable.rst","functional/backends/mxnet/image.rst","functional/backends/mxnet/image/bilinear_resample.rst","functional/backends/mxnet/image/gradient_image.rst","functional/backends/mxnet/image/stack_images.rst","functional/backends/mxnet/layers.rst","functional/backends/mxnet/layers/conv1d.rst","functional/backends/mxnet/layers/conv1d_transpose.rst","functional/backends/mxnet/layers/conv2d.rst","functional/backends/mxnet/layers/conv2d_transpose.rst","functional/backends/mxnet/layers/conv3d.rst","functional/backends/mxnet/layers/conv3d_transpose.rst","functional/backends/mxnet/layers/depthwise_conv2d.rst","functional/backends/mxnet/linear_algebra.rst","functional/backends/mxnet/linear_algebra/cholesky.rst","functional/backends/mxnet/linear_algebra/det.rst","functional/backends/mxnet/linear_algebra/diagonal.rst","functional/backends/mxnet/linear_algebra/eigvalsh.rst","functional/backends/mxnet/linear_algebra/matrix_norm.rst","functional/backends/mxnet/linear_algebra/pinv.rst","functional/backends/mxnet/linear_algebra/qr.rst","functional/backends/mxnet/linear_algebra/slogdet.rst","functional/backends/mxnet/linear_algebra/svd.rst","functional/backends/mxnet/linear_algebra/trace.rst","functional/backends/mxnet/linear_algebra/vector_norm.rst","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/manipulation.rst","functional/backends/mxnet/manipulation/constant_pad.rst","functional/backends/mxnet/manipulation/expand_dims.rst","functional/backends/mxnet/manipulation/flip.rst","functional/backends/mxnet/manipulation/repeat.rst","functional/backends/mxnet/manipulation/split.rst","functional/backends/mxnet/manipulation/tile.rst","functional/backends/mxnet/manipulation/zero_pad.rst","functional/backends/mxnet/old.rst","functional/backends/mxnet/old/general.rst","functional/backends/mxnet/old/general/abs.rst","functional/backends/mxnet/old/general/arange.rst","functional/backends/mxnet/old/general/broadcast_to.rst","functional/backends/mxnet/old/general/cast.rst","functional/backends/mxnet/old/general/clip.rst","functional/backends/mxnet/old/general/compile.rst","functional/backends/mxnet/old/general/concatenate.rst","functional/backends/mxnet/old/general/cross.rst","functional/backends/mxnet/old/general/dtype.rst","functional/backends/mxnet/old/general/dtype_bits.rst","functional/backends/mxnet/old/general/dtype_from_str.rst","functional/backends/mxnet/old/general/dtype_to_str.rst","functional/backends/mxnet/old/general/full.rst","functional/backends/mxnet/old/general/identity.rst","functional/backends/mxnet/old/general/indices_where.rst","functional/backends/mxnet/old/general/linear_resample.rst","functional/backends/mxnet/old/general/matmul.rst","functional/backends/mxnet/old/general/meshgrid.rst","functional/backends/mxnet/old/general/squeeze.rst","functional/backends/mxnet/old/general/stack.rst","functional/backends/mxnet/old/general/transpose.rst","functional/backends/mxnet/old/general/where.rst","functional/backends/mxnet/old/general/zeros_like.rst","functional/backends/mxnet/old/linear_algebra.rst","functional/backends/mxnet/old/reductions.rst","functional/backends/mxnet/random.rst","functional/backends/mxnet/random/multinomial.rst","functional/backends/mxnet/random/randint.rst","functional/backends/mxnet/random/random_normal.rst","functional/backends/mxnet/random/random_uniform.rst","functional/backends/mxnet/searching.rst","functional/backends/mxnet/searching/argmax.rst","functional/backends/mxnet/set.rst","functional/backends/mxnet/sorting.rst","functional/backends/mxnet/sorting/argsort.rst","functional/backends/mxnet/statistical.rst","functional/backends/mxnet/statistical/einsum.rst","functional/backends/mxnet/statistical/max.rst","functional/backends/mxnet/statistical/mean.rst","functional/backends/mxnet/statistical/min.rst","functional/backends/mxnet/statistical/prod.rst","functional/backends/mxnet/statistical/std.rst","functional/backends/mxnet/statistical/sum.rst","functional/backends/mxnet/statistical/var.rst","functional/backends/mxnet/utility.rst","functional/backends/mxnet/utility/all.rst","functional/backends/mxnet/utility/any.rst","functional/backends/numpy.rst","functional/backends/numpy/activations.rst","functional/backends/numpy/activations/gelu.rst","functional/backends/numpy/activations/softmax.rst","functional/backends/numpy/constants.rst","functional/backends/numpy/creation.rst","functional/backends/numpy/creation/array.rst","functional/backends/numpy/creation/asarray.rst","functional/backends/numpy/creation/empty.rst","functional/backends/numpy/creation/empty_like.rst","functional/backends/numpy/creation/eye.rst","functional/backends/numpy/creation/full_like.rst","functional/backends/numpy/creation/linspace.rst","functional/backends/numpy/creation/logspace.rst","functional/backends/numpy/creation/ones.rst","functional/backends/numpy/creation/ones_like.rst","functional/backends/numpy/creation/tril.rst","functional/backends/numpy/creation/triu.rst","functional/backends/numpy/creation/zeros.rst","functional/backends/numpy/data_type.rst","functional/backends/numpy/data_type/Finfo:\n\n    def __init__.rst","functional/backends/numpy/data_type/broadcast_to.rst","functional/backends/numpy/data_type/finfo.rst","functional/backends/numpy/data_type/iinfo.rst","functional/backends/numpy/data_type/result_type.rst","functional/backends/numpy/device.rst","functional/backends/numpy/device/Profiler.rst","functional/backends/numpy/elementwise.rst","functional/backends/numpy/elementwise/abs.rst","functional/backends/numpy/elementwise/acos.rst","functional/backends/numpy/elementwise/acosh.rst","functional/backends/numpy/elementwise/asin.rst","functional/backends/numpy/elementwise/asinh.rst","functional/backends/numpy/elementwise/atan.rst","functional/backends/numpy/elementwise/bitwise_and.rst","functional/backends/numpy/elementwise/bitwise_invert.rst","functional/backends/numpy/elementwise/bitwise_or.rst","functional/backends/numpy/elementwise/ceil.rst","functional/backends/numpy/elementwise/cos.rst","functional/backends/numpy/elementwise/cosh.rst","functional/backends/numpy/elementwise/equal.rst","functional/backends/numpy/elementwise/erf.rst","functional/backends/numpy/elementwise/expm1.rst","functional/backends/numpy/elementwise/floor.rst","functional/backends/numpy/elementwise/greater_equal.rst","functional/backends/numpy/elementwise/isfinite.rst","functional/backends/numpy/elementwise/isinf.rst","functional/backends/numpy/elementwise/isnan.rst","functional/backends/numpy/elementwise/less.rst","functional/backends/numpy/elementwise/less_equal.rst","functional/backends/numpy/elementwise/log.rst","functional/backends/numpy/elementwise/log10.rst","functional/backends/numpy/elementwise/log1p.rst","functional/backends/numpy/elementwise/log2.rst","functional/backends/numpy/elementwise/logaddexp.rst","functional/backends/numpy/elementwise/logical_and.rst","functional/backends/numpy/elementwise/logical_not.rst","functional/backends/numpy/elementwise/logical_or.rst","functional/backends/numpy/elementwise/logical_xor.rst","functional/backends/numpy/elementwise/negative.rst","functional/backends/numpy/elementwise/not_equal.rst","functional/backends/numpy/elementwise/positive.rst","functional/backends/numpy/elementwise/remainder.rst","functional/backends/numpy/elementwise/round.rst","functional/backends/numpy/elementwise/sin.rst","functional/backends/numpy/elementwise/sinh.rst","functional/backends/numpy/elementwise/sqrt.rst","functional/backends/numpy/elementwise/square.rst","functional/backends/numpy/elementwise/tanh.rst","functional/backends/numpy/general.rst","functional/backends/numpy/general/cumprod.rst","functional/backends/numpy/general/gather.rst","functional/backends/numpy/general/gather_nd.rst","functional/backends/numpy/general/inplace_decrement.rst","functional/backends/numpy/general/inplace_increment.rst","functional/backends/numpy/general/inplace_update.rst","functional/backends/numpy/general/is_array.rst","functional/backends/numpy/general/scatter_flat.rst","functional/backends/numpy/general/scatter_nd.rst","functional/backends/numpy/general/unstack.rst","functional/backends/numpy/gradients.rst","functional/backends/numpy/gradients/execute_with_gradients.rst","functional/backends/numpy/gradients/is_variable.rst","functional/backends/numpy/gradients/stop_gradient.rst","functional/backends/numpy/gradients/variable.rst","functional/backends/numpy/image.rst","functional/backends/numpy/image/bilinear_resample.rst","functional/backends/numpy/image/gradient_image.rst","functional/backends/numpy/image/stack_images.rst","functional/backends/numpy/layers.rst","functional/backends/numpy/layers/conv1d.rst","functional/backends/numpy/layers/conv1d_transpose.rst","functional/backends/numpy/layers/conv2d.rst","functional/backends/numpy/layers/conv2d_transpose.rst","functional/backends/numpy/layers/conv3d.rst","functional/backends/numpy/layers/conv3d_transpose.rst","functional/backends/numpy/layers/depthwise_conv2d.rst","functional/backends/numpy/linear_algebra.rst","functional/backends/numpy/linear_algebra/cholesky.rst","functional/backends/numpy/linear_algebra/det.rst","functional/backends/numpy/linear_algebra/diagonal.rst","functional/backends/numpy/linear_algebra/eigvalsh.rst","functional/backends/numpy/linear_algebra/matmul.rst","functional/backends/numpy/linear_algebra/matrix_norm.rst","functional/backends/numpy/linear_algebra/matrix_transpose.rst","functional/backends/numpy/linear_algebra/qr.rst","functional/backends/numpy/linear_algebra/slogdet.rst","functional/backends/numpy/linear_algebra/svd.rst","functional/backends/numpy/linear_algebra/svdvals.rst","functional/backends/numpy/linear_algebra/trace.rst","functional/backends/numpy/linear_algebra/vector_norm.rst","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/manipulation.rst","functional/backends/numpy/manipulation/expand_dims.rst","functional/backends/numpy/manipulation/flip.rst","functional/backends/numpy/manipulation/permute_dims.rst","functional/backends/numpy/manipulation/split.rst","functional/backends/numpy/old.rst","functional/backends/numpy/old/general.rst","functional/backends/numpy/old/general/arange.rst","functional/backends/numpy/old/general/argmin.rst","functional/backends/numpy/old/general/cast.rst","functional/backends/numpy/old/general/compile.rst","functional/backends/numpy/old/general/concatenate.rst","functional/backends/numpy/old/general/dtype.rst","functional/backends/numpy/old/general/dtype_bits.rst","functional/backends/numpy/old/general/dtype_from_str.rst","functional/backends/numpy/old/general/dtype_to_str.rst","functional/backends/numpy/old/general/full.rst","functional/backends/numpy/old/general/identity.rst","functional/backends/numpy/old/general/indices_where.rst","functional/backends/numpy/old/general/linear_resample.rst","functional/backends/numpy/old/general/one_hot.rst","functional/backends/numpy/old/general/squeeze.rst","functional/backends/numpy/old/general/transpose.rst","functional/backends/numpy/old/general/zeros_like.rst","functional/backends/numpy/old/linear_algebra.rst","functional/backends/numpy/old/reductions.rst","functional/backends/numpy/random.rst","functional/backends/numpy/random/multinomial.rst","functional/backends/numpy/searching.rst","functional/backends/numpy/searching/argmax.rst","functional/backends/numpy/set.rst","functional/backends/numpy/sorting.rst","functional/backends/numpy/sorting/argsort.rst","functional/backends/numpy/statistical.rst","functional/backends/numpy/statistical/einsum.rst","functional/backends/numpy/statistical/max.rst","functional/backends/numpy/statistical/mean.rst","functional/backends/numpy/statistical/min.rst","functional/backends/numpy/statistical/prod.rst","functional/backends/numpy/statistical/sum.rst","functional/backends/numpy/statistical/var.rst","functional/backends/numpy/utility.rst","functional/backends/numpy/utility/all.rst","functional/backends/numpy/utility/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/activations.rst","functional/backends/tensorflow/constants.rst","functional/backends/tensorflow/creation.rst","functional/backends/tensorflow/creation/array.rst","functional/backends/tensorflow/creation/asarray.rst","functional/backends/tensorflow/creation/empty.rst","functional/backends/tensorflow/creation/empty_like.rst","functional/backends/tensorflow/creation/eye.rst","functional/backends/tensorflow/creation/full_like.rst","functional/backends/tensorflow/creation/linspace.rst","functional/backends/tensorflow/creation/logspace.rst","functional/backends/tensorflow/creation/ones.rst","functional/backends/tensorflow/creation/ones_like.rst","functional/backends/tensorflow/creation/tril.rst","functional/backends/tensorflow/creation/triu.rst","functional/backends/tensorflow/creation/zeros.rst","functional/backends/tensorflow/data_type.rst","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/data_type/broadcast_to .rst","functional/backends/tensorflow/data_type/finfo.rst","functional/backends/tensorflow/data_type/iinfo.rst","functional/backends/tensorflow/data_type/result_type.rst","functional/backends/tensorflow/device.rst","functional/backends/tensorflow/device/Profiler.rst","functional/backends/tensorflow/device/dev.rst","functional/backends/tensorflow/device/dev_from_str.rst","functional/backends/tensorflow/device/dev_to_str.rst","functional/backends/tensorflow/device/to_dev.rst","functional/backends/tensorflow/device/tpu_is_available.rst","functional/backends/tensorflow/elementwise.rst","functional/backends/tensorflow/elementwise/abs.rst","functional/backends/tensorflow/elementwise/acos.rst","functional/backends/tensorflow/elementwise/acosh.rst","functional/backends/tensorflow/elementwise/asin.rst","functional/backends/tensorflow/elementwise/asinh.rst","functional/backends/tensorflow/elementwise/atan.rst","functional/backends/tensorflow/elementwise/bitwise_and.rst","functional/backends/tensorflow/elementwise/bitwise_invert.rst","functional/backends/tensorflow/elementwise/bitwise_or.rst","functional/backends/tensorflow/elementwise/ceil.rst","functional/backends/tensorflow/elementwise/cos.rst","functional/backends/tensorflow/elementwise/cosh.rst","functional/backends/tensorflow/elementwise/equal.rst","functional/backends/tensorflow/elementwise/expm1.rst","functional/backends/tensorflow/elementwise/floor.rst","functional/backends/tensorflow/elementwise/greater_equal.rst","functional/backends/tensorflow/elementwise/isfinite.rst","functional/backends/tensorflow/elementwise/isinf.rst","functional/backends/tensorflow/elementwise/isnan.rst","functional/backends/tensorflow/elementwise/less.rst","functional/backends/tensorflow/elementwise/less_equal.rst","functional/backends/tensorflow/elementwise/log.rst","functional/backends/tensorflow/elementwise/log10.rst","functional/backends/tensorflow/elementwise/log1p.rst","functional/backends/tensorflow/elementwise/log2.rst","functional/backends/tensorflow/elementwise/logaddexp.rst","functional/backends/tensorflow/elementwise/logical_and.rst","functional/backends/tensorflow/elementwise/logical_not.rst","functional/backends/tensorflow/elementwise/logical_or.rst","functional/backends/tensorflow/elementwise/logical_xor.rst","functional/backends/tensorflow/elementwise/negative.rst","functional/backends/tensorflow/elementwise/not_equal.rst","functional/backends/tensorflow/elementwise/positive.rst","functional/backends/tensorflow/elementwise/remainder.rst","functional/backends/tensorflow/elementwise/round.rst","functional/backends/tensorflow/elementwise/sin.rst","functional/backends/tensorflow/elementwise/sinh.rst","functional/backends/tensorflow/elementwise/sqrt.rst","functional/backends/tensorflow/elementwise/square.rst","functional/backends/tensorflow/elementwise/tanh.rst","functional/backends/tensorflow/general.rst","functional/backends/tensorflow/general/gather.rst","functional/backends/tensorflow/general/gather_nd.rst","functional/backends/tensorflow/general/inplace_decrement.rst","functional/backends/tensorflow/general/inplace_increment.rst","functional/backends/tensorflow/general/inplace_update.rst","functional/backends/tensorflow/general/is_array.rst","functional/backends/tensorflow/general/scatter_flat.rst","functional/backends/tensorflow/general/scatter_nd.rst","functional/backends/tensorflow/general/unstack.rst","functional/backends/tensorflow/gradients.rst","functional/backends/tensorflow/gradients/execute_with_gradients.rst","functional/backends/tensorflow/gradients/is_variable.rst","functional/backends/tensorflow/gradients/stop_gradient.rst","functional/backends/tensorflow/gradients/variable.rst","functional/backends/tensorflow/image.rst","functional/backends/tensorflow/image/bilinear_resample.rst","functional/backends/tensorflow/image/gradient_image.rst","functional/backends/tensorflow/image/stack_images.rst","functional/backends/tensorflow/layers.rst","functional/backends/tensorflow/layers/conv2d.rst","functional/backends/tensorflow/layers/conv3d.rst","functional/backends/tensorflow/layers/depthwise_conv2d.rst","functional/backends/tensorflow/linear_algebra.rst","functional/backends/tensorflow/linear_algebra/cholesky.rst","functional/backends/tensorflow/linear_algebra/det.rst","functional/backends/tensorflow/linear_algebra/diagonal.rst","functional/backends/tensorflow/linear_algebra/eigvalsh.rst","functional/backends/tensorflow/linear_algebra/matmul.rst","functional/backends/tensorflow/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/linear_algebra/matrix_transpose.rst","functional/backends/tensorflow/linear_algebra/qr.rst","functional/backends/tensorflow/linear_algebra/slogdet.rst","functional/backends/tensorflow/linear_algebra/svd.rst","functional/backends/tensorflow/linear_algebra/svdvals.rst","functional/backends/tensorflow/linear_algebra/trace.rst","functional/backends/tensorflow/linear_algebra/vector_norm.rst","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/manipulation.rst","functional/backends/tensorflow/manipulation/constant_pad.rst","functional/backends/tensorflow/manipulation/expand_dims.rst","functional/backends/tensorflow/manipulation/flip.rst","functional/backends/tensorflow/manipulation/permute_dims.rst","functional/backends/tensorflow/manipulation/split.rst","functional/backends/tensorflow/manipulation/swapaxes.rst","functional/backends/tensorflow/manipulation/tile.rst","functional/backends/tensorflow/manipulation/zero_pad.rst","functional/backends/tensorflow/old.rst","functional/backends/tensorflow/old/general.rst","functional/backends/tensorflow/old/general/abs.rst","functional/backends/tensorflow/old/general/arange.rst","functional/backends/tensorflow/old/general/argmin.rst","functional/backends/tensorflow/old/general/cast.rst","functional/backends/tensorflow/old/general/concatenate.rst","functional/backends/tensorflow/old/general/dtype.rst","functional/backends/tensorflow/old/general/dtype_bits.rst","functional/backends/tensorflow/old/general/dtype_from_str.rst","functional/backends/tensorflow/old/general/dtype_to_str.rst","functional/backends/tensorflow/old/general/full.rst","functional/backends/tensorflow/old/general/identity.rst","functional/backends/tensorflow/old/general/linear_resample.rst","functional/backends/tensorflow/old/general/one_hot.rst","functional/backends/tensorflow/old/general/squeeze.rst","functional/backends/tensorflow/old/general/zeros_like.rst","functional/backends/tensorflow/old/linear_algebra.rst","functional/backends/tensorflow/old/reductions.rst","functional/backends/tensorflow/random.rst","functional/backends/tensorflow/random/multinomial.rst","functional/backends/tensorflow/random/randint.rst","functional/backends/tensorflow/random/random_normal.rst","functional/backends/tensorflow/random/random_uniform.rst","functional/backends/tensorflow/searching.rst","functional/backends/tensorflow/searching/argmax.rst","functional/backends/tensorflow/set.rst","functional/backends/tensorflow/sorting.rst","functional/backends/tensorflow/sorting/argsort.rst","functional/backends/tensorflow/statistical.rst","functional/backends/tensorflow/statistical/einsum.rst","functional/backends/tensorflow/statistical/max.rst","functional/backends/tensorflow/statistical/mean.rst","functional/backends/tensorflow/statistical/min.rst","functional/backends/tensorflow/statistical/prod.rst","functional/backends/tensorflow/statistical/sum.rst","functional/backends/tensorflow/statistical/var.rst","functional/backends/tensorflow/utility.rst","functional/backends/tensorflow/utility/all.rst","functional/backends/tensorflow/utility/any.rst","functional/backends/torch.rst","functional/backends/torch/activations.rst","functional/backends/torch/activations/gelu.rst","functional/backends/torch/activations/leaky_relu.rst","functional/backends/torch/activations/relu.rst","functional/backends/torch/activations/sigmoid.rst","functional/backends/torch/activations/softmax.rst","functional/backends/torch/activations/softplus.rst","functional/backends/torch/activations/tanh.rst","functional/backends/torch/constants.rst","functional/backends/torch/converters.rst","functional/backends/torch/converters/IvyModule.rst","functional/backends/torch/converters/to_ivy_module.rst","functional/backends/torch/creation.rst","functional/backends/torch/creation/array.rst","functional/backends/torch/creation/asarray.rst","functional/backends/torch/creation/empty.rst","functional/backends/torch/creation/empty_like.rst","functional/backends/torch/creation/eye.rst","functional/backends/torch/creation/full_like.rst","functional/backends/torch/creation/linspace.rst","functional/backends/torch/creation/logspace.rst","functional/backends/torch/creation/ones.rst","functional/backends/torch/creation/ones_like.rst","functional/backends/torch/creation/tril.rst","functional/backends/torch/creation/triu.rst","functional/backends/torch/creation/zeros.rst","functional/backends/torch/data_type.rst","functional/backends/torch/data_type/Finfo:\n\n    def __init__.rst","functional/backends/torch/data_type/broadcast_to.rst","functional/backends/torch/data_type/finfo.rst","functional/backends/torch/data_type/iinfo.rst","functional/backends/torch/data_type/result_type.rst","functional/backends/torch/device.rst","functional/backends/torch/device/Profiler.rst","functional/backends/torch/device/clear_mem_on_dev.rst","functional/backends/torch/device/dev.rst","functional/backends/torch/device/dev_from_str.rst","functional/backends/torch/device/dev_to_str.rst","functional/backends/torch/device/to_dev.rst","functional/backends/torch/device/tpu_is_available.rst","functional/backends/torch/elementwise.rst","functional/backends/torch/elementwise/abs.rst","functional/backends/torch/elementwise/acos.rst","functional/backends/torch/elementwise/acosh.rst","functional/backends/torch/elementwise/asin.rst","functional/backends/torch/elementwise/asinh.rst","functional/backends/torch/elementwise/atan.rst","functional/backends/torch/elementwise/atan2.rst","functional/backends/torch/elementwise/atanh.rst","functional/backends/torch/elementwise/bitwise_and.rst","functional/backends/torch/elementwise/bitwise_invert.rst","functional/backends/torch/elementwise/bitwise_or.rst","functional/backends/torch/elementwise/ceil.rst","functional/backends/torch/elementwise/cos.rst","functional/backends/torch/elementwise/cosh.rst","functional/backends/torch/elementwise/equal.rst","functional/backends/torch/elementwise/erf.rst","functional/backends/torch/elementwise/exp.rst","functional/backends/torch/elementwise/expm1.rst","functional/backends/torch/elementwise/floor.rst","functional/backends/torch/elementwise/greater_equal.rst","functional/backends/torch/elementwise/isfinite.rst","functional/backends/torch/elementwise/isinf.rst","functional/backends/torch/elementwise/isnan.rst","functional/backends/torch/elementwise/less.rst","functional/backends/torch/elementwise/less_equal.rst","functional/backends/torch/elementwise/log.rst","functional/backends/torch/elementwise/log10.rst","functional/backends/torch/elementwise/log1p.rst","functional/backends/torch/elementwise/log2.rst","functional/backends/torch/elementwise/logaddexp.rst","functional/backends/torch/elementwise/logical_and.rst","functional/backends/torch/elementwise/logical_not.rst","functional/backends/torch/elementwise/logical_or.rst","functional/backends/torch/elementwise/logical_xor.rst","functional/backends/torch/elementwise/negative.rst","functional/backends/torch/elementwise/not_equal.rst","functional/backends/torch/elementwise/positive.rst","functional/backends/torch/elementwise/remainder.rst","functional/backends/torch/elementwise/round.rst","functional/backends/torch/elementwise/sin.rst","functional/backends/torch/elementwise/sinh.rst","functional/backends/torch/elementwise/sqrt.rst","functional/backends/torch/elementwise/square.rst","functional/backends/torch/elementwise/tan.rst","functional/backends/torch/elementwise/tanh.rst","functional/backends/torch/general.rst","functional/backends/torch/general/array_equal.rst","functional/backends/torch/general/container_types.rst","functional/backends/torch/general/copy_array.rst","functional/backends/torch/general/cumprod.rst","functional/backends/torch/general/cumsum.rst","functional/backends/torch/general/floormod.rst","functional/backends/torch/general/gather.rst","functional/backends/torch/general/gather_nd.rst","functional/backends/torch/general/inplace_decrement.rst","functional/backends/torch/general/inplace_increment.rst","functional/backends/torch/general/inplace_update.rst","functional/backends/torch/general/is_array.rst","functional/backends/torch/general/scatter_flat.rst","functional/backends/torch/general/scatter_nd.rst","functional/backends/torch/general/to_list.rst","functional/backends/torch/general/to_numpy.rst","functional/backends/torch/general/to_scalar.rst","functional/backends/torch/general/unstack.rst","functional/backends/torch/gradients.rst","functional/backends/torch/gradients/execute_with_gradients.rst","functional/backends/torch/gradients/is_variable.rst","functional/backends/torch/gradients/stop_gradient.rst","functional/backends/torch/gradients/variable.rst","functional/backends/torch/gradients/variable_data.rst","functional/backends/torch/image.rst","functional/backends/torch/image/bilinear_resample.rst","functional/backends/torch/image/gradient_image.rst","functional/backends/torch/image/stack_images.rst","functional/backends/torch/layers.rst","functional/backends/torch/layers/conv1d.rst","functional/backends/torch/layers/conv1d_transpose.rst","functional/backends/torch/layers/conv2d.rst","functional/backends/torch/layers/conv2d_transpose.rst","functional/backends/torch/layers/conv3d.rst","functional/backends/torch/layers/conv3d_transpose.rst","functional/backends/torch/layers/depthwise_conv2d.rst","functional/backends/torch/linear_algebra.rst","functional/backends/torch/linear_algebra/cholesky.rst","functional/backends/torch/linear_algebra/det.rst","functional/backends/torch/linear_algebra/diagonal.rst","functional/backends/torch/linear_algebra/eigvalsh.rst","functional/backends/torch/linear_algebra/inv.rst","functional/backends/torch/linear_algebra/matmul.rst","functional/backends/torch/linear_algebra/matrix_norm.rst","functional/backends/torch/linear_algebra/matrix_transpose.rst","functional/backends/torch/linear_algebra/pinv.rst","functional/backends/torch/linear_algebra/qr.rst","functional/backends/torch/linear_algebra/slogdet.rst","functional/backends/torch/linear_algebra/svd.rst","functional/backends/torch/linear_algebra/svdvals.rst","functional/backends/torch/linear_algebra/trace.rst","functional/backends/torch/linear_algebra/vector_norm.rst","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/manipulation.rst","functional/backends/torch/manipulation/constant_pad.rst","functional/backends/torch/manipulation/expand_dims.rst","functional/backends/torch/manipulation/flip.rst","functional/backends/torch/manipulation/permute_dims.rst","functional/backends/torch/manipulation/repeat.rst","functional/backends/torch/manipulation/split.rst","functional/backends/torch/manipulation/swapaxes.rst","functional/backends/torch/manipulation/tile.rst","functional/backends/torch/manipulation/zero_pad.rst","functional/backends/torch/old.rst","functional/backends/torch/old/general.rst","functional/backends/torch/old/general/abs.rst","functional/backends/torch/old/general/arange.rst","functional/backends/torch/old/general/argmin.rst","functional/backends/torch/old/general/broadcast_to.rst","functional/backends/torch/old/general/cast.rst","functional/backends/torch/old/general/clip.rst","functional/backends/torch/old/general/compile.rst","functional/backends/torch/old/general/concatenate.rst","functional/backends/torch/old/general/cross.rst","functional/backends/torch/old/general/current_framework_str.rst","functional/backends/torch/old/general/dtype.rst","functional/backends/torch/old/general/dtype_bits.rst","functional/backends/torch/old/general/dtype_from_str.rst","functional/backends/torch/old/general/dtype_to_str.rst","functional/backends/torch/old/general/full.rst","functional/backends/torch/old/general/get_num_dims.rst","functional/backends/torch/old/general/identity.rst","functional/backends/torch/old/general/indices_where.rst","functional/backends/torch/old/general/linear_resample.rst","functional/backends/torch/old/general/maximum.rst","functional/backends/torch/old/general/meshgrid.rst","functional/backends/torch/old/general/minimum.rst","functional/backends/torch/old/general/multiprocessing.rst","functional/backends/torch/old/general/one_hot.rst","functional/backends/torch/old/general/reshape.rst","functional/backends/torch/old/general/shape.rst","functional/backends/torch/old/general/squeeze.rst","functional/backends/torch/old/general/stack.rst","functional/backends/torch/old/general/transpose.rst","functional/backends/torch/old/general/where.rst","functional/backends/torch/old/general/zeros_like.rst","functional/backends/torch/old/linear_algebra.rst","functional/backends/torch/old/reductions.rst","functional/backends/torch/random.rst","functional/backends/torch/random/multinomial.rst","functional/backends/torch/random/randint.rst","functional/backends/torch/random/random_normal.rst","functional/backends/torch/random/random_uniform.rst","functional/backends/torch/random/seed.rst","functional/backends/torch/random/shuffle.rst","functional/backends/torch/searching.rst","functional/backends/torch/searching/argmax.rst","functional/backends/torch/set.rst","functional/backends/torch/sorting.rst","functional/backends/torch/sorting/argsort.rst","functional/backends/torch/statistical.rst","functional/backends/torch/statistical/einsum.rst","functional/backends/torch/statistical/max.rst","functional/backends/torch/statistical/mean.rst","functional/backends/torch/statistical/min.rst","functional/backends/torch/statistical/prod.rst","functional/backends/torch/statistical/sum.rst","functional/backends/torch/statistical/var.rst","functional/backends/torch/utility.rst","functional/backends/torch/utility/all.rst","functional/backends/torch/utility/any.rst","functional/ivy.rst","functional/ivy/activations.rst","functional/ivy/activations/gelu.rst","functional/ivy/activations/leaky_relu.rst","functional/ivy/activations/relu.rst","functional/ivy/activations/sigmoid.rst","functional/ivy/activations/softmax.rst","functional/ivy/activations/softplus.rst","functional/ivy/activations/tanh.rst","functional/ivy/compilation.rst","functional/ivy/compilation/compile.rst","functional/ivy/constants.rst","functional/ivy/creation.rst","functional/ivy/creation/array.rst","functional/ivy/creation/asarray.rst","functional/ivy/creation/empty.rst","functional/ivy/creation/empty_like.rst","functional/ivy/creation/eye.rst","functional/ivy/creation/full_like.rst","functional/ivy/creation/linspace.rst","functional/ivy/creation/logspace.rst","functional/ivy/creation/ones.rst","functional/ivy/creation/ones_like.rst","functional/ivy/creation/tril.rst","functional/ivy/creation/triu.rst","functional/ivy/creation/zeros.rst","functional/ivy/data_type.rst","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/broadcast_to.rst","functional/ivy/data_type/cast.rst","functional/ivy/data_type/closest_valid_dtype.rst","functional/ivy/data_type/convert_dtype.rst","functional/ivy/data_type/default_dtype.rst","functional/ivy/data_type/default_float_dtype.rst","functional/ivy/data_type/default_int_dtype.rst","functional/ivy/data_type/dtype.rst","functional/ivy/data_type/dtype_bits.rst","functional/ivy/data_type/dtype_from_str.rst","functional/ivy/data_type/dtype_to_str.rst","functional/ivy/data_type/finfo.rst","functional/ivy/data_type/iinfo.rst","functional/ivy/data_type/invalid_dtype.rst","functional/ivy/data_type/is_float_dtype.rst","functional/ivy/data_type/is_int_dtype.rst","functional/ivy/data_type/result_type.rst","functional/ivy/data_type/set_default_dtype.rst","functional/ivy/data_type/set_default_float_dtype.rst","functional/ivy/data_type/set_default_int_dtype.rst","functional/ivy/data_type/unset_default_dtype.rst","functional/ivy/data_type/unset_default_float_dtype.rst","functional/ivy/data_type/unset_default_int_dtype.rst","functional/ivy/data_type/valid_dtype.rst","functional/ivy/device.rst","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/device/DevClonedItem.rst","functional/ivy/device/DevClonedIter.rst","functional/ivy/device/DevClonedNest.rst","functional/ivy/device/DevDistItem.rst","functional/ivy/device/DevDistIter.rst","functional/ivy/device/DevDistNest.rst","functional/ivy/device/DevManager:\n\n    def __init__.rst","functional/ivy/device/DevMapper.rst","functional/ivy/device/DevMapperMultiProc.rst","functional/ivy/device/MultiDev:\n\n    def __init__.rst","functional/ivy/device/MultiDevItem.rst","functional/ivy/device/MultiDevIter.rst","functional/ivy/device/MultiDevNest.rst","functional/ivy/device/Profiler.rst","functional/ivy/device/clear_mem_on_dev.rst","functional/ivy/device/default_device.rst","functional/ivy/device/dev.rst","functional/ivy/device/dev_clone.rst","functional/ivy/device/dev_clone_array.rst","functional/ivy/device/dev_clone_iter.rst","functional/ivy/device/dev_clone_nest.rst","functional/ivy/device/dev_dist.rst","functional/ivy/device/dev_dist_array.rst","functional/ivy/device/dev_dist_iter.rst","functional/ivy/device/dev_dist_nest.rst","functional/ivy/device/dev_from_str.rst","functional/ivy/device/dev_to_str.rst","functional/ivy/device/dev_unify.rst","functional/ivy/device/dev_unify_array.rst","functional/ivy/device/dev_unify_iter.rst","functional/ivy/device/dev_unify_nest.rst","functional/ivy/device/dev_util.rst","functional/ivy/device/get_all_arrays_on_dev.rst","functional/ivy/device/gpu_is_available.rst","functional/ivy/device/num_arrays_on_dev.rst","functional/ivy/device/num_cpu_cores.rst","functional/ivy/device/num_gpus.rst","functional/ivy/device/percent_used_mem_on_dev.rst","functional/ivy/device/print_all_arrays_on_dev.rst","functional/ivy/device/set_default_device.rst","functional/ivy/device/set_split_factor.rst","functional/ivy/device/split_factor.rst","functional/ivy/device/split_func_call.rst","functional/ivy/device/to_dev.rst","functional/ivy/device/total_mem_on_dev.rst","functional/ivy/device/tpu_is_available.rst","functional/ivy/device/unset_default_device.rst","functional/ivy/device/used_mem_on_dev.rst","functional/ivy/elementwise.rst","functional/ivy/elementwise/abs.rst","functional/ivy/elementwise/acos.rst","functional/ivy/elementwise/acosh.rst","functional/ivy/elementwise/asin.rst","functional/ivy/elementwise/asinh.rst","functional/ivy/elementwise/atan.rst","functional/ivy/elementwise/atan2.rst","functional/ivy/elementwise/atanh.rst","functional/ivy/elementwise/bitwise_and.rst","functional/ivy/elementwise/bitwise_invert.rst","functional/ivy/elementwise/bitwise_or.rst","functional/ivy/elementwise/ceil.rst","functional/ivy/elementwise/cos.rst","functional/ivy/elementwise/cosh.rst","functional/ivy/elementwise/divide.rst","functional/ivy/elementwise/erf.rst","functional/ivy/elementwise/exp.rst","functional/ivy/elementwise/expm1.rst","functional/ivy/elementwise/floor.rst","functional/ivy/elementwise/greater_equal.rst","functional/ivy/elementwise/isfinite.rst","functional/ivy/elementwise/isinf.rst","functional/ivy/elementwise/isnan.rst","functional/ivy/elementwise/less.rst","functional/ivy/elementwise/less_equal.rst","functional/ivy/elementwise/log.rst","functional/ivy/elementwise/log10.rst","functional/ivy/elementwise/log1p.rst","functional/ivy/elementwise/log2.rst","functional/ivy/elementwise/logaddexp.rst","functional/ivy/elementwise/logical_and.rst","functional/ivy/elementwise/logical_not.rst","functional/ivy/elementwise/logical_or.rst","functional/ivy/elementwise/logical_xor.rst","functional/ivy/elementwise/negative.rst","functional/ivy/elementwise/not_equal.rst","functional/ivy/elementwise/positive.rst","functional/ivy/elementwise/remainder.rst","functional/ivy/elementwise/round.rst","functional/ivy/elementwise/sin.rst","functional/ivy/elementwise/sinh.rst","functional/ivy/elementwise/sqrt.rst","functional/ivy/elementwise/square.rst","functional/ivy/elementwise/tan.rst","functional/ivy/elementwise/tanh.rst","functional/ivy/general.rst","functional/ivy/general/all_equal.rst","functional/ivy/general/arg_names.rst","functional/ivy/general/array_equal.rst","functional/ivy/general/arrays_equal.rst","functional/ivy/general/assert_supports_inplace.rst","functional/ivy/general/cache_fn.rst","functional/ivy/general/clip_matrix_norm.rst","functional/ivy/general/clip_vector_norm.rst","functional/ivy/general/container_types.rst","functional/ivy/general/copy_array.rst","functional/ivy/general/cumprod.rst","functional/ivy/general/cumsum.rst","functional/ivy/general/current_framework_str.rst","functional/ivy/general/default.rst","functional/ivy/general/einops_rearrange.rst","functional/ivy/general/einops_reduce.rst","functional/ivy/general/einops_repeat.rst","functional/ivy/general/exists.rst","functional/ivy/general/floormod.rst","functional/ivy/general/fourier_encode.rst","functional/ivy/general/gather.rst","functional/ivy/general/gather_nd.rst","functional/ivy/general/get_all_arrays_in_memory.rst","functional/ivy/general/get_min_base.rst","functional/ivy/general/get_min_denominator.rst","functional/ivy/general/get_referrers_recursive.rst","functional/ivy/general/has_nans.rst","functional/ivy/general/inplace_arrays_supported.rst","functional/ivy/general/inplace_decrement.rst","functional/ivy/general/inplace_increment.rst","functional/ivy/general/inplace_update.rst","functional/ivy/general/inplace_variables_supported.rst","functional/ivy/general/is_array.rst","functional/ivy/general/match_kwargs.rst","functional/ivy/general/num_arrays_in_memory.rst","functional/ivy/general/print_all_arrays_in_memory.rst","functional/ivy/general/queue_timeout.rst","functional/ivy/general/scatter_flat.rst","functional/ivy/general/scatter_nd.rst","functional/ivy/general/set_min_base.rst","functional/ivy/general/set_min_denominator.rst","functional/ivy/general/set_queue_timeout.rst","functional/ivy/general/set_tmp_dir.rst","functional/ivy/general/shape_to_tuple.rst","functional/ivy/general/stable_divide.rst","functional/ivy/general/stable_pow.rst","functional/ivy/general/supports_inplace.rst","functional/ivy/general/tmp_dir.rst","functional/ivy/general/to_list.rst","functional/ivy/general/to_numpy.rst","functional/ivy/general/to_scalar.rst","functional/ivy/general/try_else_none.rst","functional/ivy/general/unstack.rst","functional/ivy/general/value_is_nan.rst","functional/ivy/gradients.rst","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/gradients/adam_step.rst","functional/ivy/gradients/adam_update.rst","functional/ivy/gradients/execute_with_gradients.rst","functional/ivy/gradients/gradient_descent_update.rst","functional/ivy/gradients/is_variable.rst","functional/ivy/gradients/lamb_update.rst","functional/ivy/gradients/lars_update.rst","functional/ivy/gradients/optimizer_update.rst","functional/ivy/gradients/set_with_grads.rst","functional/ivy/gradients/stop_gradient.rst","functional/ivy/gradients/unset_with_grads.rst","functional/ivy/gradients/variable.rst","functional/ivy/gradients/variable_data.rst","functional/ivy/gradients/with_grads.rst","functional/ivy/image.rst","functional/ivy/image/bilinear_resample.rst","functional/ivy/image/float_img_to_uint8_img.rst","functional/ivy/image/gradient_image.rst","functional/ivy/image/random_crop.rst","functional/ivy/image/stack_images.rst","functional/ivy/image/uint8_img_to_float_img.rst","functional/ivy/layers.rst","functional/ivy/layers/conv1d.rst","functional/ivy/layers/conv1d_transpose.rst","functional/ivy/layers/conv2d.rst","functional/ivy/layers/conv2d_transpose.rst","functional/ivy/layers/conv3d.rst","functional/ivy/layers/conv3d_transpose.rst","functional/ivy/layers/depthwise_conv2d.rst","functional/ivy/layers/dropout.rst","functional/ivy/layers/linear.rst","functional/ivy/layers/lstm_update.rst","functional/ivy/layers/multi_head_attention.rst","functional/ivy/layers/scaled_dot_product_attention.rst","functional/ivy/linear_algebra.rst","functional/ivy/linear_algebra/cholesky.rst","functional/ivy/linear_algebra/det.rst","functional/ivy/linear_algebra/diagonal.rst","functional/ivy/linear_algebra/eigvalsh.rst","functional/ivy/linear_algebra/inv.rst","functional/ivy/linear_algebra/matmul.rst","functional/ivy/linear_algebra/matrix_norm.rst","functional/ivy/linear_algebra/matrix_transpose.rst","functional/ivy/linear_algebra/pinv.rst","functional/ivy/linear_algebra/qr.rst","functional/ivy/linear_algebra/slodget.rst","functional/ivy/linear_algebra/svd.rst","functional/ivy/linear_algebra/svdvals.rst","functional/ivy/linear_algebra/trace.rst","functional/ivy/linear_algebra/vector_norm.rst","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/ivy/losses.rst","functional/ivy/losses/binary_cross_entropy.rst","functional/ivy/losses/cross_entropy.rst","functional/ivy/losses/sparse_cross_entropy.rst","functional/ivy/manipulation.rst","functional/ivy/manipulation/constant_pad.rst","functional/ivy/manipulation/expand_dims.rst","functional/ivy/manipulation/flip.rst","functional/ivy/manipulation/permute_dims.rst","functional/ivy/manipulation/repeat.rst","functional/ivy/manipulation/split.rst","functional/ivy/manipulation/swapaxes.rst","functional/ivy/manipulation/tile.rst","functional/ivy/manipulation/zero_pad.rst","functional/ivy/meta.rst","functional/ivy/meta/fomaml_step.rst","functional/ivy/meta/maml_step.rst","functional/ivy/meta/reptile_step.rst","functional/ivy/nest.rst","functional/ivy/nest/all_nested_indices.rst","functional/ivy/nest/copy_nest.rst","functional/ivy/nest/index_nest.rst","functional/ivy/nest/map.rst","functional/ivy/nest/map_nest_at_index.rst","functional/ivy/nest/map_nest_at_indices.rst","functional/ivy/nest/multi_index_nest.rst","functional/ivy/nest/nested_indices_where.rst","functional/ivy/nest/nested_map.rst","functional/ivy/nest/set_nest_at_index.rst","functional/ivy/nest/set_nest_at_indices.rst","functional/ivy/norms.rst","functional/ivy/norms/layer_norm.rst","functional/ivy/old.rst","functional/ivy/old/dtype.rst","functional/ivy/old/general.rst","functional/ivy/old/general/abs.rst","functional/ivy/old/general/arange.rst","functional/ivy/old/general/argmin.rst","functional/ivy/old/general/broadcast_to.rst","functional/ivy/old/general/clip.rst","functional/ivy/old/general/concatenate.rst","functional/ivy/old/general/cross.rst","functional/ivy/old/general/equal.rst","functional/ivy/old/general/floor.rst","functional/ivy/old/general/full.rst","functional/ivy/old/general/get_num_dims.rst","functional/ivy/old/general/identity.rst","functional/ivy/old/general/indices_where.rst","functional/ivy/old/general/linear_resample.rst","functional/ivy/old/general/matmul.rst","functional/ivy/old/general/maximum.rst","functional/ivy/old/general/meshgrid.rst","functional/ivy/old/general/minimum.rst","functional/ivy/old/general/multiprocessing.rst","functional/ivy/old/general/one_hot.rst","functional/ivy/old/general/ones.rst","functional/ivy/old/general/reshape.rst","functional/ivy/old/general/shape.rst","functional/ivy/old/general/squeeze.rst","functional/ivy/old/general/stack.rst","functional/ivy/old/general/transpose.rst","functional/ivy/old/general/where.rst","functional/ivy/old/general/zeros_like.rst","functional/ivy/old/linalg.rst","functional/ivy/old/reductions.rst","functional/ivy/random.rst","functional/ivy/random/multinomial.rst","functional/ivy/random/randint.rst","functional/ivy/random/random_normal.rst","functional/ivy/random/random_uniform.rst","functional/ivy/random/seed.rst","functional/ivy/random/shuffle.rst","functional/ivy/searching.rst","functional/ivy/searching/argmax.rst","functional/ivy/set.rst","functional/ivy/sorting.rst","functional/ivy/sorting/argsort.rst","functional/ivy/statistical.rst","functional/ivy/statistical/einsum.rst","functional/ivy/statistical/max.rst","functional/ivy/statistical/mean.rst","functional/ivy/statistical/min.rst","functional/ivy/statistical/prod.rst","functional/ivy/statistical/std.rst","functional/ivy/statistical/sum.rst","functional/ivy/statistical/var.rst","functional/ivy/utility.rst","functional/ivy/utility/all.rst","functional/ivy/utility/any.rst","index.rst","index_append.rst","index_prepend.rst","roadmap.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","verbosity.rst","verbosity/cprint.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[45,1,1,""],MultiDevContainer:[46,1,1,""]},"ivy.container.Container":{"var":[45,3,1,""],__init__:[45,3,1,""],all_false:[45,3,1,""],all_key_chains:[45,3,1,""],all_true:[45,3,1,""],arrays_as_lists:[45,3,1,""],as_arrays:[45,3,1,""],as_bools:[45,3,1,""],as_ones:[45,3,1,""],as_random_uniform:[45,3,1,""],as_variables:[45,3,1,""],as_zeros:[45,3,1,""],assert_contains_sub_container:[45,3,1,""],assert_contains_sub_structure:[45,3,1,""],assert_identical:[45,3,1,""],assert_identical_structure:[45,3,1,""],at_key_chain:[45,3,1,""],at_key_chains:[45,3,1,""],at_keys:[45,3,1,""],clip:[45,3,1,""],clip_vector_norm:[45,3,1,""],combine:[45,3,1,""],common_key_chains:[45,3,1,""],concat:[45,3,1,""],config:[45,3,1,""],contains_sub_container:[45,3,1,""],contains_sub_structure:[45,3,1,""],copy:[45,3,1,""],create_if_absent:[45,3,1,""],cutoff_at_depth:[45,3,1,""],cutoff_at_height:[45,3,1,""],deep_copy:[45,3,1,""],dev:[45,3,1,""],dev_clone:[45,3,1,""],dev_dist:[45,3,1,""],dev_str:[45,3,1,""],diff:[45,3,1,""],dtype:[45,3,1,""],einops_rearrange:[45,3,1,""],einops_reduce:[45,3,1,""],einops_repeat:[45,3,1,""],einsum:[45,3,1,""],expand_dims:[45,3,1,""],find_sub_container:[45,3,1,""],find_sub_structure:[45,3,1,""],flatten_key_chain:[45,3,1,""],flatten_key_chains:[45,3,1,""],flip:[45,3,1,""],format_key_chains:[45,3,1,""],from_disk_as_hdf5:[45,3,1,""],from_disk_as_json:[45,3,1,""],from_disk_as_pickled:[45,3,1,""],from_flat_list:[45,3,1,""],from_numpy:[45,3,1,""],gather:[45,3,1,""],gather_nd:[45,3,1,""],h5_file_size:[45,3,1,""],has_key:[45,3,1,""],has_key_chain:[45,3,1,""],has_nans:[45,3,1,""],identical:[45,3,1,""],identical_array_shapes:[45,3,1,""],identical_configs:[45,3,1,""],identical_structure:[45,3,1,""],if_exists:[45,3,1,""],inplace_update:[45,3,1,""],ivy:[45,3,1,""],key_chains_containing:[45,3,1,""],list_join:[45,3,1,""],list_stack:[45,3,1,""],map:[45,3,1,""],map_conts:[45,3,1,""],matrix_norm:[45,3,1,""],max_depth:[45,3,1,""],maximum:[45,3,1,""],mean:[45,3,1,""],minimum:[45,3,1,""],multi_map:[45,3,1,""],num_arrays:[45,3,1,""],overwrite_at_key_chain:[45,3,1,""],overwrite_at_key_chains:[45,3,1,""],prod:[45,3,1,""],prune_empty:[45,3,1,""],prune_key_chain:[45,3,1,""],prune_key_chains:[45,3,1,""],prune_key_from_key_chains:[45,3,1,""],prune_keys:[45,3,1,""],prune_keys_from_key_chains:[45,3,1,""],reduce:[45,3,1,""],reduce_max:[45,3,1,""],reduce_min:[45,3,1,""],remove_key_length_limit:[45,3,1,""],remove_print_limit:[45,3,1,""],repeat:[45,3,1,""],reshape:[45,3,1,""],reshape_like:[45,3,1,""],restructure:[45,3,1,""],restructure_key_chains:[45,3,1,""],set_at_key_chain:[45,3,1,""],set_at_key_chains:[45,3,1,""],set_at_keys:[45,3,1,""],set_framework:[45,3,1,""],set_ivy_backend:[45,3,1,""],shape:[45,3,1,""],shapes:[45,3,1,""],show:[45,3,1,""],show_sub_container:[45,3,1,""],shuffle:[45,3,1,""],shuffle_h5_file:[45,3,1,""],size_ordered_arrays:[45,3,1,""],slice_keys:[45,3,1,""],slice_via_key:[45,3,1,""],sort_by_key:[45,3,1,""],split:[45,3,1,""],stack:[45,3,1,""],std:[45,3,1,""],stop_gradients:[45,3,1,""],structural_diff:[45,3,1,""],sum:[45,3,1,""],swapaxes:[45,3,1,""],to_dev:[45,3,1,""],to_dict:[45,3,1,""],to_disk_as_hdf5:[45,3,1,""],to_disk_as_json:[45,3,1,""],to_disk_as_pickled:[45,3,1,""],to_flat_list:[45,3,1,""],to_iterator:[45,3,1,""],to_iterator_keys:[45,3,1,""],to_iterator_values:[45,3,1,""],to_ivy:[45,3,1,""],to_jsonable:[45,3,1,""],to_list:[45,3,1,""],to_multi_dev:[45,3,1,""],to_native:[45,3,1,""],to_numpy:[45,3,1,""],to_raw:[45,3,1,""],trim_key:[45,3,1,""],try_kc:[45,3,1,""],unify:[45,3,1,""],unstack:[45,3,1,""],update_config:[45,3,1,""],vector_norm:[45,3,1,""],with_default_key_color:[45,3,1,""],with_entries_as_lists:[45,3,1,""],with_ivy_backend:[45,3,1,""],with_key_length_limit:[45,3,1,""],with_print_indent:[45,3,1,""],with_print_limit:[45,3,1,""],with_print_line_spacing:[45,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[46,3,1,""],at_dev:[46,3,1,""],at_devs:[46,3,1,""]},"ivy.debugger":{debug_mode:[49,2,1,""],set_breakpoint_debug_mode:[50,2,1,""],set_debug_mode:[51,2,1,""],set_exception_debug_mode:[52,2,1,""],unset_debug_mode:[53,2,1,""]},"ivy.framework_handler":{ContextManager:[65,1,1,""],choose_random_framework:[67,2,1,""],clear_framework_stack:[68,2,1,""],current_framework:[69,2,1,""],get_framework:[70,2,1,""],set_framework:[71,2,1,""],try_import_ivy_jax:[72,2,1,""],try_import_ivy_mxnet:[73,2,1,""],try_import_ivy_numpy:[74,2,1,""],try_import_ivy_tf:[75,2,1,""],try_import_ivy_torch:[76,2,1,""],unset_framework:[77,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[65,3,1,""]},"ivy.functional":{backends:[79,0,0,"-"],ivy:[921,0,0,"-"]},"ivy.functional.backends.numpy":{activations:[399,0,0,"-"],constants:[402,0,0,"-"],creation:[403,0,0,"-"],data_type:[417,0,0,"-"],device:[423,0,0,"-"],general:[467,0,0,"-"]},"ivy.functional.backends.numpy.activations":{gelu:[400,2,1,""],leaky_relu:[399,2,1,""],relu:[399,2,1,""],sigmoid:[399,2,1,""],softmax:[401,2,1,""],softplus:[399,2,1,""]},"ivy.functional.backends.numpy.creation":{array:[404,2,1,""],asarray:[405,2,1,""],empty:[406,2,1,""],empty_like:[407,2,1,""],eye:[408,2,1,""],full_like:[409,2,1,""],linspace:[410,2,1,""],logspace:[411,2,1,""],ones:[412,2,1,""],ones_like:[413,2,1,""],tril:[414,2,1,""],triu:[415,2,1,""],zeros:[416,2,1,""]},"ivy.functional.backends.numpy.data_type":{Finfo:[417,1,1,""],broadcast_to:[419,2,1,""],finfo:[420,2,1,""],iinfo:[421,2,1,""],result_type:[422,2,1,""]},"ivy.functional.backends.numpy.data_type.Finfo":{__init__:[417,3,1,""],bits:[417,3,1,""],eps:[417,3,1,""],max:[417,3,1,""],min:[417,3,1,""],smallest_normal:[417,3,1,""]},"ivy.functional.backends.numpy.device":{Profiler:[424,1,1,""],clear_mem_on_dev:[423,2,1,""],dev:[423,2,1,""],dev_from_str:[423,2,1,""],dev_to_str:[423,2,1,""],gpu_is_available:[423,2,1,""],num_gpus:[423,2,1,""],to_dev:[423,2,1,""],tpu_is_available:[423,2,1,""]},"ivy.functional.backends.numpy.device.Profiler":{__init__:[424,3,1,""],start:[424,3,1,""],stop:[424,3,1,""]},"ivy.functional.backends.numpy.general":{container_types:[467,2,1,""],copy_array:[467,2,1,""],cumprod:[468,2,1,""],floormod:[467,2,1,""],gather:[469,2,1,""],gather_nd:[470,2,1,""],inplace_arrays_supported:[467,2,1,""],inplace_decrement:[471,2,1,""],inplace_increment:[472,2,1,""],inplace_update:[473,2,1,""],inplace_variables_supported:[467,2,1,""],is_array:[474,2,1,""],scatter_flat:[475,2,1,""],scatter_nd:[476,2,1,""],to_list:[467,2,1,""],to_numpy:[467,2,1,""],to_scalar:[467,2,1,""],unstack:[477,2,1,""]},"ivy.functional.backends.numpy.old":{general:[516,0,0,"-"],linear_algebra:[534,0,0,"-"]},"ivy.functional.backends.numpy.old.general":{abs:[516,2,1,""],arange:[517,2,1,""],argmin:[518,2,1,""],astype:[516,2,1,""],cast:[519,2,1,""],clip:[516,2,1,""],compile:[520,2,1,""],concatenate:[521,2,1,""],current_framework_str:[516,2,1,""],dtype:[522,2,1,""],dtype_bits:[523,2,1,""],dtype_from_str:[524,2,1,""],dtype_to_str:[525,2,1,""],full:[526,2,1,""],get_num_dims:[516,2,1,""],identity:[527,2,1,""],indices_where:[528,2,1,""],linear_resample:[529,2,1,""],meshgrid:[516,2,1,""],multiprocessing:[516,2,1,""],one_hot:[530,2,1,""],shape:[516,2,1,""],squeeze:[531,2,1,""],transpose:[532,2,1,""],where:[516,2,1,""],zeros_like:[533,2,1,""]},"ivy.functional.ivy":{activations:[922,0,0,"-"],compilation:[930,0,0,"-"],constants:[932,0,0,"-"],creation:[933,0,0,"-"],data_type:[947,0,0,"-"],device:[975,0,0,"-"],elementwise:[1025,0,0,"-"],general:[1071,0,0,"-"],gradients:[1126,0,0,"-"],image:[1142,0,0,"-"],layers:[1149,0,0,"-"],linear_algebra:[1162,0,0,"-"],losses:[1179,0,0,"-"],manipulation:[1183,0,0,"-"],meta:[1193,0,0,"-"],nest:[1197,0,0,"-"],norms:[1209,0,0,"-"],old:[1211,0,0,"-"],random:[1244,0,0,"-"],searching:[1251,0,0,"-"],set:[1253,0,0,"-"],sorting:[1254,0,0,"-"],statistical:[1256,0,0,"-"],utility:[1265,0,0,"-"]},"ivy.functional.ivy.activations":{gelu:[923,2,1,""],leaky_relu:[924,2,1,""],relu:[925,2,1,""],sigmoid:[926,2,1,""],softmax:[927,2,1,""],softplus:[928,2,1,""],tanh:[929,2,1,""]},"ivy.functional.ivy.compilation":{compile:[931,2,1,""]},"ivy.functional.ivy.constants":{e:[932,4,1,""],nan:[932,4,1,""],pi:[932,4,1,""]},"ivy.functional.ivy.creation":{array:[934,2,1,""],asarray:[935,2,1,""],empty:[936,2,1,""],empty_like:[937,2,1,""],eye:[938,2,1,""],full_like:[939,2,1,""],linspace:[940,2,1,""],logspace:[941,2,1,""],ones:[942,2,1,""],ones_like:[943,2,1,""],tril:[944,2,1,""],triu:[945,2,1,""],zeros:[946,2,1,""]},"ivy.functional.ivy.data_type":{DefaultDtype:[947,1,1,""],DefaultFloatDtype:[947,1,1,""],DefaultIntDtype:[947,1,1,""],astype:[947,2,1,""],broadcast_to:[951,2,1,""],cast:[952,2,1,""],closest_valid_dtype:[953,2,1,""],convert_dtype:[954,2,1,""],default_dtype:[955,2,1,""],default_float_dtype:[956,2,1,""],default_int_dtype:[957,2,1,""],dtype:[958,2,1,""],dtype_bits:[959,2,1,""],dtype_from_str:[960,2,1,""],dtype_to_str:[961,2,1,""],finfo:[962,2,1,""],iinfo:[963,2,1,""],invalid_dtype:[964,2,1,""],is_float_dtype:[965,2,1,""],is_int_dtype:[966,2,1,""],result_type:[967,2,1,""],set_default_dtype:[968,2,1,""],set_default_float_dtype:[969,2,1,""],set_default_int_dtype:[970,2,1,""],unset_default_dtype:[971,2,1,""],unset_default_float_dtype:[972,2,1,""],unset_default_int_dtype:[973,2,1,""],valid_dtype:[974,2,1,""]},"ivy.functional.ivy.data_type.DefaultDtype":{__init__:[947,3,1,""]},"ivy.functional.ivy.data_type.DefaultFloatDtype":{__init__:[947,3,1,""]},"ivy.functional.ivy.data_type.DefaultIntDtype":{__init__:[947,3,1,""]},"ivy.functional.ivy.device":{DefaultDevice:[975,1,1,""],DevClonedItem:[977,1,1,""],DevClonedIter:[978,1,1,""],DevClonedNest:[979,1,1,""],DevDistItem:[980,1,1,""],DevDistIter:[981,1,1,""],DevDistNest:[982,1,1,""],DevManager:[975,1,1,""],DevMapper:[984,1,1,""],DevMapperMultiProc:[985,1,1,""],MultiDev:[975,1,1,""],MultiDevItem:[987,1,1,""],MultiDevIter:[988,1,1,""],MultiDevNest:[989,1,1,""],Profiler:[990,1,1,""],clear_mem_on_dev:[991,2,1,""],default_device:[992,2,1,""],dev:[993,2,1,""],dev_clone:[994,2,1,""],dev_clone_array:[995,2,1,""],dev_clone_iter:[996,2,1,""],dev_clone_nest:[997,2,1,""],dev_dist:[998,2,1,""],dev_dist_array:[999,2,1,""],dev_dist_iter:[1000,2,1,""],dev_dist_nest:[1001,2,1,""],dev_from_str:[1002,2,1,""],dev_to_str:[1003,2,1,""],dev_unify:[1004,2,1,""],dev_unify_array:[1005,2,1,""],dev_unify_iter:[1006,2,1,""],dev_unify_nest:[1007,2,1,""],dev_util:[1008,2,1,""],get_all_arrays_on_dev:[1009,2,1,""],gpu_is_available:[1010,2,1,""],num_arrays_on_dev:[1011,2,1,""],num_cpu_cores:[1012,2,1,""],num_gpus:[1013,2,1,""],percent_used_mem_on_dev:[1014,2,1,""],print_all_arrays_on_dev:[1015,2,1,""],set_default_device:[1016,2,1,""],set_split_factor:[1017,2,1,""],split_factor:[1018,2,1,""],split_func_call:[1019,2,1,""],to_dev:[1020,2,1,""],total_mem_on_dev:[1021,2,1,""],tpu_is_available:[1022,2,1,""],unset_default_device:[1023,2,1,""],used_mem_on_dev:[1024,2,1,""]},"ivy.functional.ivy.device.DefaultDevice":{__init__:[975,3,1,""]},"ivy.functional.ivy.device.DevManager":{__init__:[975,3,1,""],da_tune_step:[975,3,1,""],dim_size:[975,3,1,""],ds_tune_step:[975,3,1,""],map:[975,3,1,""],repeated_config_check:[975,3,1,""],tune_step:[975,3,1,""],tuned:[975,3,1,""]},"ivy.functional.ivy.device.DevMapper":{__init__:[984,3,1,""],map:[984,3,1,""]},"ivy.functional.ivy.device.DevMapperMultiProc":{__init__:[985,3,1,""]},"ivy.functional.ivy.device.MultiDev":{__init__:[975,3,1,""]},"ivy.functional.ivy.device.MultiDevItem":{__init__:[987,3,1,""],items:[987,3,1,""],keys:[987,3,1,""],shape:[987,3,1,""],values:[987,3,1,""]},"ivy.functional.ivy.device.MultiDevIter":{__init__:[988,3,1,""],at_dev:[988,3,1,""],at_devs:[988,3,1,""]},"ivy.functional.ivy.device.MultiDevNest":{__init__:[989,3,1,""],at_dev:[989,3,1,""]},"ivy.functional.ivy.device.Profiler":{__init__:[990,3,1,""],start:[990,3,1,""],stop:[990,3,1,""]},"ivy.functional.ivy.elementwise":{abs:[1026,2,1,""],acos:[1027,2,1,""],acosh:[1028,2,1,""],asin:[1029,2,1,""],asinh:[1030,2,1,""],atan2:[1032,2,1,""],atan:[1031,2,1,""],atanh:[1033,2,1,""],bitwise_and:[1034,2,1,""],bitwise_invert:[1035,2,1,""],bitwise_or:[1036,2,1,""],ceil:[1037,2,1,""],cos:[1038,2,1,""],cosh:[1039,2,1,""],divide:[1040,2,1,""],erf:[1041,2,1,""],exp:[1042,2,1,""],expm1:[1043,2,1,""],floor:[1044,2,1,""],greater_equal:[1045,2,1,""],isfinite:[1046,2,1,""],isinf:[1047,2,1,""],isnan:[1048,2,1,""],less:[1049,2,1,""],less_equal:[1050,2,1,""],log10:[1052,2,1,""],log1p:[1053,2,1,""],log2:[1054,2,1,""],log:[1051,2,1,""],logaddexp:[1055,2,1,""],logical_and:[1056,2,1,""],logical_not:[1057,2,1,""],logical_or:[1058,2,1,""],logical_xor:[1059,2,1,""],negative:[1060,2,1,""],not_equal:[1061,2,1,""],positive:[1062,2,1,""],remainder:[1063,2,1,""],round:[1064,2,1,""],sin:[1065,2,1,""],sinh:[1066,2,1,""],sqrt:[1067,2,1,""],square:[1068,2,1,""],tan:[1069,2,1,""],tanh:[1070,2,1,""]},"ivy.functional.ivy.general":{"default":[1085,2,1,""],all_equal:[1072,2,1,""],arg_names:[1073,2,1,""],array_equal:[1074,2,1,""],arrays_equal:[1075,2,1,""],assert_supports_inplace:[1076,2,1,""],cache_fn:[1077,2,1,""],clip_matrix_norm:[1078,2,1,""],clip_vector_norm:[1079,2,1,""],container_types:[1080,2,1,""],copy_array:[1081,2,1,""],cumprod:[1082,2,1,""],cumsum:[1083,2,1,""],current_framework_str:[1084,2,1,""],einops_rearrange:[1086,2,1,""],einops_reduce:[1087,2,1,""],einops_repeat:[1088,2,1,""],exists:[1089,2,1,""],floormod:[1090,2,1,""],fourier_encode:[1091,2,1,""],gather:[1092,2,1,""],gather_nd:[1093,2,1,""],get_all_arrays_in_memory:[1094,2,1,""],get_min_base:[1095,2,1,""],get_min_denominator:[1096,2,1,""],get_referrers_recursive:[1097,2,1,""],has_nans:[1098,2,1,""],inplace_arrays_supported:[1099,2,1,""],inplace_decrement:[1100,2,1,""],inplace_increment:[1101,2,1,""],inplace_update:[1102,2,1,""],inplace_variables_supported:[1103,2,1,""],is_array:[1104,2,1,""],match_kwargs:[1105,2,1,""],num_arrays_in_memory:[1106,2,1,""],print_all_arrays_in_memory:[1107,2,1,""],queue_timeout:[1108,2,1,""],scatter_flat:[1109,2,1,""],scatter_nd:[1110,2,1,""],set_min_base:[1111,2,1,""],set_min_denominator:[1112,2,1,""],set_queue_timeout:[1113,2,1,""],set_tmp_dir:[1114,2,1,""],shape_to_tuple:[1115,2,1,""],stable_divide:[1116,2,1,""],stable_pow:[1117,2,1,""],supports_inplace:[1118,2,1,""],tmp_dir:[1119,2,1,""],to_list:[1120,2,1,""],to_numpy:[1121,2,1,""],to_scalar:[1122,2,1,""],try_else_none:[1123,2,1,""],unstack:[1124,2,1,""],value_is_nan:[1125,2,1,""]},"ivy.functional.ivy.gradients":{GradientTracking:[1126,1,1,""],adam_step:[1128,2,1,""],adam_update:[1129,2,1,""],execute_with_gradients:[1130,2,1,""],gradient_descent_update:[1131,2,1,""],is_variable:[1132,2,1,""],lamb_update:[1133,2,1,""],lars_update:[1134,2,1,""],optimizer_update:[1135,2,1,""],set_with_grads:[1136,2,1,""],stop_gradient:[1137,2,1,""],unset_with_grads:[1138,2,1,""],variable:[1139,2,1,""],variable_data:[1140,2,1,""],with_grads:[1141,2,1,""]},"ivy.functional.ivy.gradients.GradientTracking":{__init__:[1126,3,1,""]},"ivy.functional.ivy.image":{bilinear_resample:[1143,2,1,""],float_img_to_uint8_img:[1144,2,1,""],gradient_image:[1145,2,1,""],random_crop:[1146,2,1,""],stack_images:[1147,2,1,""],uint8_img_to_float_img:[1148,2,1,""]},"ivy.functional.ivy.layers":{conv1d:[1150,2,1,""],conv1d_transpose:[1151,2,1,""],conv2d:[1152,2,1,""],conv2d_transpose:[1153,2,1,""],conv3d:[1154,2,1,""],conv3d_transpose:[1155,2,1,""],depthwise_conv2d:[1156,2,1,""],dropout:[1157,2,1,""],linear:[1158,2,1,""],lstm_update:[1159,2,1,""],multi_head_attention:[1160,2,1,""],scaled_dot_product_attention:[1161,2,1,""]},"ivy.functional.ivy.linear_algebra":{cholesky:[1163,2,1,""],det:[1164,2,1,""],diagonal:[1165,2,1,""],eigvalsh:[1166,2,1,""],inv:[1167,2,1,""],matmul:[1168,2,1,""],matrix_norm:[1169,2,1,""],matrix_transpose:[1170,2,1,""],pinv:[1171,2,1,""],qr:[1172,2,1,""],slodget:[1173,2,1,""],svd:[1174,2,1,""],svdvals:[1175,2,1,""],trace:[1176,2,1,""],vector_norm:[1177,2,1,""],vector_to_skew_symmetric_matrix:[1178,2,1,""]},"ivy.functional.ivy.losses":{binary_cross_entropy:[1180,2,1,""],cross_entropy:[1181,2,1,""],sparse_cross_entropy:[1182,2,1,""]},"ivy.functional.ivy.manipulation":{constant_pad:[1184,2,1,""],expand_dims:[1185,2,1,""],flip:[1186,2,1,""],permute_dims:[1187,2,1,""],repeat:[1188,2,1,""],split:[1189,2,1,""],swapaxes:[1190,2,1,""],tile:[1191,2,1,""],zero_pad:[1192,2,1,""]},"ivy.functional.ivy.meta":{fomaml_step:[1194,2,1,""],maml_step:[1195,2,1,""],reptile_step:[1196,2,1,""]},"ivy.functional.ivy.nest":{all_nested_indices:[1198,2,1,""],copy_nest:[1199,2,1,""],index_nest:[1200,2,1,""],map:[1201,2,1,""],map_nest_at_index:[1202,2,1,""],map_nest_at_indices:[1203,2,1,""],multi_index_nest:[1204,2,1,""],nested_indices_where:[1205,2,1,""],nested_map:[1206,2,1,""],set_nest_at_index:[1207,2,1,""],set_nest_at_indices:[1208,2,1,""]},"ivy.functional.ivy.norms":{layer_norm:[1210,2,1,""]},"ivy.functional.ivy.old":{dtype:[1212,0,0,"-"],general:[1213,0,0,"-"],linalg:[1242,0,0,"-"],reductions:[1243,0,0,"-"]},"ivy.functional.ivy.old.general":{abs:[1214,2,1,""],arange:[1215,2,1,""],argmin:[1216,2,1,""],broadcast_to:[1217,2,1,""],clip:[1218,2,1,""],concatenate:[1219,2,1,""],cross:[1220,2,1,""],equal:[1221,2,1,""],floor:[1222,2,1,""],full:[1223,2,1,""],get_num_dims:[1224,2,1,""],identity:[1225,2,1,""],indices_where:[1226,2,1,""],linear_resample:[1227,2,1,""],matmul:[1228,2,1,""],maximum:[1229,2,1,""],meshgrid:[1230,2,1,""],minimum:[1231,2,1,""],multiprocessing:[1232,2,1,""],one_hot:[1233,2,1,""],ones:[1234,2,1,""],reshape:[1235,2,1,""],shape:[1236,2,1,""],squeeze:[1237,2,1,""],stack:[1238,2,1,""],transpose:[1239,2,1,""],where:[1240,2,1,""],zeros_like:[1241,2,1,""]},"ivy.functional.ivy.random":{multinomial:[1245,2,1,""],randint:[1246,2,1,""],random_normal:[1247,2,1,""],random_uniform:[1248,2,1,""],seed:[1249,2,1,""],shuffle:[1250,2,1,""]},"ivy.functional.ivy.searching":{argmax:[1252,2,1,""]},"ivy.functional.ivy.sorting":{argsort:[1255,2,1,""]},"ivy.functional.ivy.statistical":{"var":[1264,2,1,""],einsum:[1257,2,1,""],max:[1258,2,1,""],mean:[1259,2,1,""],min:[1260,2,1,""],prod:[1261,2,1,""],std:[1262,2,1,""],sum:[1263,2,1,""]},"ivy.functional.ivy.utility":{all:[1266,2,1,""],any:[1267,2,1,""]},"ivy.stateful":{activations:[1272,0,0,"-"],converters:[1275,0,0,"-"],initializers:[1277,0,0,"-"],layers:[1286,0,0,"-"],module:[1298,0,0,"-"],norms:[1300,0,0,"-"],optimizers:[1302,0,0,"-"],sequential:[1308,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1273,1,1,""],GELU:[1274,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1273,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1274,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1276,2,1,""]},"ivy.stateful.initializers":{Constant:[1277,1,1,""],FirstLayerSiren:[1279,1,1,""],GlorotUniform:[1280,1,1,""],KaimingNormal:[1277,1,1,""],Ones:[1282,1,1,""],Siren:[1283,1,1,""],Uniform:[1277,1,1,""],Zeros:[1285,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1277,3,1,""],create_variables:[1277,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1279,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1280,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1277,3,1,""],create_variables:[1277,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1282,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1283,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1277,3,1,""],create_variables:[1277,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1285,3,1,""]},"ivy.stateful.layers":{Conv1D:[1287,1,1,""],Conv1DTranspose:[1288,1,1,""],Conv2D:[1289,1,1,""],Conv2DTranspose:[1290,1,1,""],Conv3D:[1291,1,1,""],Conv3DTranspose:[1292,1,1,""],DepthwiseConv2D:[1293,1,1,""],Dropout:[1294,1,1,""],LSTM:[1295,1,1,""],Linear:[1296,1,1,""],MultiHeadAttention:[1297,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1287,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1288,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1289,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1290,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1291,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1292,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1294,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1295,3,1,""],get_initial_state:[1295,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1296,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1297,3,1,""]},"ivy.stateful.module":{Module:[1299,1,1,""]},"ivy.stateful.module.Module":{__init__:[1299,3,1,""],build:[1299,3,1,""],build_mode:[1299,3,1,""],built:[1299,3,1,""],check_submod_rets:[1299,3,1,""],get_mod_key:[1299,3,1,""],mod_depth:[1299,3,1,""],mod_height:[1299,3,1,""],mod_with_top_mod_key_chain:[1299,3,1,""],save_weights:[1299,3,1,""],show_mod_in_top_mod:[1299,3,1,""],show_structure:[1299,3,1,""],show_v_in_top_v:[1299,3,1,""],sub_mods:[1299,3,1,""],track_submod_call_order:[1299,3,1,""],track_submod_rets:[1299,3,1,""],v_with_top_v_key_chains:[1299,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1301,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1301,3,1,""]},"ivy.stateful.optimizers":{Adam:[1303,1,1,""],LAMB:[1304,1,1,""],LARS:[1305,1,1,""],Optimizer:[1306,1,1,""],SGD:[1307,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1303,3,1,""],set_state:[1303,3,1,""],state:[1303,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1304,3,1,""],set_state:[1304,3,1,""],state:[1304,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1305,3,1,""],set_state:[1305,3,1,""],state:[1305,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1306,3,1,""],set_state:[1306,3,1,""],step:[1306,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1307,3,1,""],set_state:[1307,3,1,""],state:[1307,3,1,""]},"ivy.stateful.sequential":{Sequential:[1309,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1309,3,1,""]},"ivy.verbosity":{cprint:[1312,2,1,""]},ivy:{"debugger":[48,0,0,"-"],container:[44,0,0,"-"],framework_handler:[65,0,0,"-"],func_wrapper:[78,0,0,"-"],verbosity:[1311,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1302,1303,1304],"02886":1268,"100":[42,43,1268],"141592653589793":932,"2006":41,"2015":42,"2019":[1025,1043],"2021":1268,"2102":1268,"360":[1025,1069],"70s":42,"718281828459045":932,"754":[42,932,947,962,1025,1043,1063,1067],"80s":42,"90s":42,"999":[1126,1128,1129,1133,1302,1303,1304],"\u03c0":[1025,1027,1031],"abstract":[41,975,990,1268,1302,1306],"boolean":[44,45,947,964,974,975,1010,1022,1025,1034,1035,1036,1056,1057,1058,1059,1071,1072,1074,1075,1098,1099,1103,1104,1118,1125,1126,1132,1193,1194,1195,1213,1226],"break":47,"case":[15,18,19,42,44,45,46,47,975,1014,1021,1024,1025,1026,1027,1028,1030,1031,1037,1038,1043,1044,1052,1054,1055,1063,1065,1066,1067,1071,1109,1110,1162,1169,1197,1200,1204,1213,1215,1235,1256,1258,1268,1286,1297,1298,1299,1302,1306],"catch":[1071,1085],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,64,65,417,423,424,947,963,975,977,978,979,980,981,982,984,985,987,988,989,990,1002,1003,1071,1073,1105,1126,1140,1179,1181,1182,1197,1199,1206,1268,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],"default":[15,18,19,44,45,46,47,922,923,927,930,931,933,935,936,937,938,939,941,942,943,944,945,946,947,955,956,957,958,975,984,985,992,993,997,998,999,1000,1001,1004,1005,1006,1007,1014,1017,1018,1019,1024,1071,1072,1078,1079,1082,1083,1091,1092,1098,1105,1108,1109,1110,1113,1116,1117,1124,1125,1126,1129,1131,1132,1133,1134,1135,1137,1141,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1163,1165,1169,1172,1177,1179,1180,1181,1182,1183,1184,1186,1188,1189,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1209,1210,1213,1215,1216,1219,1220,1223,1224,1225,1227,1230,1232,1234,1236,1239,1244,1245,1247,1248,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],"final":[44,45,47,933,940,941,1071,1091,1286,1297],"float":[44,45,46,47,403,409,922,924,932,933,936,938,939,941,942,946,947,956,962,965,967,975,984,985,1008,1014,1017,1021,1024,1025,1027,1028,1030,1031,1037,1038,1040,1043,1044,1052,1054,1055,1063,1065,1066,1067,1071,1078,1079,1091,1095,1096,1111,1112,1113,1116,1117,1126,1128,1129,1131,1133,1134,1135,1142,1144,1148,1149,1157,1160,1161,1162,1163,1164,1166,1172,1177,1179,1180,1181,1182,1183,1184,1193,1194,1195,1196,1209,1210,1213,1215,1223,1244,1247,1248,1256,1258,1261,1263,1264,1286,1294,1297,1300,1301,1302,1303,1304,1305,1306,1307],"function":[15,41,44,45,47,54,64,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,467,468,469,470,471,472,473,474,475,476,477,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,977,978,979,980,981,982,984,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1272,1273,1274,1302,1305,1306,1307],"import":[42,47,1268,1271],"int":[44,45,46,47,403,406,408,409,412,414,415,416,417,419,922,927,930,931,933,936,938,939,940,941,942,944,945,946,947,951,957,959,962,963,966,975,997,998,999,1000,1001,1004,1005,1006,1007,1012,1013,1019,1071,1082,1083,1086,1087,1088,1091,1092,1109,1110,1115,1124,1126,1128,1129,1133,1142,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1160,1162,1165,1169,1176,1177,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1206,1209,1210,1213,1216,1217,1219,1223,1224,1225,1227,1233,1234,1235,1236,1237,1238,1239,1244,1245,1246,1248,1249,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1264,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1300,1301],"long":[47,1149,1159],"new":[41,42,43,44,45,47,54,933,936,939,942,943,946,947,952,1025,1033,1039,1053,1062,1070,1071,1086,1087,1088,1091,1092,1093,1109,1110,1111,1112,1116,1117,1126,1129,1131,1133,1134,1135,1142,1144,1146,1148,1183,1185,1197,1207,1208,1209,1210,1213,1214,1217,1223,1234,1235,1238,1244,1245,1268,1275,1276,1286,1296,1300,1301,1302,1303,1304,1305,1306,1307],"public":[1071,1080],"return":[15,16,17,18,19,44,45,46,47,922,923,924,925,926,927,928,929,930,931,933,934,936,937,938,939,940,941,942,943,944,945,946,947,951,952,953,954,955,956,957,958,959,960,961,964,965,966,967,974,975,984,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1010,1011,1013,1014,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1098,1099,1100,1101,1102,1103,1104,1105,1106,1109,1110,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1247,1248,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1275,1276,1286,1295,1296,1302,1306],"short":[47,1149,1159,1268],"static":[44,45,930,931],"true":[44,45,46,399,400,516,520,922,923,930,931,975,1025,1046,1047,1048,1057,1058,1071,1072,1076,1077,1089,1091,1098,1125,1126,1129,1131,1132,1133,1134,1135,1137,1149,1157,1162,1163,1169,1174,1177,1179,1180,1181,1182,1193,1194,1195,1196,1197,1198,1205,1213,1226,1240,1244,1245,1251,1252,1254,1255,1256,1258,1259,1261,1262,1265,1266,1267,1286,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307],"try":[40,42,43,44,45,1071,1123],"var":[44,45,1193,1194,1195,1256],"while":[41,42,44,45,46,1025,1057,1058],AND:[1025,1034,1056,1265,1266],AWS:42,For:[41,42,43,47,1025,1026,1027,1028,1030,1031,1037,1038,1043,1044,1052,1054,1055,1063,1065,1066,1067,1126,1132,1140,1213,1215,1218,1238,1256,1258,1268,1275,1276],NOT:[1025,1057],Not:932,One:[44,45,47,1071,1087,1213,1235,1244,1246],Ones:1277,PRs:47,Such:[1071,1080],That:[1025,1063],The:[15,16,17,18,19,40,41,43,44,45,46,47,54,922,923,924,925,926,927,928,929,930,931,933,934,941,944,945,947,952,953,954,959,960,961,964,974,975,984,985,991,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1014,1017,1018,1019,1020,1021,1024,1025,1026,1027,1028,1029,1030,1031,1034,1035,1036,1037,1038,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1069,1071,1074,1077,1078,1079,1081,1084,1085,1091,1092,1093,1100,1101,1102,1104,1109,1110,1111,1112,1113,1115,1116,1117,1125,1126,1128,1129,1131,1133,1134,1135,1137,1140,1142,1144,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1169,1170,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1186,1187,1188,1189,1191,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1215,1217,1219,1220,1221,1225,1227,1228,1230,1232,1234,1235,1237,1238,1241,1244,1245,1247,1248,1251,1252,1254,1255,1256,1257,1258,1259,1261,1262,1263,1264,1265,1266,1267,1268,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299,1300,1301,1302,1304,1305,1306],There:[41,47,1268],These:[41,42,43,47,1268,1271],Use:47,Used:[1197,1198,1205,1298,1299],Using:1268,With:[42,43,44,45,1162,1169,1251,1252,1256,1259,1262,1268],__array__:[933,934],__call__:[1286,1297,1298,1299],__init__:[44,45,46,47,65,66,102,266,417,418,423,424,572,740,947,948,949,950,975,976,983,984,985,986,987,988,989,990,1126,1127,1268,1272,1273,1274,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],__pow__:47,_base:[1197,1198,1205],_cur_framework:47,_forward:1268,_handle_flat_arrays_in_out:47,_index:[1197,1198,1205],_min_bas:[1071,1117,1209,1210,1300,1301],_min_denomin:[1071,1116],_native_wrapp:47,_step:[1302,1306],abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,975,984,990,1298,1299,1302,1306],abil:1268,abl:[44,45],about:[43,947,962,963],abov:[47,933,944,945,1162,1165,1244,1246,1256,1261,1263],above_height:[44,45],abs:[516,1025,1162,1177,1213],absolut:[44,45,1025,1026,1162,1173,1213,1214],abund:43,accept:[15,47,1025,1057,1058,1063,1268],access:[44,45,47],accord:[44,45,947,962,1071,1092,1109,1110,1183,1184,1192,1213,1239],accordingli:[1025,1043,1162,1177,1256,1258,1261,1265,1266,1267],accur:[65,417,423,424,947,975,987,988,989,990,1025,1043,1126,1277,1279,1280,1282,1283,1285],aco:1025,acosh:1025,across:[44,45,975,984,985,994,995,997,998,999,1000,1001,1007,1017,1018,1071,1074,1075,1197,1201,1213,1216],act:47,activ:[400,401,923,924,925,926,927,928,929,1273,1274],adam:[1126,1128,1129,1133,1268,1302,1304],adam_step:1126,adam_upd:1126,adapt:[42,1126,1134,1302,1305],add:[44,45,47,1179,1180,1181,1182,1209,1210,1268,1271,1300,1301],added:[47,1071,1116,1117,1308,1309],adding:[42,47,1213,1217],addit:[44,45,47,1071,1086,1087,1088,1209,1210,1286,1296],addition:47,address:[43,47],adher:[41,42,47],adjac:[1213,1215],adjust:[1256,1264],adopt:[42,47,1071,1080],affect:[1213,1215],affin:[1300,1301],after:[1025,1067,1126,1129,1130,1131,1133,1134,1135,1142,1143,1209,1210,1213,1227,1302,1303,1304,1305,1306,1307],after_1:[1183,1184,1192],after_n:[1183,1184,1192],again:[42,43,47],against:[41,44,45,1162,1168,1169,1251,1252,1256,1259,1262],agnost:[47,1268],algorithm:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],align:[44,45,47,1213,1217,1271],aliv:[975,1009,1011,1015,1071,1094,1106,1107],all:[15,16,17,18,19,41,42,43,44,45,47,930,931,933,938,944,945,975,984,1009,1015,1071,1072,1074,1075,1080,1094,1107,1149,1159,1162,1177,1183,1186,1193,1194,1195,1196,1197,1198,1199,1205,1206,1213,1214,1225,1237,1244,1245,1248,1256,1259,1262,1265,1268],all_depth:[44,45],all_equ:1071,all_fals:[44,45],all_key_chain:[44,45],all_nested_indic:1197,all_tru:[44,45],alloc:[47,933,944,945,975],allow:[42,933,940,941,1071,1105,1298,1299],allow_dupl:[1071,1105],allud:42,almost:41,alon:[975,1014,1024,1268],along:[44,45,47,933,940,941,975,998,999,1000,1001,1004,1005,1006,1007,1019,1071,1082,1083,1092,1124,1162,1169,1176,1177,1183,1186,1188,1189,1191,1193,1194,1195,1196,1213,1219,1227,1238,1244,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],alongsid:42,alpha:[399,922,924],alphabet:[44,45,46],alphabetical_kei:[44,45,46],alreadi:[44,45,47,975,1025,1037,1044],also:[41,42,44,45,47,1126,1129,1149,1158,1193,1194,1195,1196,1197,1198,1199,1205,1206,1213,1215,1268,1286,1296],alwai:[44,45,47,1126,1132,1137],among:[43,44,45],amount:[975,1021,1268],angl:[1025,1032,1066],ani:[15,16,17,18,19,41,42,43,44,45,47,930,931,933,934,935,975,977,980,984,985,987,996,997,1000,1001,1006,1025,1045,1050,1071,1072,1085,1086,1087,1088,1089,1098,1104,1105,1116,1117,1126,1130,1197,1198,1201,1205,1206,1207,1208,1213,1215,1221,1244,1248,1265,1268,1275,1276,1298,1299],anoth:[42,44,45,47,947,954,1268],another_backend:47,anyon:42,anyth:47,anywai:47,apach:42,apart:47,api:[40,41,54,1268,1271],appear:[47,1183,1185],append:[44,45,1162,1165,1168],appli:[15,18,19,44,45,64,922,923,924,925,926,927,928,929,947,967,1071,1086,1087,1088,1126,1133,1134,1149,1158,1160,1161,1162,1174,1193,1194,1195,1197,1201,1204,1206,1209,1210,1268,1272,1273,1274,1300,1301],applic:[1149,1160,1161,1197,1201,1206,1268],appropri:[1251,1252],approxim:[47,399,400,922,923,1025,1027,1028,1030,1031,1038,1043,1052,1053,1054,1065,1066],arang:[516,933,940,941,1213],arbitrari:[44,45,947,967,975,1004,1005,1007],arc:[1025,1032],area:[42,64,1025,1028,1030,1268],arg:[15,16,17,44,45,47,65,69,975,984,997,1001,1007,1019,1071,1086,1087,1088,1110,1275,1276,1298,1299],arg_nam:1071,arg_stateful_idx:[1298,1299],argmax:1251,argmin:[516,1213],args_to_ivi:15,args_to_n:15,argsort:1254,argument:[15,16,17,18,19,41,44,45,46,47,65,69,930,931,947,967,975,984,985,997,1001,1007,1071,1073,1077,1085,1105,1110,1197,1201,1213,1215,1275,1276,1298,1299],aris:[42,1268],arithmet:[47,1256,1259,1262],arithmetic_oper:[0,1,2,47],aros:42,around:[44,45,46,47],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,54,403,922,923,924,925,926,927,928,929,933,935,936,937,938,939,940,941,942,943,944,945,946,947,951,952,958,962,963,965,966,967,975,993,994,995,998,999,1000,1001,1004,1005,1006,1007,1009,1011,1015,1019,1020,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1078,1079,1081,1082,1083,1086,1087,1088,1090,1091,1092,1093,1094,1098,1099,1100,1101,1102,1104,1106,1107,1109,1110,1118,1120,1121,1122,1124,1125,1126,1128,1129,1132,1133,1137,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1197,1199,1206,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1247,1248,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1286,1294,1295,1297,1302,1306],arrang:[1071,1086],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,47],array_api_methods_to_test:47,array_builtin:47,array_equ:1071,array_lik:[933,934],array_modul:47,array_oper:[0,3,4],arrays_and_dtyp:[417,422,947,967],arrays_as_list:[44,45],arrays_equ:[44,45,1071],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:20,arraywithgener:22,arraywithgradi:24,arraywithimag:26,arraywithlinalg:28,arraywithlog:30,arraywithmath:32,arraywithmeta:34,arraywithrandom:36,arraywithreduct:38,arriv:[44,45,46],articl:1268,arxiv:1268,as_arrai:[44,45,1213,1224,1236],as_bool:[44,45],as_on:[44,45],as_random_uniform:[44,45],as_str:[423,516,522,947,955,956,957,958,975,993],as_tensor:516,as_vari:[44,45],as_zero:[44,45],asarrai:[403,933],ascend:[1254,1255],asin:1025,asinh:1025,ask:43,aspect:[1142,1147],assert:[44,45,1071,1076],assert_contains_sub_contain:[44,45],assert_contains_sub_structur:[44,45],assert_ident:[44,45],assert_identical_structur:[44,45],assert_is_bool:[44,45],assert_supports_inplac:1071,associ:[47,1162,1178],assum:[1025,1038,1065],astyp:[516,947],asynchron:[44,45,46],at_dev:[44,46,975,988,989],at_kei:[44,45],at_key_chain:[44,45],atan2:1025,atan:1025,atanh:1025,attent:[42,47,1149,1160,1161,1286,1297],attribut:[0,6,44,45,947,962,963,1213,1241],audienc:1268,author:1268,automat:[43,47,54],avail:[41,44,45,47,975,1010,1012,1013,1022,1071,1087],averag:[1126,1128,1129,1133,1193,1194,1195,1256,1259],average_across_step:[1193,1194,1195],avoid:[47,975,1025,1043],awesom:43,axes:[44,45,47,516,532,975,1019,1162,1169,1177,1183,1184,1185,1186,1187,1190,1192,1213,1216,1239,1251,1252,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],axes_length:[44,45,1071,1086,1087,1088],axi:[44,45,399,401,403,410,411,467,468,469,477,516,518,521,529,531,922,927,933,940,941,975,977,980,987,998,999,1000,1001,1004,1005,1006,1007,1019,1071,1082,1083,1092,1124,1162,1165,1176,1177,1179,1181,1182,1183,1184,1185,1186,1188,1189,1190,1191,1192,1213,1216,1219,1220,1227,1237,1238,1244,1250,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],axis0:[44,45,1183,1190],axis1:[44,45,1162,1165,1183,1190],axis2:[1162,1165],back:[42,47,54,1271,1298,1299,1302,1306],backend:[15,17,19,44,45,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,467,468,469,470,471,472,473,474,475,476,477,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,947,954,964,974,975,1010,1013,1022,1071,1099,1103,1126,1129,1131,1133,1134,1135,1140,1268,1275,1276,1302,1303,1304,1305,1306,1307],backend_nam:47,background:1268,backward:[1025,1063,1265,1266,1267],band:[1071,1091],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,45,46,47,65,403,411,417,423,424,933,941,947,975,977,978,979,980,981,982,984,985,987,988,989,990,1025,1052,1053,1054,1071,1095,1111,1117,1126,1256,1257,1268,1272,1273,1274,1277,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],basi:47,batch:[44,45,975,1017,1018,1071,1091,1142,1146,1149,1158,1162,1174,1177,1193,1194,1195,1196,1209,1210,1213,1225,1300,1301],batch_shap:[516,527,1142,1143,1144,1145,1146,1147,1148,1149,1159,1160,1161,1162,1178,1213,1225,1233,1244,1245,1286,1295],batch_siz:[1149,1150,1151,1152,1153,1154,1155,1156,1244,1245],becaus:[47,1213,1215],becom:[41,43,47,1025,1032,1213,1218],been:[1071,1086,1087,1088,1244,1245],befor:[44,45,47,975,1019,1149,1160,1161,1193,1194,1195,1197,1206,1256,1259,1261,1262,1263],before_1:[1183,1184,1192],before_n:[1183,1184,1192],begin:[1197,1198,1205],behavior:[1025,1063],behaviour:47,behind:[1126,1129,1131,1133,1134,1135,1268],being:[42,43,44,45,47,1071,1108,1113,1213,1215],believ:[42,47],belong:[44,45],below:[47,933,944,945,1162,1165,1268],below_depth:[44,45],benefit:[42,43,1268],bernoul:[1149,1157,1286,1294],best:[47,1071,1105,1268],beta1:[1126,1128,1129,1133,1302,1303,1304],beta2:[1126,1128,1129,1133,1302,1303,1304],beta:[1209,1210],better:43,between:[41,44,45,46,54,947,962,1179,1181,1182,1197,1201,1213,1215,1244,1246,1302,1304],bia:[1149,1158,1159,1286,1287,1288,1289,1290,1291,1292,1293,1296],bias_initi:[1286,1287,1288,1289,1290,1291,1292,1293,1296],bilinear:[1142,1143],bilinear_resampl:1142,bilinearli:[1142,1143],binari:[1025,1034,1036,1059,1179,1180],binary_cross_entropi:1179,bio:42,bit:[417,947,959,962,963,1025,1035,1142,1144,1148,1256,1261,1263,1268],bitwis:[1025,1034,1036,1059],bitwise_and:1025,bitwise_invert:1025,bitwise_oper:[0,7,8],bitwise_or:1025,block:[54,1268],bluetooth:42,bool:[15,18,19,44,45,46,47,922,923,930,931,947,955,956,957,958,964,965,966,974,975,993,1006,1010,1014,1019,1022,1024,1025,1045,1046,1047,1048,1049,1050,1056,1057,1058,1061,1071,1072,1074,1075,1082,1085,1089,1091,1098,1104,1105,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1137,1149,1157,1162,1163,1169,1174,1177,1183,1189,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1213,1221,1224,1236,1240,1244,1245,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1264,1265,1266,1267,1275,1276,1286,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307],both:[47,1162,1168,1213,1220],bottleneck:41,bottom:1268,boundari:[44,45,1244,1248],branch:[47,930,931],bring:42,brittl:47,broadcast:[44,45,47,947,951,1025,1032,1034,1036,1040,1045,1049,1050,1055,1058,1059,1061,1063,1162,1168,1169,1177,1183,1188,1213,1217,1221,1229,1230,1231,1251,1252,1256,1258,1259,1261,1262,1265,1266,1267],broadcast_to:[417,947,1213],btx:42,build:[42,54,1268,1286,1297,1298,1299],build_mod:[1286,1297,1298,1299],builder:[47,64,1268],built:[975,1213,1215,1286,1297,1298,1299],builtin:47,builtin_pow:47,builtin_some_op:47,bumpi:42,bus:42,busi:47,cach:[975,991,1071,1077],cache_fn:1071,calcul:[42,44,45,46,47,1025,1026,1027,1028,1030,1031,1038,1040,1043,1052,1053,1054,1055,1065,1066,1067,1256,1258,1261,1263,1264],call:[42,47,975,1019,1071,1108,1113,1123,1126,1130,1197,1198,1201,1205,1286,1297,1298,1299,1302,1306],callabl:[44,45,930,931,975,984,985,1019,1071,1077,1085,1087,1105,1123,1149,1160,1193,1194,1195,1196,1197,1201,1202,1203,1205,1206],can:[41,42,43,47,54,933,935,975,1017,1018,1019,1142,1144,1213,1235,1268,1271],cannot:47,captur:1268,care:42,cast:[44,45,516,947,1142,1144,1148,1213,1219,1256,1261,1263],catalyst:43,catch_except:[1071,1085],categori:[47,54],caus:47,ceil:[1025,1213,1215],celebr:42,cell:[1149,1159,1286,1295],central:42,certain:[44,45,933,940,941,1213,1215],certainli:42,chain:[44,45,1193,1194,1195,1308,1309],chang:[43,47,975,1197,1199,1206,1213,1235,1268,1271],channel:[1071,1091,1142,1144,1145,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296],charact:42,charger:42,check:[15,16,17,18,19,41,42,43,44,45,47,947,953,964,974,975,1014,1024,1071,1076,1089,1098,1104,1118,1125,1126,1132,1197,1198,1205,1268],check_nest:[1197,1205],check_shap:[44,45],check_submod_ret:[1298,1299],check_typ:[44,45],choic:[43,1268],choleski:1162,choos:[1025,1032,1057,1058,1213,1240,1256,1258,1268],choose_random_framework:65,chosen:[44,45,1213,1215,1240],chunk:[975,1017,1018,1019],chunk_siz:[975,1019],circl:[1025,1029],clark:1268,clear:[41,42,43,47,975,991],clear_framework_stack:65,clear_mem_on_dev:[423,975],clearli:42,click:1268,clip:[44,45,516,1071,1078,1079,1213,1229,1231,1268],clip_matrix_norm:1071,clip_max:[44,45],clip_min:[44,45],clip_vector_norm:[44,45,1071],clone:[44,45,975,994,995,996,997],close:[47,1025,1029,1043,1142,1147],closest:[947,953,1025,1037,1044],closest_valid_dtyp:947,cloth:41,code:[41,42,43,44,45,46,47,54,64,1268,1271],codebas:[43,54,975,1017,1018,1268],codomain:[1025,1027,1028,1030,1031,1038,1043,1052,1054,1065,1066,1067],colab:1268,collabor:[40,41,42],collect:[15,44,45,399,423,467,516,922,930,975,1071,1126,1142,1149,1179,1197,1209,1213,1243,1244,1272,1286,1300,1302],color:[44,45,46,1311,1312],column:[933,938,1162,1172,1213,1225],combin:[44,45,46,1142,1147,1268],combo:1271,come:[64,1271],comic:42,command:1268,comment:47,common:[41,44,45,47,1025,1032],common_key_chain:[44,45],commun:[42,47,1268,1271],communuti:47,compani:42,compar:[44,45,1071,1072,1074,1075,1254,1255],comparison_oper:[0,9,10],compat:[42,47,947,951,1025,1034,1036,1040,1045,1049,1050,1055,1056,1058,1059,1061,1063,1162,1177,1213,1221,1235,1256,1258,1261,1265,1266,1267,1268],compil:[54,516,1298,1299,1302,1303,1304,1305,1306,1307],compile_on_next_step:[1298,1299,1302,1303,1304,1305,1306,1307],complet:[42,44,45,47,1162,1172],complianc:42,compliant:[1025,1043,1057,1058,1256,1258],compon:[42,1213,1220],composit:47,comput:[42,43,44,45,975,1019,1025,1029,1032,1034,1036,1041,1042,1045,1049,1050,1051,1056,1057,1058,1059,1060,1061,1069,1071,1078,1079,1082,1083,1126,1128,1129,1130,1131,1133,1134,1135,1137,1139,1142,1145,1149,1150,1151,1152,1153,1154,1155,1156,1158,1160,1162,1163,1166,1167,1168,1169,1171,1172,1173,1176,1177,1179,1180,1181,1182,1197,1201,1213,1221,1228,1256,1257,1258,1259,1260,1261,1262,1263,1264],concat:[44,45,975,1004,1005,1006,1007,1019,1071,1091],concaten:[44,45,516,1071,1091,1213,1268],concatten:[44,45,975,1004,1005,1006,1007,1019],conda:42,condit:[516,930,931,1197,1205,1213,1240],conditon:[1197,1205],config:[44,45],configur:[44,45],conflict:47,conform:[47,1025,1043],confus:43,connect:[42,1286,1296,1297],consid:[41,42,44,45,1025,1057,1058],consider:41,consist:[41,44,45,975,1007,1256,1257,1298,1299],consortium:[40,42,1271],constant:[975,984,985,1179,1180,1181,1182,1183,1184,1197,1201,1209,1210,1277,1278,1282,1285,1298,1299,1300,1301],constant_pad:1183,constantli:41,constitu:[44,45],construct:[1183,1191,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],constructor:[44,45,46,1071,1073,1308,1309],consum:975,cont_feat_dim:[1149,1160],contaienr:[44,45],contain:[15,18,19,41,46,47,54,933,937,942,944,945,946,947,952,975,994,998,1019,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1071,1078,1079,1080,1098,1116,1117,1126,1128,1129,1131,1133,1134,1135,1162,1163,1164,1165,1166,1168,1170,1172,1175,1177,1183,1187,1193,1194,1195,1196,1213,1214,1216,1218,1221,1229,1231,1244,1245,1251,1252,1256,1258,1259,1260,1261,1262,1263,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],container0:[44,45],container_combine_method:[44,45,46],container_rightmost:[44,45],container_typ:[467,1071],contains_sub_contain:[44,45],contains_sub_structur:[44,45],content:[44,45],context:[516,1149,1160,1213,1232,1286,1297],context_dim:[1286,1297],contextmanag:[65,66],continu:[42,43,47],contract:[44,45,1256,1257],contrari:42,contribut:1271,contributor:[47,1268],control:1268,conv1d:[1149,1286],conv1d_transpos:1149,conv1dtranspos:1286,conv2d:[1149,1286],conv2d_transpos:1149,conv2dtranspos:1286,conv3d:[1149,1286],conv3d_transpos:1149,conv3dtranspos:1286,convent:[41,44,45,1162,1168,1256,1257],conver:[975,991,1002,1014,1021,1024],converg:43,convers:[16,17,18,19,43,44,45,54,1271],convert:[15,16,17,18,19,43,44,45,47,933,935,947,954,960,961,975,1002,1003,1071,1115,1121,1122,1142,1144,1148,1162,1178,1197,1199,1206,1276],convert_dtyp:947,convinc:42,convolut:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],cool:47,cooler:47,coordin:[1025,1029,1032,1213,1230],copi:[44,45,47,403,405,1071,1081,1197,1199],copy_arrai:[467,1071],copy_nest:1197,core:[41,975,1012,1268],corner:47,correct:[47,1256,1264,1268],correctli:[44,45,47,1025,1032,1162,1169,1251,1252,1256,1259,1262],correspond:[44,45,47,1213,1219,1244,1245,1251,1252,1256,1261,1263],cos:[1025,1069,1071,1091],cosh:1025,cosin:[1025,1027,1028,1038,1039],cost:[1126,1128,1129,1131,1133,1134,1135,1193,1194,1195,1196],cost_fn:[1193,1196],could:[42,43],count:[44,45,1183,1186,1265,1266,1267],cours:47,cprint:1311,cpu:[44,45,47,933,934,940,941,975,1012,1014,1020,1021,1024,1071,1092,1093,1109,1110,1213,1215,1225,1233,1234,1241,1244,1245,1246,1247,1248,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],creat:[42,44,45,64,933,934,935,936,937,938,939,940,941,942,943,946,975,984,985,1071,1092,1093,1109,1110,1120,1126,1139,1213,1215,1223,1225,1233,1234,1241,1244,1245,1246,1247,1248,1268,1271,1275,1276,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],create_if_abs:[44,45],create_vari:1277,creation:[44,45,46,47,404,405,406,407,408,409,410,411,412,413,414,415,416,934,935,936,937,938,939,940,941,942,943,944,945,946],crop:[1142,1146],crop_siz:[1142,1146],cross:[1179,1180,1181,1182,1213],cross_entropi:1179,cuda:[44,45,933,934,940,941,975,984,1003,1020,1071,1092,1093,1109,1110,1213,1215,1225,1233,1234,1241,1244,1245,1246,1247,1248,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],cumprod:[467,1071],cumsum:1071,cumul:[1071,1082,1083],cupi:42,current:[43,44,45,46,47,947,954,964,974,975,984,1008,1009,1011,1015,1071,1084,1094,1099,1103,1106,1107,1197,1198,1205,1268],current_framework:65,current_framework_str:[516,1071],custom:[42,47],cut:41,cutoff_at_depth:[44,45],cutoff_at_height:[44,45],d_in:[1149,1150,1151,1152,1153,1154,1155],d_out:[1149,1150,1151,1152,1153,1154,1155],da_dim_s:975,da_tune_step:975,daniel:1268,dask:42,data:[40,42,44,45,46,47,933,934,935,936,937,938,939,942,943,944,945,946,951,952,953,954,958,959,960,961,962,963,964,965,966,974,975,977,978,979,980,981,982,987,988,989,1003,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1071,1104,1118,1126,1132,1140,1149,1158,1162,1163,1164,1165,1166,1168,1170,1172,1177,1183,1186,1187,1213,1215,1221,1223,1225,1234,1235,1237,1241,1251,1252,1254,1255,1256,1258,1261,1263,1264,1265,1266,1267,1268,1271],data_format:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],data_typ:[417,419,420,421,422,947,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974],dataload:64,dataset:[44,45,64],datatyp:[44,45,933,935,947,953,965,966],dcdw:[1126,1128,1129,1131,1133,1134],debug_mod:48,debug_mode_in:[48,51],debugg:[49,50,51,52,53],decai:[1126,1133,1134,1302,1304,1305],decay_lambda:[1126,1133,1134,1302,1304,1305],decid:[44,45],decomposit:[1162,1163,1172,1174],decor:47,decrement:[1071,1100],dedic:[1126,1140,1275,1276],deep:[41,44,45,1268],deep_copi:[44,45],deeper:[41,975,997,1001,1007,1197,1206,1268],deepli:[1197,1199],deepmind:43,def:[47,66,102,266,418,572,740,948,949,950,976,983,986,1127,1268,1278,1281,1284],default_dev:47,default_devic:975,default_dtyp:[47,947],default_float_dtyp:947,default_int_dtyp:947,default_key_color:[44,45,46],default_v:[1071,1085],defaultdevic:[975,976],defaultdtyp:[947,948],defaultfloatdtyp:[947,949],defaultintdtyp:[947,950],defer:47,defin:[47,1025,1063,1213,1220,1233,1241,1244,1246,1256,1258],definit:[47,1162,1163],degre:[1025,1069,1256,1264],delai:47,delet:47,delta:[1126,1128],demo:1268,denomin:[1071,1090,1096,1112,1116,1117,1209,1210,1300,1301],denot:47,dens:[1286,1296],depend:[42,47,1025,1026,1027,1028,1030,1031,1038,1043,1052,1053,1054,1065,1066,1162,1172,1174,1213,1240,1254,1255,1268],depth:[44,45,516,530,975,997,1001,1007,1071,1097,1197,1206,1213,1233,1298,1299],depth_cutoff:[44,45],depthwis:[1149,1156,1286,1293],depthwise_conv2d:1149,depthwiseconv2d:1286,deriv:[933,937,939,943,1126,1128,1129,1131,1133,1134,1135,1197,1199,1206,1268,1298,1302,1306,1308],descend:[1162,1174,1175,1254,1255],descent:[1126,1131,1302,1307],describ:[44,45,1256,1257,1261,1263],descript:[1162,1177],design:[41,42],desir:[41,44,45,933,934,947,952,975,1020,1142,1147,1213,1215,1225,1226,1234,1241,1256,1259,1262],desired_aspect_ratio:[1142,1147],despit:42,det:1162,detect:[44,45,1197,1198,1205],detect_key_diff:[44,45],detect_shape_diff:[44,45],detect_value_diff:[44,45],determin:[41,44,45,47,933,934,947,952,953,959,964,965,966,974,975,1010,1012,1013,1022,1025,1027,1028,1030,1031,1034,1036,1038,1040,1043,1046,1047,1048,1052,1054,1055,1059,1063,1065,1066,1067,1071,1072,1074,1075,1098,1099,1103,1104,1118,1125,1126,1132,1149,1160,1162,1163,1164,1165,1168,1173,1177,1193,1194,1195,1196,1213,1215,1265,1266,1267],dev:[44,45,46,47,403,404,405,407,410,411,413,423,467,469,470,475,476,516,517,527,530,533,933,934,935,937,940,941,943,975,978,979,981,982,984,985,988,989,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1014,1015,1016,1017,1018,1019,1020,1021,1024,1071,1092,1093,1109,1110,1126,1141,1213,1215,1225,1233,1234,1241,1244,1245,1246,1247,1248,1275,1276,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],dev_clon:[44,45,975],dev_clone_arrai:975,dev_clone_it:975,dev_clone_nest:975,dev_dist:[44,45,975],dev_dist_arrai:975,dev_dist_it:975,dev_dist_nest:975,dev_from_str:[47,423,975],dev_mapp:975,dev_str:[44,45],dev_to_str:[423,975],dev_unifi:975,dev_unify_arrai:975,dev_unify_it:975,dev_unify_nest:975,dev_util:975,devclonedit:975,devcloneditem:975,devclonednest:975,devdistit:975,devdistitem:975,devdistnest:975,develop:[41,42,43,47,1268],deviat:[43,44,45,1209,1210,1244,1247,1256,1262,1300,1301],devic:[21,42,44,45,47,403,406,408,409,412,416,424,516,526,933,934,935,936,937,938,939,940,941,942,943,944,945,946,977,978,979,980,981,982,984,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1071,1092,1093,1109,1110,1126,1141,1213,1215,1223,1225,1233,1234,1241,1244,1245,1246,1247,1248,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],devmanag:[975,983],devmapp:[975,985],devmappermultiproc:975,diag:[1162,1174],diagon:[933,938,944,945,1162,1176,1213,1225],dict:[15,16,17,18,19,44,45,46,975,977,980,984,985,987,997,998,999,1000,1001,1071,1086,1087,1088,1105,1193,1194,1195,1197,1199,1200,1201,1204,1206,1275,1276],dict_in:[44,45,46],dictat:47,dictionari:[44,45,46],did:42,diff:[44,45],diff_kei:[44,45],differ:[41,42,43,44,45,46,47,947,962,975,994,995,998,999,1149,1158,1256,1261,1263,1268],differenti:1268,dilat:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],dim:[44,45,47,1142,1143,1147,1162,1174,1213,1233,1286,1297],dim_siz:[44,45,975],dimens:[44,45,46,922,927,933,944,945,975,1006,1071,1086,1087,1088,1091,1124,1142,1146,1149,1150,1151,1152,1153,1154,1155,1156,1159,1162,1163,1164,1165,1166,1168,1169,1170,1172,1174,1175,1177,1179,1181,1182,1183,1185,1186,1187,1188,1189,1193,1194,1195,1196,1213,1217,1219,1220,1224,1227,1233,1235,1237,1238,1239,1244,1250,1251,1252,1256,1257,1258,1259,1261,1262,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293,1296,1297],dimension:[44,45,933,938,1162,1164,1168,1174,1177,1183,1189,1213,1237,1251,1252,1256,1258,1261,1263,1265,1266,1267],directli:[43,47,1197,1206],directori:[1071,1114,1119],discord:[41,42,43,47],discret:[1179,1181],discuss:[41,42,43,47],disk:[44,45,1142,1144],distanc:[1213,1215],distinct:[42,54],distribut:[44,45,975,994,998,999,1000,1001,1149,1157,1244,1245,1246,1247,1248,1286,1294,1298,1299],distributedarrai:[44,45],distrubt:[1179,1181],dive:1268,divid:[44,45,1025,1071,1116,1183,1189],dividend:[1025,1040,1063],divis:[1025,1040,1063,1071,1090,1096,1112,1116,1117,1126,1128,1129,1133,1302,1303,1304],divisor:[1025,1040,1063,1126,1128,1129,1133,1302,1303,1304],doc:1268,docstr:47,document:47,doe:[42,44,45,47,1183,1189,1213,1215],doesn:1268,doing:[42,47],domain:[1025,1027,1028,1030,1031,1038,1043,1052,1054,1065,1066,1067],don:[43,47,1268],done:47,dopamin:43,dot:[1149,1160,1161,1162,1167,1286,1297],downscal:[1071,1078,1079],drag:1268,draw:[1244,1245,1247,1248],drawn:[1244,1245,1246,1247,1248],drop:1268,dropout:[1149,1286,1297],dropout_r:[1286,1297],ds_tune_step:975,dtype:[44,45,47,403,404,405,406,407,408,409,412,413,416,417,420,421,422,516,517,519,526,527,533,933,934,935,936,937,938,939,942,943,946,947,952,953,954,955,956,957,959,960,961,962,963,964,965,966,967,968,969,970,974,1213,1215,1223,1225,1233,1234,1241,1251,1252,1256,1261,1263],dtype_bit:[516,947],dtype_from_str:[47,516,947],dtype_in:[516,523,524,525,947,954,959,960,961,964,965,966,974],dtype_to_str:[516,947],due:42,duplic:[44,45,47],dure:[44,45,47,930,931,1071,1123,1126,1128,1129,1133,1162,1168,1193,1194,1195,1196,1298,1299,1302,1303,1304,1306],dynam:[47,516,520,930,931],each:[41,42,43,44,45,46,47,54,975,984,985,994,995,996,997,998,999,1000,1006,1018,1019,1025,1026,1027,1028,1029,1030,1031,1034,1035,1036,1037,1038,1040,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1065,1066,1067,1068,1071,1072,1126,1129,1131,1133,1134,1135,1142,1145,1149,1150,1151,1152,1153,1154,1155,1156,1157,1162,1163,1164,1168,1170,1174,1183,1184,1188,1189,1191,1192,1197,1201,1213,1214,1221,1238,1244,1245,1256,1257,1271,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],easi:42,easili:[42,1268],ecosystem:1271,edg:[1183,1184,1192,1213,1218],effect:[42,1126,1135],effective_grad:[1126,1135],effort:42,eigenvalu:[1162,1166],eigvalsh:1162,einop:[42,44,45,1071,1086,1087,1088],einops_rearrang:[44,45,1071],einops_reduc:[44,45,1071],einops_repeat:[44,45,1071],einstein:[44,45,1256,1257],einsum:[44,45,1256],either:[44,45,47,1025,1047,1052,1054,1055,1063,1065,1071,1085,1105,1162,1168,1193,1194,1195,1196,1213,1230,1232,1256,1261,1263,1286,1297,1298,1299],electron:42,element:[44,45,47,922,923,924,925,926,927,928,929,933,938,939,944,945,947,952,975,996,1000,1006,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1074,1075,1078,1079,1082,1083,1090,1122,1149,1157,1162,1168,1172,1183,1186,1188,1189,1213,1214,1215,1216,1218,1221,1222,1225,1226,1229,1231,1240,1256,1257,1258,1259,1260,1261,1265,1266,1267,1286,1294],elementwis:[44,45,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070],elementwise_affin:[1300,1301],elemtn:[1244,1245],els:[47,1071,1076,1085,1089],elsewher:[933,938,1213,1240],email:42,emphas:1268,empti:[44,45,403,933,1265,1266,1267],empty_lik:[403,933],enabl:[42,44,45,46,47,54,1268],encapsul:[947,963],encod:[42,1071,1091,1142,1144],encourag:[42,1271],end:[54,1213,1215,1268,1271],engag:[42,47],ensur:47,entir:[42,43,44,45,975,1019,1256,1258,1261,1263,1264,1265,1266,1267,1268,1286,1295],entri:[44,45,933,940,941,1183,1189,1213,1237],entropi:[1179,1180,1181,1182],environ:1268,eps:[417,947,962],epsilon:[1126,1128,1129,1133,1179,1180,1181,1182,1209,1210,1300,1301,1302,1303,1304],equal:[44,45,933,938,939,1025,1046,1047,1069,1071,1072,1074,1075,1162,1165,1183,1184,1189,1192,1213,1244,1248,1254,1255],equality_matrix:[1071,1072],equat:[44,45,1256,1257],equival:[1025,1057,1058,1063,1069,1162,1177,1213,1215],erf:1025,erron:43,error:[43,44,45,47,922,923,975,1025,1041,1213,1237,1256,1258,1298,1299,1302,1306],especi:41,essenti:[41,42,47],etc:[43,44,45,47,933,934,940,941,975,1020,1071,1092,1093,1109,1110,1213,1215,1225,1233,1234,1241,1244,1245,1246,1247,1248,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],euclidean:[1162,1177],euler:932,evalu:[44,45,1025,1043,1052,1053,1054,1060,1068,1197,1198,1205,1213,1230,1265,1266,1267],even:[42,43,47],evenli:[44,45,933,940,941,1183,1189,1213,1215],everi:[47,933,939,1071,1072],everyon:43,everyth:43,evolv:41,exact:[44,45],exactli:[41,43,1271],exampl:[43,47,930,931,1213,1218,1238,1268],example_input:[516,520,930,931],exce:[1213,1231],except:[44,45,48,51,933,938,947,951,1071,1076,1085,1123,1213,1215,1219,1265,1266,1267],exchang:42,excit:[42,1268],exclud:[65,67,1213,1215,1244,1248],exclus:[44,45,467,468,474,1071,1082,1104,1126,1132,1244,1246],execut:[47,1071,1123],execute_with_gradi:[1126,1268],exist:[41,42,44,45,1071,1085,1268,1302,1306],exp:[1025,1043,1055],expand:[44,45,1071,1091,1183,1185],expand_dim:[44,45,1183],expect:[43,1071,1073],explain:[47,1271],explicitli:[47,1286,1295,1297,1298,1299],explod:[40,41],explos:[40,42],expm1:1025,expon:[47,1071,1117],exponenti:[47,1025,1041,1042,1055],expos:[41,933,934,1071,1080],express:[1025,1027,1031,1038,1065,1213,1230],exsit:[44,45],extend:47,extens:47,extra:[44,45,46,1126,1130],eye:[403,933,1162,1167],eyebrow:42,fabian:1268,fabio:1268,factor:[42,975,984,1017,1018,1019,1126,1128,1129,1133,1134,1149,1150,1151,1152,1153,1154,1155,1156,1162,1163,1174,1286,1287,1288,1289,1290,1291,1292,1293,1302,1303,1304,1305],fail:47,falck:1268,fall:[54,1298,1299,1302,1306],fallback_to_non_compil:[1298,1299,1302,1306],fals:[15,18,19,44,45,46,65,72,73,74,75,76,423,467,468,474,477,516,522,947,955,956,957,958,975,993,1006,1014,1019,1024,1025,1046,1047,1048,1057,1058,1071,1072,1082,1085,1089,1091,1104,1105,1124,1126,1129,1130,1131,1132,1133,1134,1135,1162,1163,1169,1177,1183,1189,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1213,1224,1236,1240,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1275,1276,1298,1299,1302,1303,1304,1305,1306,1307],fan_in:1277,fan_mod:1277,fan_out:1277,faq:[41,42,43],far:[1197,1198,1205],fastai:43,faster:[930,931],favourit:1268,fdlibm:[1025,1043],feasibl:42,feat_dim:[1149,1160,1161],fed:[975,1019],feed:[975,1019],few:[43,47,64,1271],field:[1162,1172],file:[44,45,47,1071,1114,1119,1298,1299],filepath:[44,45],fill:[44,45,933,936,939,942,943,946,1213,1223,1234,1244,1246],fill_valu:[403,409,516,526,933,939,1213,1223],filter:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],filter_s:[1286,1287,1288],filter_shap:[1286,1289,1290,1291,1292,1293],find:[41,44,45,47],find_sub_contain:[44,45],find_sub_structur:[44,45],finfo:[102,266,417,418,572,740,947],finish:1268,finit:[1025,1046,1063],first:[41,42,44,45,47,930,931,933,940,941,975,1006,1025,1034,1036,1045,1049,1050,1055,1056,1058,1059,1061,1071,1074,1126,1130,1162,1165,1168,1172,1174,1183,1190,1193,1194,1195,1196,1197,1198,1205,1213,1219,1220,1221,1238,1244,1250,1251,1252,1286,1297,1298,1299,1302,1306],firstlayersiren:1277,fist:[975,1019],fit:[44,45,399,423,467,516,1142,1147,1183,1188],fix:47,flag:[44,45,47,1126,1132],flat:[44,45,47,1071,1109,1183,1188],flat_list:[44,45],flatten:[44,45,1071,1091,1162,1177,1183,1188,1251,1252,1256,1259,1262],flatten_key_chain:[44,45,1298,1299],flax:43,flexibl:1268,flip:[44,45,1025,1035,1183],float32:[47,516,527,933,934,947,952,960,961,1213,1215,1225,1234,1241],float_dtyp:[947,956,969],float_img_to_uint8_img:1142,floor:[1025,1071,1090,1213],floormod:[467,1071],folder:[47,1268],follow:[41,42,44,45,47,54,947,963,975,1019,1025,1063,1071,1100,1101,1102,1116,1117,1126,1129,1131,1133,1134,1135,1149,1160,1161,1162,1172,1177,1197,1201,1206,1268,1286,1296,1302,1306],followng:[947,962],fomaml_step:1193,forget:[1126,1128,1129,1133,1302,1303,1304],forgiven:42,fork:[1213,1232],forkserv:[1213,1232],form:[15,16,17,18,19,42,44,45,933,934,935,944,945,1126,1129,1131,1133,1134,1135,1149,1162,1163,1164,1165,1166,1170,1172,1175,1197,1199,1206],format:[44,45,47,933,934,947,952,954,958,975,993,1213,1215,1225,1234,1241,1256,1257,1268],format_fn:[44,45],format_key_chain:[44,45],forward:[1298,1299,1302,1306],found:[44,45,46],foundat:42,fourier:[1071,1091],fourier_encod:1071,frame:42,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,223,224,225,226,227,229,232,234,235,236,237,238,239,240,242,243,246,255,256,257,258,259,260,261,262,263,264,266,267,268,270,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,317,318,319,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,346,347,348,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,377,378,379,380,382,385,387,388,389,390,391,392,393,394,396,397,400,401,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,479,480,481,482,484,485,486,488,489,490,491,492,493,494,496,497,498,499,500,501,502,503,504,505,506,507,508,509,511,512,513,514,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,537,539,542,544,545,546,547,548,549,550,552,553,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,576,578,579,580,581,582,583,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,626,627,628,629,630,631,632,633,634,636,637,638,639,641,642,643,645,646,647,649,650,651,652,653,654,655,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,692,693,694,695,697,700,702,703,704,705,706,707,708,710,711,714,715,716,717,718,719,720,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,746,747,748,749,750,751,752,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,825,826,827,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,899,900,901,902,903,904,906,909,911,912,913,914,915,916,917,919,920,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1247,1248,1249,1250,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1271,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1301,1302,1303,1304,1305,1306,1307,1309,1310,1312],framework_handl:[65,67,68,69,70,71,72,73,74,75,76,77],framewrk:[1213,1232],frantic:43,free:47,freed:47,freedom:[1256,1264],freeli:47,frequenc:[1071,1091],from:[41,42,43,44,45,46,47,933,935,937,939,943,947,954,967,975,984,985,1019,1025,1067,1071,1085,1092,1093,1120,1126,1129,1133,1142,1146,1149,1157,1160,1162,1165,1183,1186,1193,1194,1195,1196,1197,1199,1206,1213,1225,1235,1237,1240,1244,1245,1246,1247,1248,1256,1260,1261,1263,1265,1266,1267,1268,1271,1275,1276,1286,1294,1297,1302,1306],from_cal:[1298,1299],from_disk_as_hdf5:[44,45],from_disk_as_json:[44,45],from_disk_as_pickl:[44,45],from_flat_list:[44,45],from_numpi:[44,45],front:[41,54,1271],frustrat:47,fulfil:54,full:[42,43,47,516,947,962,1162,1172,1213,1268],full_lik:[403,933],full_matric:[1162,1174],fulli:[43,47,1268,1286,1296,1297],func:[44,45,516,520,930,931,975,1019,1071,1077,1126,1130],fundament:41,funni:42,further:[42,43,47,54],futur:[41,43],gain:1277,gamma:[1209,1210],gather:[44,45,467,1071,1093],gather_nd:[44,45,467,1071],gauss:[1025,1041],gaussian:[922,923],geglu:1272,gelu:[399,922,1272],gener:[23,44,45,47,423,468,469,470,471,472,473,474,475,476,477,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,930,933,940,941,1025,1063,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1132,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1246,1248,1249,1302,1306],geometr:[1071,1091],get:[43,44,45,47,947,958,959,962,963,975,984,985,993,1008,1009,1014,1018,1021,1024,1071,1073,1094,1095,1096,1108,1268,1271,1286,1295],get_all_arrays_in_memori:1071,get_all_arrays_on_dev:975,get_framework:65,get_initial_st:[1286,1295],get_min_bas:1071,get_min_denomin:1071,get_mod_kei:[1298,1299],get_num_dim:[516,1213],get_referrers_recurs:1071,gist:1268,github:41,give:[43,47,1213,1235],given:[42,43,44,45,47,933,934,936,940,941,947,952,975,1008,1014,1017,1018,1019,1021,1024,1071,1082,1083,1093,1109,1110,1124,1126,1128,1129,1131,1133,1134,1135,1149,1150,1151,1152,1153,1154,1155,1156,1162,1167,1178,1183,1186,1188,1189,1191,1197,1202,1203,1213,1215,1218,1234,1239,1241,1244,1247,1248,1250,1256,1259,1262,1275,1276],global:[44,45,46,947,955,956,957,975,984,985,992,1017,1018,1019,1071,1084,1095,1096,1108,1111,1112,1113,1116,1117,1126,1141,1209,1210,1300,1301],global_framework:[65,69],global_norm:[44,45],glorotuniform:[1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296],gmail:42,goal:42,gone:42,good:47,googl:[42,1268],got:[47,1268],gpu0:47,gpu2:47,gpu:[975,1010,1013],gpu_is_avail:[423,975],grad:[1268,1302,1306],gradient:[25,44,45,975,1019,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1145,1193,1194,1195,1196,1302,1303,1304,1305,1306,1307],gradient_descent_upd:[1126,1193,1194,1195,1196],gradient_imag:1142,gradienttrack:[1126,1127],graph:[43,1126,1129,1131,1133,1134,1135,1298,1299],great:[42,43],greater:[44,45,1025,1027,1044,1063,1213,1215,1222,1237,1244,1248],greater_equ:1025,greatest:[1025,1044],green:[44,45,46,1311,1312],grid:[1213,1230],ground:41,group:[1142,1147],grown:41,growth:42,guarante:43,guid:47,gym:1268,h5_file_s:[44,45],h5_obj_or_filepath:[44,45],h5py:[44,45],haiku:43,half:[1213,1215,1244,1248],hand:1268,handl:[44,45,46,47,930,931,975,991,993,1002,1003,1014,1021,1024,1126,1129,1131,1133,1134,1135,1302,1303,1304,1305,1306,1307],handler:54,happen:[43,47],happi:43,hardwar:42,has:[41,42,43,44,45,47,1025,1026,1162,1168,1173,1213,1238,1256,1261,1263],has_kei:[44,45],has_key_chain:[44,45],has_nan:[44,45,1071],hasn:43,have:[40,41,42,43,44,45,47,933,936,937,939,942,943,944,945,946,947,951,962,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1071,1086,1087,1088,1126,1132,1140,1162,1163,1164,1165,1166,1168,1170,1172,1174,1175,1177,1183,1186,1187,1213,1219,1220,1221,1223,1238,1251,1252,1254,1255,1256,1258,1261,1263,1264,1265,1266,1267,1268],haven:47,hdf5:[44,45,1298,1299],head:[1149,1160,1286,1297],head_dim:[1286,1297],height:[1142,1147],height_cutoff:[44,45],help:[47,64,65,417,423,424,947,975,987,988,989,990,1126,1268,1277,1279,1280,1282,1283,1285],here:[47,1268],hidden:[1149,1159,1286,1295],hierarch:[1071,1080],hierarchi:[44,45],high:[43,44,45,1244,1246,1248],higher:[1126,1129,1131,1133,1134,1135,1162,1174],highest:[1244,1246],highli:1268,hinder:41,hint:47,hold:[933,934,947,952,1071,1109,1110,1213,1215],honk:43,hope:42,hopefulli:[41,42,43],host:[42,1268],hot:[1213,1233],hour:[43,47],how:[41,43,1268,1271,1286,1297,1298,1299],howev:[42,47],html:42,huge:[40,42],hyperbol:[922,929,1025,1028,1030,1033,1039,1066,1070],hypothet:47,icon:1268,idea:[43,1268],ident:[41,43,44,45,47,516,1213],identical_array_shap:[44,45],identical_config:[44,45],identical_structur:[44,45],ieee:[42,932,947,962,1025,1043,1063,1067],if_exist:[44,45],ignit:43,ignor:[44,45,1302,1306],ignore_key_error:[44,45],ignore_miss:[1302,1306],ignore_non:[44,45],iii:47,iinfo:[417,947],imag:[27,54,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1155,1156,1213,1227],image_dim:[1142,1146],immedi:1268,implement:[47,947,967,1025,1026,1027,1028,1030,1031,1038,1043,1052,1053,1054,1063,1065,1066,1254,1255,1256,1258,1268],improv:43,in_featur:[1149,1158],inadvert:47,includ:[42,44,45,47,933,935,1071,1098,1116,1117,1125,1162,1177,1197,1198,1213,1215,1244,1248,1256,1258,1261,1265,1266,1267,1286,1296,1297,1300,1301],include_deriv:[1197,1199,1206],include_empti:[44,45],include_inf:[44,45,1071,1098,1125],include_nest:[1197,1198],include_self:[44,45],inclus:[47,1244,1246],incom:[1149,1158],incompat:[947,951],increas:[41,975,997,1001,1007,1183,1184,1185,1192,1197,1206],increment:[1071,1101],inde:1268,indent:[44,45,46],independ:[1244,1245],index:[44,45,516,933,938,1071,1092,1093,1197,1200,1202,1203,1204,1207,1213,1216,1230,1237,1238,1251,1252,1254,1255],index_nest:1197,indic:[44,45,467,469,470,475,476,516,530,922,927,1071,1092,1093,1109,1110,1149,1150,1151,1152,1153,1154,1155,1156,1162,1177,1197,1198,1200,1202,1203,1204,1205,1207,1208,1209,1210,1213,1216,1226,1233,1244,1245,1251,1252,1254,1255,1286,1287,1288,1289,1290,1291,1292,1293,1298,1299],indices_wher:[516,1213],indistinguish:[1025,1067],industri:42,inevit:43,inf:[44,45,1071,1098,1125,1162,1177],infer:[930,931,933,935,937,939,943,1142,1146,1213,1224,1225,1235,1236,1256,1260],infin:[1025,1026,1028,1030,1031,1037,1038,1043,1044,1046,1047,1052,1054,1055,1063,1065,1066,1067,1162,1177,1256,1258,1265,1266,1267],infinit:[1025,1067],inform:[947,962,963,1126,1137],init_c:[1149,1159],init_h:[1149,1159],init_on_first_step:[1302,1306],initi:[42,44,45,46,47,65,417,423,424,947,975,987,988,989,990,1126,1149,1159,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1302,1306],initialz:[1298,1299],inner:[1162,1168,1193,1194,1195,1196],inner_batch_fn:[1193,1194,1195],inner_batch_shap:[1149,1158],inner_cost_fn:[1193,1194,1195],inner_grad_step:[1193,1194,1195,1196],inner_learning_r:[1193,1194,1195,1196],inner_optimization_step:[1193,1194,1195,1196],inner_v:[1193,1194,1195],innermost:[933,944,945,1162,1163,1164,1165,1166,1170,1172,1175],innov:42,inplac:[44,45,1071,1076,1099,1103,1118,1126,1129,1131,1133,1134,1135,1275,1276,1302,1303,1304,1305,1306,1307],inplace_arrays_support:[467,1071],inplace_decr:[467,1071],inplace_incr:[467,1071],inplace_oper:[0,11,12],inplace_upd:[44,45,467,1071,1275,1276],inplace_variables_support:[467,1071],input:[15,18,19,44,45,46,47,922,923,924,925,926,927,928,929,930,931,933,935,937,939,943,944,945,947,952,953,955,956,957,958,959,965,966,967,975,984,985,992,993,994,997,998,1001,1007,1019,1020,1025,1026,1027,1028,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1078,1079,1081,1082,1083,1085,1086,1087,1088,1089,1090,1091,1098,1100,1101,1102,1104,1115,1118,1120,1121,1122,1124,1125,1126,1130,1132,1137,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1174,1175,1177,1183,1184,1185,1186,1187,1188,1190,1191,1192,1193,1194,1195,1196,1209,1210,1213,1214,1216,1217,1218,1219,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1236,1237,1238,1239,1244,1245,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1300,1301],input_ax:[975,1019],input_channel:[1286,1287,1288,1289,1290,1291,1292,1295,1296],insert:[1183,1185,1251,1252],insid:47,instal:1268,instanc:[15,16,17,18,19,44,45,47,975,984,1275,1276,1308,1309],instant:42,instead:[44,45,47,1256,1259,1262],int16:[1256,1261,1263],int32:[47,1256,1261,1263],int64:[933,934,947,952,1213,1215,1225,1234,1241,1256,1261,1263],int_dtyp:[947,957,970],integ:[44,45,947,963,966,967,1025,1026,1034,1035,1036,1037,1044,1059,1063,1064,1162,1177,1183,1189,1213,1215,1222,1244,1246,1249,1256,1258,1261,1263,1265,1266,1267],integr:1268,intel:42,intend:47,inter:1268,interact:1268,interchang:[44,45,1183,1190],interest:1268,interfac:[42,933,934],intermedi:[44,45],intern:[44,45,975,1126,1140,1197,1198,1205,1206,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1308,1309],interoper:42,interpol:[1213,1227],interpret:[933,935],interv:[44,45,933,940,941,1025,1029,1213,1215,1218,1244,1248,1265,1266,1267],introduc:41,inv:1162,invalid:[1265,1266,1267],invalid_dtyp:947,invent:41,invers:[1025,1027,1028,1029,1030,1031,1033,1162,1167,1171],invert:[1025,1035,1162,1167,1171],investig:47,invoc:[930,931],involv:[42,947,967,1271],irrespect:1268,is_arrai:[467,1071],is_float_dtyp:947,is_int_dtyp:947,is_vari:1126,isfinit:1025,isinf:1025,isnan:1025,issu:43,issue_numb:47,item:[15,19,44,45,947,955,975,984,985,987,994,996,998,1000,1006,1071,1080,1097,1116,1117,1197,1201,1202,1203,1206,1207,1208,1268,1298,1299],iter:[15,16,17,18,19,43,44,45,46,930,931,975,978,979,981,982,984,985,988,989,996,998,999,1000,1001,1006,1019,1071,1072,1110,1183,1184,1188,1189,1191,1192,1197,1198,1199,1201,1205,1206,1213,1217,1219,1225,1230,1234,1235,1236,1238,1239],iterbal:[975,996,1000,1006],its:[975,1019,1162,1168,1183,1190,1213,1225,1235,1239,1268],itself:[41,47,1197,1206],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,48,49,50,51,52,53,54,64,65,67,68,69,70,71,72,73,74,75,76,77,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,467,468,469,470,471,472,473,474,475,476,477,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,977,978,979,980,981,982,984,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1271,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1312],ivy_backend:[44,45],ivy_test:47,ivyh:[44,45,46],jame:1268,jax:[42,43,47,1126,1132,1268],jax_concat:1268,jnp:1268,join:[44,45,1213,1219,1238],journal:1268,journei:1271,json:[44,45],json_filepath:[44,45],jsonabl:[44,45],jupyt:42,just:[42,43,47,1268,1286,1295],kaimingnorm:[1277,1281],keep:[44,45,975,1020,1071,1124,1268],keep_inner_v:[1193,1194,1195],keep_non:[44,45],keep_orig:[44,45],keep_outer_v:[1193,1194,1195],keepdim:[44,45,467,477,1071,1124,1162,1169,1177,1251,1252,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],kei:[15,16,17,44,45,46,47,975,987,1071,1080,1149,1160,1161,1193,1194,1195,1197,1200,1204,1268,1275,1276,1286,1297,1302,1306],kept:[44,45,46,1193,1194,1195],kera:43,kernel:[1149,1159],key1:[44,45],key2:[44,45],key3:[44,45],key_chain:[44,45],key_chains_contain:[44,45],key_length_limit:[44,45,46],key_slic:[44,45],keychain:[44,45],keychain_map:[44,45],keyword:[15,16,17,44,45,46,975,984,985,997,1001,1007,1071,1073,1086,1087,1088,1105,1197,1201,1298,1299],keyword_color_dict:[44,45,46],kind:[947,962,963,1256,1261,1263],know:43,kwarg:[15,16,17,44,45,46,65,69,975,984,997,1001,1007,1071,1105,1275,1276,1298,1299],kwarg_stateful_idx:[1298,1299],label:[47,1179,1180,1181,1182],lamb:[1126,1133,1302],lamb_upd:1126,lambda:[1302,1305,1307],languag:[41,43],lar:[1126,1133,1134,1302],larger:[947,962,1213,1218],largest:[44,45,947,962,963,1213,1222],lars_upd:1126,last:[43,44,45,922,927,1149,1159,1162,1165,1169,1174,1183,1186,1189,1213,1215,1220,1227,1238,1254,1255,1265,1266,1267,1286,1296],later:[44,45,1071,1077],latest:[1286,1295],layer:[41,1126,1129,1131,1133,1135,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1209,1210,1268,1277,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],layer_norm:1209,layernorm:1300,layerwis:[1126,1134,1302,1305],lead:[42,43,44,45,46,1162,1172],leading_shap:[44,45],leaf:[15,18,19,44,45,1197,1198,1205],leaf_keys_onli:[44,45],leafwis:[44,45],leaki:[922,923,924],leaky_relu:[399,922],learn:[41,42,1126,1129,1131,1133,1134,1135,1193,1194,1195,1196,1244,1250,1256,1260,1268,1302,1303,1304,1305,1306,1307],learnabl:[1209,1210,1300,1301],least:[47,1162,1168],leav:[15,18,19,44,45,1197,1198,1199,1205,1206],left:[44,45,47,1162,1169,1251,1252,1256,1259,1262,1268],leftmost:[44,45],length:[44,45,46,1162,1175,1213,1215,1235,1237,1239],lenton2021ivi:1268,lenton:1268,less:[42,44,45,47,1025,1027,1028,1037,1052,1054,1063,1067,1162,1177,1244,1248],less_equ:1025,let:43,level:[43,1268],librari:[41,42,43,64,1025,1043,1057,1058,1256,1258,1268],lies:41,lightn:43,lightweight:1268,like:[42,47,1126,1132,1244,1248,1268],likewis:47,limit:[44,45,46,47,947,962,963,1071,1078,1079,1213,1218],linalg:29,line:[43,47,64,1271],linear0:1268,linear1:1268,linear:[922,923,924,925,1071,1091,1149,1157,1213,1227,1268,1286,1287,1288,1289,1290,1291,1292,1293],linear_algebra:[1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178],linear_resampl:[516,1213],linearli:[1071,1091],link:[47,1268],linspac:[403,933,1213,1215],list:[15,18,19,44,45,403,406,412,416,933,934,935,936,942,946,975,984,985,994,995,997,998,999,1001,1004,1005,1019,1071,1075,1115,1120,1124,1149,1150,1151,1152,1153,1154,1155,1156,1183,1185,1186,1189,1193,1194,1195,1197,1198,1199,1201,1205,1206,1213,1215,1230,1265,1266,1267,1268,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293],list_join:[44,45,46],list_stack:[44,45],liter:[1162,1177],littl:41,live:[42,43],load:[44,45],loader:1268,local:47,local_set:[1071,1097],locat:[47,1244,1245],log10:1025,log1p:1025,log2:1025,log:[933,941,1025,1053,1055,1162,1173,1179,1180,1181,1182],logaddexp:1025,logarithm:[1025,1051,1052,1053,1054,1055,1162,1173],logdet:[1162,1173],logic:[31,1025,1056,1057,1058,1265,1266,1267],logical_and:1025,logical_not:1025,logical_or:1025,logical_xor:1025,logit:[1179,1182],logspac:[403,933],look:[41,47],loop:[1193,1194,1195,1196],loss:[1180,1181,1182,1268],loss_fn:1268,lot:[42,43],love:43,low:[44,45,1244,1246,1248],lower:[44,45,47,933,938,944,1162,1163,1213,1229,1244,1248],lower_depth:[1298,1299],lowest:[15,18,19,44,45,1197,1206,1244,1246],lstm:[1149,1159,1286],lstm_updat:[47,1149],lucid:43,machin:[42,947,962,963,1244,1250,1256,1260,1268],made:[42,47],magnitud:[1025,1026,1162,1175],mai:[43,1025,1045,1050,1057,1058,1071,1085,1213,1215,1221,1254,1255,1256,1258,1268],main:[933,938,944,945,1162,1165,1213,1225,1268],mainli:1268,maintain:[41,47,1254,1255],major:42,make:[42,43,47,975,1268],maml:[1193,1194,1195],maml_step:1193,manag:[43,975],mandat:42,manhattan:[1162,1177],mani:[41,42,43,44,45,47,1183,1189,1268],manipul:[41,1184,1185,1186,1187,1188,1189,1190,1191,1192],manner:[15,18,19,41,44,45,47,1197,1206],manual:[1197,1198,1205],map:[44,45,46,975,984,1197,1202,1203,1206,1286,1297],map_cont:[44,45],map_nest_at_index:1197,map_nest_at_indic:1197,map_sequ:[44,45],mapper:[975,984,985],mark:47,mask:[1149,1160,1161],master:47,match:[44,45,1025,1063,1071,1105],match_kwarg:1071,math:33,mathbb:[1162,1178],mathbf:[1162,1178],mathemat:[932,1025,1043,1162,1177],matmul:[47,1162,1213],matric:[933,944,945,1149,1158,1162,1163,1164,1165,1166,1170,1172,1175],matrix:[44,45,933,944,945,1071,1072,1078,1149,1158,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1175,1178,1213,1228,1286,1296],matrix_norm:[44,45,1162],matrix_transpos:1162,matter:[41,1268],matur:42,max:[44,45,417,947,962,963,1071,1078,1079,1087,1109,1110,1213,1229,1256,1302,1304],max_batch_s:[44,45],max_chunk_s:[975,1019],max_depth:[44,45,975,979,982,989,997,1001,1007,1071,1097,1197,1206],max_dev_dim_step_ratio:975,max_freq:[1071,1091],max_length:[44,45],max_norm:[44,45,1071,1078,1079],max_split_factor_step_s:975,max_trust_ratio:[1126,1133,1302,1304],maxim:1268,maximis:1268,maximum:[44,45,46,975,997,1001,1007,1019,1071,1078,1079,1091,1126,1133,1197,1206,1213,1218,1251,1252,1256,1258],mayb:[15,18,19],mean:[44,45,975,1004,1005,1006,1007,1019,1071,1087,1193,1194,1195,1196,1197,1201,1244,1247,1256,1262,1277],measur:[1149,1160,1286,1297],mechan:[64,1268],member:[42,47],memori:[64,975,991,1014,1019,1021,1024,1149,1159,1268],mention:[42,47],merg:47,merge_with_upstream:47,meshgrid:[516,1213],messag:[42,1311,1312],meta:[35,1194,1195,1196],method:[44,45,46,47,933,934,1071,1080,1109,1110,1126,1133,1134,1197,1198,1205,1206,1213,1230,1268,1286,1297,1298,1299],microsoft:42,might:[1071,1085],min:[44,45,417,947,962,963,1071,1087,1109,1110,1116,1162,1172,1175,1177,1213,1231,1256],min_bas:[1071,1117],min_denomin:[1071,1116],min_dev_dim_s:975,min_sf_tune_step:975,min_unit_dev_tune_step:975,mind:1268,mini:[1209,1210,1300,1301],minimum:[44,45,933,934,947,952,975,1025,1026,1071,1095,1096,1111,1112,1116,1117,1213,1215,1216,1218,1256,1258,1260],miss:[1302,1306],mission:42,mix:[947,967],ml_framework:[1213,1215],mod:[1071,1090],mod_depth:[1298,1299],mod_height:[1298,1299],mod_with_top_mod_key_chain:[1298,1299],mode:[44,45,930,931,975,1004,1005,1006,1007,1019,1162,1172,1174],model:1268,modern:[41,42],modin:42,modul:[43,44,45,46,65,1213,1232,1268,1272,1273,1274,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1300,1301,1308,1309],modulu:[1025,1063],moment:[1126,1128,1129,1133,1302,1303,1304],momentum:42,month:41,more:[47,1025,1043,1162,1168,1183,1186,1213,1238,1268],most:[42,44,45,47,1268],motherboard:42,motiv:42,move:[44,45,47,975,1020],much:[42,47,1268],multi:[54,1149,1160,1213,1232,1271,1286,1297],multi_head_attent:1149,multi_index_nest:1197,multi_map:[44,45],multidev:[975,986,987,988,1007],multidevcontain:[44,45],multidevic:[975,984],multidevit:[975,978,981,984,985,989],multidevitem:[975,977,980],multidevnest:[975,979,982],multiheadattent:1286,multinomi:1244,multipl:[43,44,45,1071,1105,1162,1167,1183,1189,1209,1210,1251,1252,1256,1258,1259,1261,1262,1263,1265,1266,1267,1286,1296],multipli:[44,45,1071,1082],multiprocess:[44,45,46,516,975,984,1213],must:[41,43,44,45,46,47,933,936,937,938,939,942,943,944,945,946,947,951,975,1004,1005,1006,1007,1019,1025,1026,1027,1028,1030,1031,1032,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1049,1050,1052,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1071,1080,1110,1162,1163,1164,1165,1166,1168,1170,1172,1177,1183,1186,1187,1213,1215,1219,1220,1221,1229,1231,1238,1244,1249,1251,1252,1254,1255,1256,1258,1260,1261,1263,1264,1265,1266,1267,1302,1306],mutabl:[1197,1199,1206],mutlidevic:[975,984],mw_tm1:[1126,1129,1133],mx_concat:1268,mxn:[933,944,945,1162,1165,1170,1172,1175],mxnet:[42,47,1268],my_func:47,mymodel:1268,n_col:[403,408,933,938],n_row:[403,408,933,938],name:[47,930,931,1162,1172],name_of_your_branch:47,name_of_your_pr_branch:47,namedtupl:[1162,1172],namespac:47,nan:[44,45,47,932,1025,1026,1027,1028,1030,1031,1037,1038,1043,1044,1046,1048,1052,1054,1055,1063,1065,1066,1067,1071,1098,1125,1256,1258,1265,1266,1267],nativ:[15,17,18,19,44,45,47,947,953,960,961,975,991,993,1002,1003,1014,1021,1024,1268,1275,1276],native_modul:[1275,1276],native_module_class:[1275,1276],nativearrai:[15,18,19,47,933,934,935,937,939,940,941,943,944,945,947,951,952,958,962,963,965,966,967,975,993,1019,1020,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1078,1079,1081,1082,1083,1086,1087,1088,1090,1091,1092,1093,1098,1109,1110,1120,1121,1122,1124,1125,1162,1163,1166,1168,1170,1173,1174,1175,1177,1178,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1197,1199,1206,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1251,1252,1254,1255,1256,1258,1260,1261,1264,1265,1266,1267],natur:[42,1025,1051,1053,1162,1173],ncdhw:[1149,1154,1155,1286,1291,1292],nchw:[1149,1152,1153,1156,1286,1289,1290,1293],ncw:[1149,1150,1151,1286,1287,1288],ndarrai:[47,403,406,407,408,409,412,413,414,415,416,417,419,420,421,422,933,935,1071,1121],ndhwc:[1149,1154,1155,1286,1291,1292],ndim:[1162,1172],nearest:[1025,1064],necess:42,need:[43,47,1071,1078,1079,1149,1151,1153,1155,1268,1286,1288,1290,1292],neg:[44,45,922,924,933,938,1025,1046,1047,1063,1162,1177,1183,1186,1265,1266,1267],negative_slop:1277,nest:[15,16,17,18,19,44,45,46,933,934,975,997,1001,1007,1071,1120,1193,1194,1195,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1298,1299,1302,1303,1304,1305,1306,1307],nested_indices_wher:1197,nested_map:1197,net:[42,43],network:[42,1149,1158,1268,1272,1286,1298,1299],neural:[1149,1268,1272,1286],never:47,new_std:[1209,1210,1300,1301],newest:41,newli:[47,930,931,1071,1077,1213,1217],newlin:[44,45,46],newshap:[1213,1217,1235],next:[43,947,962,1298,1299,1302,1303,1304,1305,1306,1307],nhwc:[1149,1152,1153,1156,1286,1289,1290,1293],nice:43,node:[42,44,45,1197,1198,1205],noinspect:[47,948,949,950,976,1127],non:[44,45,930,931,947,964,1025,1057,1058,1162,1164,1177,1251,1252,1256,1258,1261,1265,1266,1267,1298,1299,1302,1306],none:[44,45,46,47,65,67,70,403,404,405,406,407,408,409,410,411,412,413,416,423,467,469,470,475,476,516,517,520,526,527,530,531,532,533,930,931,933,934,935,936,937,938,939,940,941,942,943,946,947,955,956,957,962,963,975,984,985,991,992,1017,1018,1019,1020,1071,1084,1085,1089,1092,1093,1097,1099,1100,1101,1102,1103,1109,1110,1111,1112,1116,1117,1123,1126,1129,1131,1133,1134,1135,1141,1142,1146,1149,1151,1153,1155,1158,1159,1160,1161,1162,1169,1177,1183,1185,1186,1188,1189,1193,1194,1195,1196,1197,1198,1201,1205,1206,1209,1210,1213,1215,1223,1225,1232,1233,1234,1237,1239,1241,1244,1245,1246,1247,1248,1251,1252,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1275,1276,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],norm:[44,45,1071,1078,1079,1162,1169,1177,1210,1301,1302,1304],normal:[1209,1210,1244,1247,1300,1301],normalized_idx:[1209,1210],normalized_shap:[1300,1301],not_equ:1025,notat:[44,45,1256,1257],note:[47,947,967,1025,1043,1063,1256,1258],noth:[44,45],now:[43,44,45,47,975,1020,1213,1214,1268,1286,1297,1298,1299],np_concat:1268,np_finfo:417,num:[403,410,411,933,940,941],num_arrai:[44,45],num_arrays_in_memori:1071,num_arrays_on_dev:975,num_band:[1071,1091],num_channel:[1286,1293],num_class:[1244,1245],num_cpu_cor:975,num_gpu:[423,975],num_head:[1149,1160,1286,1297],num_kei:[1149,1160,1161],num_lay:[1286,1295],num_or_size_split:[44,45,1183,1189],num_queri:[1149,1160,1161],num_sampl:[516,529,1142,1143,1213,1227,1244,1245],num_task:[1193,1194,1195,1196],number:[40,41,44,45,46,930,931,932,933,938,940,941,947,959,962,963,965,966,967,975,1011,1012,1013,1025,1037,1044,1063,1071,1091,1106,1122,1125,1149,1160,1162,1173,1174,1183,1184,1185,1187,1188,1189,1191,1192,1193,1194,1195,1196,1213,1215,1218,1224,1225,1227,1229,1244,1245,1249,1256,1258,1259,1261,1262,1263,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297],numer:[47,1025,1026,1037,1040,1043,1044,1046,1047,1048,1049,1057,1058,1060,1061,1063,1071,1095,1096,1111,1112,1116,1117,1162,1168,1251,1252,1256,1258,1261,1263,1277],numhead:[1149,1160],numpi:[41,42,44,45,47,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,467,468,469,470,471,472,473,474,475,476,477,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,1071,1121,1162,1174,1256,1257,1268],nwc:[1149,1150,1151,1286,1287,1288],obj:[44,45],objax:43,object:[44,45,46,65,417,933,934,947,952,962,975,1126,1197,1200,1202,1203,1204,1207,1208,1213,1215,1244,1250,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1298,1299],object_in:[403,404,405,933,934],obsolet:[41,43],obvious:47,occupi:[947,962,963,1071,1109,1110],occur:[1251,1252],occurr:[1251,1252],octoml:42,off:[43,1162,1165,1213,1215],offer:[43,1268],offset:[1162,1165,1176,1209,1210],often:43,old:[44,45,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241],on_init:[1286,1297,1298,1299],onc:[43,47,975,1019,1244,1245,1268],one:[42,43,44,45,47,54,933,938,947,954,975,1004,1005,1006,1007,1019,1071,1105,1109,1110,1162,1168,1169,1172,1177,1183,1186,1213,1225,1233,1237,1238,1251,1252,1256,1257,1259,1262,1268],one_hot:[516,1213],onearrai:[1183,1185],ones:[44,45,403,933,938,943,1213,1225,1233,1268],ones_lik:[403,933],ongo:47,onli:[41,44,45,47,64,975,1025,1057,1058,1162,1168,1172,1183,1186,1197,1198,1199,1205,1251,1252,1302,1303,1304,1305,1306,1307],onlin:[47,1268],onnx:42,onto:[40,41,975,1004,1005,1020,1197,1201,1206],oom:975,open:[41,42,43,1213,1215,1244,1248,1268],oper:[41,44,45,933,940,941,947,967,1025,1063,1071,1076,1086,1087,1088,1118,1126,1129,1131,1133,1134,1135,1149,1150,1151,1152,1153,1154,1155,1156,1158],operand:[44,45,1025,1027,1028,1030,1031,1037,1038,1043,1044,1052,1054,1055,1063,1065,1066,1067,1256,1257,1258],oppos:[1071,1091],optim:[43,975,1126,1129,1131,1133,1134,1135,1193,1194,1195,1196,1268,1303,1304,1305,1307],optimizer_upd:1126,option:[15,18,19,44,45,46,47,403,406,407,408,409,412,413,416,922,923,927,930,931,933,934,935,936,937,938,939,940,941,942,943,946,947,953,955,956,957,958,964,974,975,984,985,993,997,998,999,1000,1001,1004,1005,1006,1007,1014,1017,1018,1019,1020,1024,1071,1072,1078,1079,1082,1084,1085,1091,1092,1093,1098,1104,1105,1109,1110,1113,1116,1117,1124,1125,1126,1129,1131,1132,1133,1134,1135,1137,1142,1146,1149,1157,1158,1160,1161,1162,1169,1177,1179,1180,1181,1182,1183,1185,1186,1188,1189,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1209,1210,1213,1215,1216,1219,1223,1224,1225,1227,1230,1232,1233,1234,1236,1237,1238,1239,1241,1244,1245,1251,1252,1256,1258,1259,1260,1261,1262,1264,1265,1266,1267,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],ord:[1162,1174,1177],order:[41,44,45,46,47,1126,1129,1131,1133,1134,1135,1162,1169,1175,1177,1183,1186,1193,1194,1195,1254,1255,1308,1309],organ:[42,47],origin:[43,44,45,46,1162,1169,1213,1235,1241],orthonorm:[1162,1172],other:[42,44,45,47,64,930,931,1025,1043,1071,1072,1126,1130,1213,1215,1225,1244,1248,1268],other_i:47,otherwis:[15,16,17,18,19,44,45,947,955,956,957,975,992,1025,1046,1047,1048,1071,1076,1123,1126,1132,1137,1141,1162,1163,1164,1177,1193,1194,1195,1213,1239,1240,1251,1252,1256,1258,1259,1261,1262,1263,1265,1266,1267],our:[41,42,47,1268],ourselv:42,out:[41,42,43,47,933,939,942,944,945,946,947,951,962,963,967,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1043,1044,1046,1047,1048,1049,1052,1053,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1149,1157,1159,1162,1163,1165,1168,1170,1172,1173,1175,1176,1177,1183,1186,1187,1213,1215,1251,1252,1254,1255,1256,1258,1261,1263,1265,1266,1267,1268,1286,1294],out_feat_dim:[1149,1160],out_featur:[1149,1157,1158],out_i:[1025,1046,1047,1048],outdat:41,outer:[1193,1194,1195,1196],outer_batch_fn:[1193,1194,1195],outer_batch_shap:[1149,1158],outer_cost_fn:[1193,1194,1195],outer_v:[1193,1194,1195],outlook:42,output:[44,45,47,933,936,937,938,939,942,943,946,975,984,985,1019,1025,1032,1071,1077,1126,1130,1149,1151,1153,1155,1157,1159,1160,1161,1183,1186,1188,1191,1213,1215,1223,1225,1244,1246,1247,1248,1268,1286,1287,1288,1289,1290,1291,1292,1294,1295,1296,1297],output_ax:[975,1019],output_channel:[1286,1287,1288,1289,1290,1291,1292,1295,1296],output_shap:[1149,1151,1153,1155,1286,1288,1290,1292],outsid:[1213,1218],over:[41,43,44,45,1162,1169,1177,1209,1210,1244,1248,1256,1258,1259,1261,1262,1263,1264,1265,1266,1267,1300,1301],overflow:[1213,1215],overrid:[1213,1233,1241],overriden:[1302,1306],overwrit:[44,45,975,1019],overwrite_at_key_chain:[44,45],own:[42,43,1268],packag:47,pad:[1071,1091,1149,1150,1151,1152,1153,1154,1155,1156,1183,1184,1192,1286,1287,1288,1289,1290,1291,1292,1293],pad_width:[1183,1184,1192],page:[64,1268,1271],paint:41,pair:[1149,1161],panda:42,paper:43,parallel:[975,984,985],parallelis:[975,984,985],param:[44,45,46,467,469,470,933,936,938,943,975,1019,1025,1068,1071,1085,1092,1093,1162,1166,1213,1214,1233,1234,1256,1260,1264,1298,1299],paramet:[15,16,17,18,19,44,45,46,47,922,923,924,925,926,927,928,929,930,931,933,934,936,937,938,939,940,941,943,947,951,952,953,954,958,959,960,961,964,965,966,974,975,984,985,991,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1014,1017,1018,1019,1020,1021,1024,1025,1029,1031,1032,1033,1039,1040,1041,1042,1043,1045,1047,1050,1051,1059,1060,1062,1064,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1081,1082,1083,1086,1087,1088,1089,1090,1091,1092,1093,1098,1100,1101,1102,1104,1105,1109,1110,1111,1112,1113,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1137,1139,1140,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1167,1169,1170,1171,1172,1174,1178,1179,1180,1181,1182,1183,1184,1185,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1247,1248,1249,1250,1256,1257,1259,1260,1261,1262,1263,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],parameter:[1244,1247,1248],pardo:1268,pars:[1071,1080],part:[933,944,945,1126,1129,1131,1133,1134,1135,1268,1298,1299],parti:42,partial:[44,45,47,1298,1299],particular:[47,1025,1026],pass:[44,45,46,47,947,953,975,984,1019,1071,1077,1126,1140,1193,1194,1195,1275,1276,1298,1299,1302,1306,1308,1309],pattern:[43,44,45,1071,1086,1087,1088],pcie:42,peopl:47,per:[975,1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],perceiverio:43,percent_used_mem_on_dev:975,percentag:[975,1014],perfectli:43,perform:[43,44,45,47,922,927,933,940,941,975,1071,1082,1086,1087,1088,1100,1101,1102,1126,1129,1131,1133,1134,1135,1142,1143,1149,1157,1159,1193,1194,1195,1196,1197,1202,1203,1213,1216,1227,1256,1259,1262,1265,1266,1267],period:47,permit:47,permut:[1183,1187,1190,1213,1239],permute_dim:1183,perpendicular:[1213,1220],person:[47,1268],pickl:[44,45],pickle_filepath:[44,45],pictur:41,pinv:1162,pip:1268,pipelin:41,place:[44,45,47,933,935,936,937,938,939,942,943,946,975,1020,1071,1100,1101,1102,1183,1185,1213,1223,1302,1303,1304,1305,1306,1307],placehold:[47,1197,1206],pleas:[41,42,43,47],point:[43,47,932,933,936,938,942,946,947,962,965,967,1025,1027,1028,1030,1031,1037,1038,1040,1043,1044,1052,1054,1055,1063,1065,1066,1067,1162,1163,1164,1166,1172,1177,1213,1215,1256,1258,1261,1263],poor:43,pop:42,popul:[44,45,1244,1245],popular:1271,population_s:[1244,1245],port:43,portabl:1268,posit:[15,16,17,933,938,947,962,975,997,1001,1007,1025,1026,1046,1047,1063,1071,1091,1162,1163,1183,1185,1213,1214,1215,1244,1249,1265,1266,1267,1275,1276],possibi:[44,45],possibl:[42,47,1071,1105,1120,1142,1147,1256,1258],post:[1209,1210,1271],post_shap:[44,45],potenti:[1025,1043],power:[47,1071,1095,1111,1117,1277],practic:1268,pre:[975,1268],pre_shap:[44,45],preced:42,precis:[947,962,1025,1067],pred:[1179,1180,1181,1182],predict:[1179,1180,1181,1182],prepend:[1162,1168],preprint:1268,present:[41,44,45],preserv:[44,45,46,1126,1137,1183,1186],preserve_typ:[44,45,1126,1137],press:1268,prevent:[47,1126,1128,1129,1133,1302,1303,1304],prevet:47,previou:[1126,1129,1133],previous:[1071,1077],primarili:[1025,1063],prime:1268,princip:[1025,1027,1031],principl:41,print:[44,45,46,975,1015,1071,1107,1268],print_all_arrays_in_memori:1071,print_all_arrays_on_dev:975,print_ind:[44,45,46],print_limit:[44,45,46],print_line_spac:[44,45,46],prioriti:[44,45,47,65,69],privat:[1302,1306],prob:[1149,1157,1244,1245,1286,1294],probabl:[43,1149,1157,1244,1245,1286,1294],problem:[42,47],process:[42,43,47,975,984,985,1014,1024,1213,1232],process_specif:[975,1014,1024],prod:[44,45,1071,1087,1256],produc:[975,984,985],product:[44,45,1071,1082,1149,1160,1161,1162,1168,1213,1220,1228,1256,1257,1261,1286,1297],profil:[423,975],progress:47,project:[41,42,43,1268],promis:42,promot:[47,947,967,1025,1027,1028,1030,1031,1034,1036,1038,1040,1043,1052,1054,1055,1059,1063,1065,1066,1067,1162,1163,1168,1177],prompt:1268,propag:[1256,1258],properli:47,properti:[44,45,417,975,987,1298,1299,1302,1303,1304,1305,1307],prototyp:41,provid:[41,44,45,47,930,931,947,955,956,957,964,967,974,975,992,1071,1085,1110,1126,1129,1131,1133,1134,1135,1141,1183,1186,1213,1233,1241,1251,1252,1265,1266,1267,1268,1286,1295,1302,1303,1304,1305,1306,1307],prune:[44,45],prune_empti:[44,45],prune_kei:[44,45],prune_key_chain:[44,45],prune_key_from_key_chain:[44,45],prune_keys_from_key_chain:[44,45],prune_unappli:[44,45],pseudo:[1162,1171],publish:43,pull:43,pure:[44,45,1268],purpos:[47,54,1025,1043],pursuit:42,pyshadowingbuiltin:47,pyshadowingnam:[948,949,950,976,1127],python:[40,41,42,44,45,975,1014,1024,1025,1063,1213,1215,1268,1271],pytorch:[42,43,1126,1129,1131,1133,1134,1135,1268,1302,1303,1304,1305,1306,1307],quadrant:[1025,1032],qualiti:47,quansight:42,queri:[44,45,975,1008,1018,1149,1160,1161,1286,1297],query_dim:[1286,1297],query_kei:[44,45],question:[41,42,43],queue:[44,45,46,975,984,985,1071,1108,1113],queue_class:[975,984,985],queue_load_s:[44,45,46],queue_timeout:[44,45,46,1071],quick:1268,quickli:[41,43,47],quo:43,radian:[1025,1027,1029,1031,1032,1038,1065,1069],rai:42,raid:42,rais:[42,44,45,47,947,951,1071,1076,1095,1111,1117,1123,1213,1237,1256,1258,1265,1266,1267,1298,1299,1302,1306],ram:[975,1014,1021,1024],randint:1244,random:[37,44,45,1245,1246,1247,1248,1249,1250],random_crop:1142,random_norm:1244,random_uniform:1244,randomli:[1142,1146,1149,1157,1286,1294],rang:[933,940,941,1025,1032,1213,1215,1256,1261,1263,1268],rank:[1071,1124,1162,1172,1177,1183,1184,1192,1265,1266,1267],rapid:[41,42],rapidli:41,rate:[1126,1129,1131,1133,1134,1135,1193,1194,1195,1196,1286,1297,1302,1303,1304,1305,1306,1307],rather:[42,44,45,47,975,1019,1071,1104,1126,1132,1213,1215],ratio:[975,1126,1133,1142,1147,1302,1304],raw:[44,45],reach:[41,42,43,47,975,997,1001,1007,1197,1206],read:[44,45],rearrang:[44,45,1071,1086,1088],reason:[42,1025,1063],rebuild:[44,45,46],rebuild_child_contain:[44,45,46],rece:[1193,1195],receiv:[47,975,984,985,1071,1073,1105,1286,1296],receivess:975,receivng:[1193,1196],recent:[41,42],recev:[1193,1194,1195],recommend:[1025,1057,1058,1063,1268],rectifi:[922,924,925],recurr:[1149,1159],recurrent_bia:[1149,1159],recurrent_kernel:[1149,1159],recurs:[44,45,1197,1198,1199,1205,1206],redefin:47,reduc:[44,45,975,1019,1071,1087,1162,1172,1251,1252,1256,1258,1259,1261,1262,1265,1266,1267],reduce_max:[44,45],reduce_mean:1268,reduce_min:[44,45],reduct:[39,44,45,467,475,476,1071,1087,1109,1110,1265,1266,1267],refactor:47,refer:[47,933,938,1025,1043,1053,1126,1128,1129,1162,1178,1265,1266,1267,1286,1296],reflect:47,reflected_oper:[0,13,14],regard:[42,975],regardless:[43,44,45,930,931],rel:[1126,1129,1131,1133,1134,1135,1162,1165,1183,1186,1254,1255],relat:47,releas:43,relev:[42,1302,1303,1304,1305,1306,1307],relu:[399,922,923,924,1268],remain:[47,1025,1063,1197,1201,1213,1235],remaind:[44,45,1025,1071,1090,1183,1189],remov:[44,45,47,1162,1165,1168,1193,1194,1195,1213,1237],remove_key_length_limit:[44,45],remove_print_limit:[44,45],reorder:[44,45,1183,1186],rep:[1183,1191],repeat:[44,45,47,1071,1088,1183,1191],repeated_config_check:975,repeatedli:[1197,1204],repetit:[44,45,1183,1188,1191],replac:[42,44,45,47,1071,1109,1110,1213,1218,1244,1245],repo:[41,42,43,47,1268,1271],repositori:[43,47],repres:[47,947,954,959,1025,1028,1030,1066,1149,1158,1162,1173],represent:[44,45,46,47,932,947,954,960,961,962,963,975,1002,1003,1025,1026,1034,1036,1059,1071,1115,1120],reptil:[1193,1196],reptile_step:1193,request:43,requir:[47,930,931,933,934,947,952,1025,1067,1213,1215,1275,1276],resampl:[1213,1227],research:41,reserv:47,reshap:[44,45,47,1213],reshape_lik:[44,45],resolv:[1256,1261,1263],respect:[1025,1026,1034,1036,1040,1045,1049,1050,1055,1056,1058,1059,1061,1063,1126,1128,1129,1130,1131,1133,1134,1135,1162,1172,1193,1194,1195,1196,1213,1221],respond:47,respons:47,restor:[44,45],restructur:[44,45],restructure_key_chain:[44,45],result:[44,45,46,47,947,967,975,984,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1063,1065,1066,1067,1068,1071,1109,1110,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1162,1163,1165,1169,1177,1213,1215,1221,1238,1251,1252,1256,1258,1259,1261,1262,1265,1266,1267,1268],result_typ:[417,947],ret_fn:[975,984,985],retain:[1126,1130],retain_grad:[1126,1130],retrn:[1071,1115],return_cont:[44,45],return_dict:[44,45],return_inner_v:[1193,1194,1195,1196],return_sequ:[1286,1295],return_st:[1286,1295],rev:[1071,1085],revers:[44,45,1071,1085,1183,1186,1213,1239],review:47,right:[44,45,47],rigor:41,road:42,robot:[64,1268],ronald:1268,root:[47,1025,1067],round:[41,42,43,1025,1037,1044,1067,1213,1215],row:[933,938,1213,1225,1244,1245],rule:[47,947,967,1025,1040,1063,1162,1163,1213,1215],run:[47,975,984,1126,1128,1129,1133,1193,1194,1195,1196,1286,1297,1298,1299],runner:41,rush:43,safe:[975,984],safety_factor:975,sai:43,said:43,sake:43,same:[15,16,17,41,43,44,45,47,933,937,939,943,944,945,947,951,952,975,984,985,1019,1020,1025,1026,1035,1037,1044,1063,1064,1071,1090,1092,1093,1109,1110,1126,1132,1137,1149,1150,1151,1152,1153,1154,1155,1156,1162,1163,1164,1165,1166,1170,1172,1174,1183,1186,1187,1193,1194,1195,1213,1214,1219,1222,1233,1238,1241,1254,1255,1256,1257,1258,1261,1263,1264,1268,1286,1287,1288,1289,1290,1291,1292,1293],same_arrai:[44,45],sampl:[1142,1143,1149,1157,1213,1227,1244,1245,1247,1248,1268,1286,1294],sata:42,satisfi:[933,934,1162,1167,1178],save:[43,44,45,1071,1114,1119,1142,1144,1298,1299],save_dir:[423,424,975,990],save_weight:[1298,1299],scalabl:41,scalar:[933,939,1071,1122,1125,1162,1177,1213,1218,1233],scale:[975,1017,1018,1126,1134,1149,1157,1160,1161,1209,1210,1286,1294,1297,1302,1305],scaled_dot_product_attent:1149,scatter:[1071,1109,1110,1213,1233],scatter_flat:[467,1071],scatter_nd:[467,1071],scene:[40,41,1126,1129,1131,1133,1134,1135],schemat:1268,scikit:42,scipi:42,screen:[44,45],script:47,search:[15,18,19,41,44,45,1252],second:[43,44,45,975,1006,1025,1034,1036,1045,1049,1050,1055,1056,1058,1059,1061,1071,1074,1108,1113,1126,1128,1129,1133,1162,1165,1168,1172,1183,1190,1193,1195,1213,1220,1221,1302,1303,1304],sector:[42,1025,1028,1030],see:[41,47,65,417,423,424,933,940,941,947,951,967,975,987,988,989,990,1025,1034,1036,1040,1043,1049,1055,1058,1059,1061,1063,1126,1162,1177,1213,1215,1256,1258,1261,1265,1266,1267,1268,1277,1279,1280,1282,1283,1285],seed:[44,45,1244],seed_valu:[44,45,1244,1249],seem:1268,seen:[41,42],seen_set:[1071,1097],select:[933,934,1213,1237],self:[44,45,47,65,417,423,424,947,975,987,988,989,990,1126,1268,1277,1279,1280,1282,1283,1285,1302,1306],semant:[41,1025,1063],send:42,sentinel:[1256,1258],seper:[47,1071,1091],seq:[44,45,46,1256,1257,1298,1299],sequenc:[15,16,17,44,45,46,47,930,931,933,934,947,952,975,984,985,994,995,996,997,998,999,1000,1001,1004,1005,1019,1071,1075,1105,1110,1126,1130,1142,1146,1147,1149,1150,1151,1152,1153,1154,1155,1156,1162,1169,1183,1184,1188,1189,1191,1192,1197,1208,1209,1210,1213,1215,1217,1219,1225,1230,1234,1235,1238,1239,1244,1246,1248,1256,1259,1262,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1295,1298,1299,1300,1301,1302,1306,1308,1309],seri:47,serv:54,set:[15,18,19,41,44,45,975,1004,1005,1017,1018,1019,1071,1072,1084,1111,1112,1113,1114,1126,1129,1131,1132,1133,1134,1135,1162,1169,1197,1198,1205,1207,1208,1213,1225,1244,1245,1249,1251,1252,1254,1255,1256,1259,1262,1268,1286,1295,1302,1303,1304,1305,1306,1307],set_at_kei:[44,45],set_at_key_chain:[44,45],set_breakpoint_debug_mod:48,set_debug_mod:48,set_default_devic:975,set_default_dtyp:947,set_default_float_dtyp:947,set_default_int_dtyp:947,set_exception_debug_mod:48,set_framework:[44,45,47,65,1268],set_ivy_backend:[44,45],set_min_bas:1071,set_min_denomin:1071,set_nest_at_index:1197,set_nest_at_indic:1197,set_queue_timeout:1071,set_split_factor:975,set_stat:[1302,1303,1304,1305,1306,1307],set_tmp_dir:1071,set_with_grad:1126,sgd:1302,shape:[44,45,47,403,406,412,416,417,419,467,476,516,526,933,936,937,939,942,943,944,945,946,947,951,952,975,987,1025,1032,1064,1071,1090,1093,1109,1110,1115,1142,1146,1149,1151,1153,1155,1162,1163,1164,1165,1166,1167,1168,1170,1172,1175,1183,1184,1185,1186,1188,1192,1213,1214,1217,1219,1222,1223,1224,1225,1233,1234,1235,1237,1238,1241,1244,1246,1247,1248,1251,1252,1254,1255,1256,1257,1286,1288,1289,1290,1291,1292,1293,1300,1301],shape_slic:[44,45],shape_to_tupl:1071,sharabl:41,share:[42,44,45,1268],shaw:42,should:[40,42,44,45,46,47,930,931,933,944,945,947,951,975,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1046,1047,1048,1049,1052,1054,1055,1056,1057,1058,1059,1061,1063,1065,1066,1067,1071,1077,1080,1126,1129,1131,1133,1134,1135,1162,1163,1164,1165,1168,1172,1177,1213,1217,1233,1235,1251,1252,1256,1257,1258,1261,1263,1268],show:[44,45,1268],show_mod_in_top_mod:[1298,1299],show_structur:[1298,1299],show_sub_contain:[44,45],show_v:[1298,1299],show_v_in_top_v:[1298,1299],shown:[44,45],shuffl:[44,45,1244],shuffle_h5_fil:[44,45],side:47,sigmoid:[399,922,1268],sign:[42,1025,1026,1063,1162,1173,1256,1261,1263],signatur:[42,47,65,399,417,423,424,467,516,947,975,987,988,989,990,1126,1277,1279,1280,1282,1283,1285],signific:[41,42],significantli:41,similar:[41,47,1025,1063,1149,1160,1286,1297],simpl:[41,47,1071,1089,1268],simpler:47,simpli:[44,45,47,1025,1043,1268],simplifi:42,simultan:[41,43,1268],sin:[1025,1069,1071,1091],sinc:42,sine:[1025,1029,1030,1065,1066],singl:[43,44,45,930,931,975,984,985,1004,1005,1006,1007,1071,1122,1125,1142,1147,1213,1237,1244,1247,1248,1256,1259,1262,1268],singleton:[1162,1177,1256,1258,1261,1265,1266,1267],singular:[1162,1174,1175],sinh:1025,siren:1277,situat:47,size:[44,45,46,467,475,933,940,941,975,998,999,1000,1001,1017,1018,1019,1071,1109,1142,1146,1162,1165,1169,1172,1174,1183,1189,1213,1215,1217,1244,1245,1247,1248,1251,1252,1256,1259,1262,1265,1266,1267,1286,1287,1288],size_ordered_arrai:[44,45],skew:[1162,1178],skip:[44,45],slew:43,slice:[44,45,1071,1092,1093,1197,1204],slice_kei:[44,45],slice_obj:[44,45],slice_via_kei:[44,45],slide:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],slodget:1162,slope:[922,924],small:[1179,1180,1181,1182,1209,1210,1268,1300,1301],smaller:[1213,1218,1256,1261,1263],smallest:[44,45,947,962,963,1025,1037,1213,1216],smallest_norm:[417,947,962],smtp:42,softmax:[399,922,1149,1160,1161],softplu:[399,922],softwar:[41,42],solut:47,some:[42,43,44,45,47,1025,1043,1126,1128,1129,1131,1133,1134,1135,1140,1149,1157,1213,1215,1268,1286,1294],some_backend:47,some_namespac:47,somehow:42,someth:47,something_cool:47,sometim:47,somewher:[44,45],sonnet:43,soon:[47,64,1271],sort:[44,45,46,1162,1174,1175,1255],sort_by_kei:[44,45],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,65,67,68,69,70,71,72,73,74,75,76,77,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,423,424,467,468,469,470,471,472,473,474,475,476,477,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,977,978,979,980,981,982,984,985,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1312],space:[42,933,940,941,1071,1091,1213,1215],spars:[1179,1182],sparse_cross_entropi:1179,spawn:[1213,1232],special:[47,1025,1026,1027,1028,1030,1031,1037,1038,1043,1044,1052,1054,1055,1063,1065,1066,1067,1256,1258],specif:[41,44,45,47,947,967,975,1017,1025,1057,1058,1071,1080,1086,1087,1088,1193,1194,1195,1196,1213,1232,1244,1250,1256,1258,1268,1271,1298,1299],specifc:[1244,1245],specifi:[44,45,47,933,934,936,940,941,942,944,945,946,947,951,952,954,975,994,995,996,997,998,999,1000,1001,1004,1005,1009,1011,1015,1018,1019,1020,1025,1063,1071,1092,1093,1098,1124,1162,1165,1169,1177,1183,1184,1186,1192,1197,1202,1203,1207,1208,1213,1215,1216,1218,1219,1223,1238,1251,1252,1254,1255,1256,1257,1259,1261,1262,1263,1265,1266,1267],speed:41,spend:43,spent:43,sphinx:47,spin:43,split:[44,45,54,975,984,998,999,1000,1001,1017,1018,1019,1071,1105,1183],split_factor:[975,984],split_func_cal:975,sponsor:42,spread:[975,1007],spyder:42,sqrt:[1025,1162,1177],squar:[1025,1067,1162,1163,1164,1166,1167,1173,1213,1225],squeez:[516,1213],stabil:[1071,1116,1117,1254,1255],stabl:[1071,1095,1096,1111,1112,1116,1117,1254,1255],stable_divid:1071,stable_pow:1071,stack:[44,45,933,944,945,1142,1147,1162,1164,1165,1166,1168,1170,1172,1175,1197,1198,1205,1213,1286,1295],stack_imag:1142,stage:[42,47],standard:[40,44,45,947,962,1209,1210,1244,1247,1256,1262,1271,1300,1301],start:[44,45,47,403,410,411,423,424,516,517,933,940,941,975,990,1213,1215,1268],starting_index:[44,45],starting_split_factor:975,state:[42,54,1149,1159,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],static_argnam:[516,520,930,931],static_argnum:[516,520,930,931],statist:[1257,1258,1259,1260,1261,1262,1263,1264],statu:43,std:[44,45,1244,1247,1256],step:[43,44,45,516,517,933,940,941,975,1126,1128,1129,1131,1133,1134,1135,1193,1194,1195,1196,1213,1215,1268,1302,1303,1304,1305,1306,1307],stephen:1268,stick:1268,still:[42,44,45,47],stochast:[1302,1307],stop:[44,45,403,410,411,423,424,516,517,933,940,941,975,990,1019,1126,1129,1131,1133,1134,1135,1137,1193,1194,1195,1196,1213,1215,1302,1303,1304,1305,1306,1307],stop_gradi:[44,45,975,1019,1126,1129,1131,1133,1134,1135,1193,1194,1195,1196,1302,1303,1304,1305,1306,1307],storag:42,store:[44,45,1071,1091,1126,1140,1183,1189,1298,1299],store_var:[1298,1299],str:[15,16,17,44,45,46,47,403,406,407,408,409,412,413,416,417,420,421,930,931,933,934,935,937,939,943,947,953,954,955,956,957,959,960,961,962,963,964,965,966,968,969,970,974,975,984,985,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1019,1071,1084,1086,1087,1088,1109,1110,1162,1169,1172,1193,1194,1195,1196,1197,1201,1213,1230,1232,1234,1256,1257,1261,1275,1276,1286,1297,1298,1299],streamlin:43,strength:1268,stride:[1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],string:[44,45,47,933,934,947,952,958,960,961,964,974,975,991,993,1002,1003,1008,1014,1020,1021,1024,1071,1084,1149,1150,1151,1152,1153,1154,1155,1156,1213,1215,1225,1234,1241,1286,1287,1288,1289,1290,1291,1292,1293,1298,1299],strip:42,strong:42,strongli:1271,structur:[44,45,46,47,1071,1080],structural_diff:[44,45],style:47,sub:[44,45,47,975,998,999,1004,1005,1006,1007,1162,1165,1183,1189,1193,1194,1195,1196],sub_cont:[44,45],sub_cont_or_keychain:[44,45],sub_cont_to_find:[44,45],sub_mod:[1298,1299],sub_modul:[1308,1309],sub_str:[44,45],sub_struc_to_find:[44,45],submodul:[54,1300,1301,1308,1309],subsequ:47,subset:47,substanti:42,substr:[44,45],success:42,suggest:1268,suit:42,suitabl:[1142,1147],sum:[44,45,467,475,476,975,1004,1005,1006,1007,1019,1025,1055,1071,1083,1087,1109,1110,1162,1176,1177,1256,1257],summat:[44,45,1256,1257],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,41,42,43,44,45,46,47,49,50,51,52,53,54,66,67,68,69,70,71,72,73,74,75,76,77,82,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,167,168,170,171,172,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,223,224,225,226,227,229,232,234,235,236,237,238,239,240,242,243,246,255,256,257,258,259,260,261,262,263,264,266,267,268,270,271,272,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,317,318,319,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,342,343,344,345,346,347,348,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,377,378,379,380,382,385,387,388,389,390,391,392,393,394,396,397,400,401,404,405,406,407,408,409,410,411,412,413,414,415,416,418,419,420,421,422,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,472,473,474,475,476,477,479,480,481,482,484,485,486,488,489,490,491,492,493,494,496,497,498,499,500,501,502,503,504,505,506,507,508,509,511,512,513,514,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,537,539,542,544,545,546,547,548,549,550,552,553,558,559,560,561,562,563,564,565,566,567,568,569,570,572,573,574,575,576,578,579,580,581,582,583,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,626,627,628,629,630,631,632,633,634,636,637,638,639,641,642,643,645,646,647,649,650,651,652,653,654,655,656,657,658,659,660,661,662,664,665,666,667,668,669,670,671,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,692,693,694,695,697,700,702,703,704,705,706,707,708,710,711,714,715,716,717,718,719,720,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,740,741,742,743,744,746,747,748,749,750,751,752,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,825,826,827,829,830,831,832,833,834,835,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,859,860,861,862,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,899,900,901,902,903,904,906,909,911,912,913,914,915,916,917,919,920,923,924,925,926,927,928,929,931,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1245,1246,1247,1248,1249,1250,1252,1255,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1271,1273,1274,1276,1278,1279,1280,1281,1282,1283,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1301,1302,1303,1304,1305,1306,1307,1309,1310,1312],supports_inplac:1071,sure:47,svd:1162,svdval:1162,swap:[44,45,1183,1190],swapax:[44,45,1183],symmetr:[1162,1163,1166,1178],sympi:42,syntax:[41,42,399,423,467,516],tab:1268,take:[43,47,1213,1227,1271],taken:[47,1162,1165,1256,1259,1262],tan:1025,tangent:[922,929,1025,1031,1032,1033,1069,1070],tanh:[922,1025],target:[44,45,975,991,994,995,996,997,998,999,1000,1001,1004,1005,1006,1007,1020,1268],target_dict:[44,45],task:[47,1193,1194,1195,1196],tcp:42,team:47,technolog:42,templat:1268,temporari:[1071,1114,1119],tensor:[41,44,45,47,467,475,476,933,940,941,947,958,975,993,1071,1109,1110,1149,1157,1159,1183,1189,1213,1215,1216,1217,1229,1231,1233,1234,1235,1241,1244,1245,1246,1268,1286,1294,1296,1302,1303,1304,1305,1306,1307],tensorflow:[42,43,47,1149,1151,1153,1155,1268,1286,1288,1290,1292],term:[41,44,45,47,1149,1159,1268,1286,1296],termcolor:[44,45,46],termin:[44,45,46],test:[43,47,947,965,966,1025,1046,1047,1048,1265,1266,1267],test_array_api:47,tf_concat:1268,than:[42,44,45,47,947,962,975,1019,1025,1027,1028,1037,1044,1052,1054,1063,1067,1071,1104,1126,1132,1162,1168,1177,1183,1186,1213,1215,1218,1222,1229,1237,1238,1244,1248,1256,1261,1263,1268],thank:42,thei:[44,45,47,1025,1032,1193,1194,1195,1244,1245,1268,1308,1309],them:[40,41,42,43,1268],themselv:[1197,1198],therefor:[41,47],thi:[41,42,43,44,45,46,47,933,935,975,997,1001,1007,1014,1019,1024,1025,1026,1043,1057,1058,1063,1071,1091,1108,1113,1126,1129,1131,1132,1133,1134,1135,1140,1149,1158,1162,1169,1173,1176,1197,1201,1206,1213,1215,1235,1251,1252,1256,1259,1262,1268,1271,1298,1299,1302,1303,1304,1305,1306,1307],thing:[41,42,43,47,1268],those:[41,44,45,47,1126,1140,1162,1172,1174,1213,1218],though:47,thought:[42,47],three:54,threshold:[1213,1229,1231],through:[44,45,47],thu:[1025,1063],tick:47,tickbox:47,tile:1183,time:[41,42,43,47,1126,1129,1133,1149,1159,1183,1191,1193,1194,1195,1196,1244,1245,1251,1252,1286,1297,1298,1299],timeout:[44,45,46,975,984,985,1071,1108,1113],timestep:[1149,1159,1286,1295],titl:[47,1268],tmp_dir:1071,tmp_dr:[1071,1114],to_appli:[44,45],to_clon:975,to_dev:[44,45,423,975],to_dict:[44,45],to_disk_as_hdf5:[44,45],to_disk_as_json:[44,45],to_disk_as_pickl:[44,45],to_distribut:975,to_flat_list:[44,45],to_iter:[44,45],to_iterator_kei:[44,45],to_iterator_valu:[44,45],to_ivi:[15,44,45],to_ivy_modul:1275,to_json:[44,45],to_kv_fn:[1149,1160],to_kv_v:[1149,1160],to_list:[44,45,467,1071],to_multi_dev:[44,45],to_mut:[1197,1199,1206],to_n:[15,44,45],to_numpi:[44,45,467,1071,1268],to_out_fn:[1149,1160],to_out_v:[1149,1160],to_q_fn:[1149,1160],to_q_v:[1149,1160],to_raw:[44,45],to_scalar:[467,1071],togeth:[42,44,45,1308,1309],tool:[40,43,1268],top_mod:[1298,1299],torch:[47,930,931,1268],torch_concat:1268,torchvis:43,total:[43,44,45,46,975,1021],total_mem_on_dev:975,toward:1271,tpu:[975,1022],tpu_is_avail:[423,975],trace:[44,45,1071,1104,1162],track:[47,975,1197,1206,1298,1299],track_submod_call_ord:[1298,1299],track_submod_ret:[1298,1299],trail:[1300,1301],train:[43,64,1126,1128,1129,1133,1268],trainabl:[1126,1132,1275,1276,1298,1299,1308],trainer:[43,64,1268],transform:[1149,1157,1158],transpil:[54,1271],transpos:[44,45,516,975,1006,1149,1151,1153,1155,1162,1170,1213,1286,1288,1290,1292],travers:[15,18,19,44,45,1197,1206],trax:43,treat:[44,45,930,931],tri:[44,45],triangular:[933,944,945,1162,1163,1172],tril:[403,933],trim_kei:[44,45],triu:[403,933],trust:[1126,1133,1302,1304],truth:[1025,1045,1049,1050,1061,1213,1221],try_else_non:1071,try_import_ivy_jax:65,try_import_ivy_mxnet:65,try_import_ivy_numpi:65,try_import_ivy_tf:65,try_import_ivy_torch:65,try_kc:[44,45],tune:975,tune_dev_alloc:975,tune_dev_split:975,tune_step:975,tupl:[15,16,17,18,19,44,45,47,403,406,412,416,417,419,930,931,933,935,936,942,946,947,951,1071,1091,1115,1162,1174,1177,1183,1184,1185,1186,1187,1192,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1213,1223,1244,1246,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267],turn:43,tutori:47,two:[43,44,45,54,933,938,944,945,1071,1074,1162,1163,1164,1165,1166,1168,1169,1170,1172,1173,1174,1175,1176,1183,1190,1213,1215,1220,1228],type:[15,18,44,45,46,47,65,420,421,423,424,933,934,936,937,938,939,942,943,944,945,946,951,952,953,954,958,959,960,961,962,963,964,965,966,967,974,975,987,988,989,990,1002,1003,1007,1019,1025,1026,1027,1028,1030,1031,1034,1035,1036,1037,1038,1040,1043,1044,1045,1046,1047,1048,1049,1050,1052,1054,1055,1056,1057,1058,1059,1061,1063,1064,1065,1066,1067,1071,1080,1085,1090,1104,1118,1125,1126,1132,1137,1162,1163,1164,1165,1166,1168,1170,1172,1177,1183,1186,1187,1213,1214,1215,1219,1221,1222,1223,1225,1233,1234,1241,1251,1252,1254,1255,1256,1258,1261,1263,1264,1265,1266,1267,1268,1277,1279,1280,1282,1283,1285,1298,1299],types_to_iteratively_nest:[44,45,46],uint16:[1256,1261,1263],uint32:[1256,1261,1263],uint64:[1256,1261,1263],uint8:[1142,1144,1148],uint8_img_to_float_img:1142,unabl:47,unchang:[15,16,17,18,19],uncom:47,underli:[1025,1034,1036,1059],understand:43,underwai:47,unecessari:47,unfairli:47,unif:[42,1271],unifi:[40,42,44,45,975,1004,1005,1006,1007,1019,1268],uniform:[44,45,1244,1245,1247,1248,1277,1279,1280,1283,1284],uniformli:[1244,1246,1248],uniniti:[933,936,937],union:[15,18,19,44,45,47,403,406,407,409,412,413,416,417,420,421,422,930,931,933,934,935,936,937,939,940,941,942,943,944,945,946,947,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,974,975,993,998,999,1000,1001,1019,1020,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1078,1079,1081,1082,1083,1086,1087,1088,1090,1091,1092,1093,1098,1109,1110,1115,1120,1121,1122,1124,1125,1162,1163,1166,1168,1170,1173,1174,1175,1177,1178,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1197,1198,1199,1205,1206,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1251,1252,1254,1255,1256,1258,1260,1261,1264,1265,1266,1267],uniqu:[41,975,984,985,1193,1194,1195,1196,1197,1201],unit:[47,922,923,924,925,975,1025,1029],unitari:[1162,1174],univers:41,unless:[1213,1233,1241],unlik:[42,975],unnorm:[1244,1245],unpack:[1071,1124],unrel:42,unrol:[1149,1159],unset_debug_mod:48,unset_default_devic:975,unset_default_dtyp:947,unset_default_float_dtyp:947,unset_default_int_dtyp:947,unset_framework:65,unset_with_grad:1126,unsign:[1256,1261,1263],unspecifi:[1025,1063],unstack:[44,45,467,1071],unsurprisingli:41,until:[42,47],unus:[930,931],updat:[44,45,467,475,476,975,984,1071,1102,1109,1110,1126,1128,1129,1131,1133,1134,1135,1149,1159,1193,1194,1195,1197,1202,1203,1207,1208,1275,1276,1302,1303,1304,1305,1306,1307],update_backend:[44,45],update_config:[44,45],upon:47,upper:[44,45,933,938,945,1162,1163,1172,1244,1248],upper_depth:[1298,1299],upstream:47,usabl:1268,usag:[42,975,1019],use:[43,44,45,46,47,975,984,985,1010,1022,1071,1116,1117,1149,1160,1183,1188,1209,1210,1268,1300,1301],used:[44,45,47,947,959,975,984,1014,1017,1018,1024,1071,1095,1096,1105,1109,1110,1111,1112,1126,1133,1134,1162,1165,1169,1193,1194,1195,1196,1197,1206,1213,1241,1286,1297,1302,1304,1305],used_dev:[975,984],used_mem_on_dev:975,useful:[44,45,975,1019,1149,1158,1268],user:[41,42,1268,1286,1297,1298,1299],uses:1268,using:[43,44,45,47,1126,1128,1129,1149,1157,1161,1197,1200,1204,1256,1257,1268,1286,1294],util:[975,1008,1266,1267],v_with_top_v_key_chain:[1298,1299],val:[44,45,467,471,472,473,1071,1100,1101,1102,1111,1112],valid:[947,953,1071,1116,1117,1149,1150,1151,1152,1153,1154,1155,1156,1265,1266,1267,1286,1287,1288,1289,1290,1291,1292,1293],valid_dtyp:947,valu:[44,45,933,938,939,940,941,975,987,1018,1019,1025,1026,1027,1031,1037,1041,1042,1044,1045,1049,1050,1051,1061,1062,1064,1071,1078,1079,1080,1085,1091,1092,1093,1108,1109,1110,1111,1112,1113,1125,1126,1130,1133,1142,1148,1149,1160,1161,1162,1172,1173,1174,1175,1176,1177,1183,1184,1188,1192,1193,1194,1195,1197,1201,1202,1203,1207,1208,1209,1210,1213,1214,1215,1216,1218,1221,1223,1229,1231,1235,1239,1240,1244,1247,1248,1251,1252,1254,1255,1256,1258,1260,1261,1263,1286,1297,1300,1301,1302,1304],value_is_nan:1071,vanilla:[1193,1195],var_shap:1277,variabl:[15,16,17,18,19,44,45,1071,1076,1100,1101,1102,1103,1104,1118,1126,1129,1130,1131,1132,1133,1134,1135,1137,1140,1149,1160,1193,1194,1195,1196,1209,1210,1275,1276,1277,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],variable_data:1126,varianc:[44,45,1256,1264],variou:[47,1268],vector:[44,45,1071,1079,1149,1158,1162,1168,1174,1175,1177,1178,1213,1220,1286,1296],vector_norm:[44,45,1162],vector_to_skew_symmetric_matrix:1162,verbos:1312,veri:[41,42,47,1268],verifi:[47,1271],version:[41,42,43,47],via:[1197,1198,1205],view:[1142,1147],virtual:42,vision:[64,1268],vital:41,volum:[1149,1154],vw_tm1:[1126,1129,1133],wai:[41,42],wait:[44,45,46,47],want:[42,47,1268],warn:[65,72,73,74,75,76],warp:[1142,1143],websit:[42,47],week:43,weight:[1126,1128,1129,1131,1133,1134,1135,1149,1158,1159,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1298,1299,1302,1304,1305],weight_initi:[1286,1287,1288,1289,1290,1291,1292,1293,1295,1296],weights_path:[1298,1299],welcom:1271,well:[44,45,1071,1098],were:[44,45],what:[42,43,47,1268],wheel:41,when:[41,42,44,45,46,47,975,1025,1043,1071,1077,1117,1162,1174,1213,1240,1251,1252,1256,1258,1268,1298,1299],where:[41,42,43,44,45,47,516,933,938,939,1025,1053,1162,1172,1174,1175,1183,1184,1185,1187,1192,1197,1198,1205,1213,1215,1217,1218,1226,1233,1244,1245,1265,1266,1267],wherea:47,wherebi:[1197,1206],whether:[15,18,19,44,45,46,922,923,930,931,947,958,964,965,966,974,975,993,1006,1010,1014,1019,1022,1024,1025,1048,1071,1072,1074,1075,1082,1085,1089,1091,1098,1099,1103,1104,1105,1118,1124,1125,1126,1129,1130,1131,1132,1133,1134,1135,1137,1149,1157,1193,1194,1195,1196,1197,1198,1199,1201,1205,1206,1213,1224,1236,1244,1245,1265,1266,1267,1268,1275,1276,1286,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307],which:[41,42,43,44,45,46,47,54,922,927,930,931,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,953,958,962,963,964,974,975,984,985,993,998,999,1000,1001,1004,1005,1006,1007,1009,1011,1015,1017,1018,1019,1025,1032,1063,1071,1080,1082,1083,1085,1092,1093,1094,1106,1107,1109,1110,1124,1126,1129,1130,1131,1133,1134,1135,1137,1139,1140,1142,1144,1149,1160,1161,1162,1165,1169,1177,1183,1186,1188,1189,1197,1201,1202,1203,1207,1208,1213,1215,1219,1220,1223,1225,1226,1227,1233,1234,1238,1240,1241,1244,1245,1246,1247,1248,1251,1252,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1275,1276,1286,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1306,1308,1309],whilst:47,whitespac:[44,45,46],who:47,whose:[47,933,934,938,944,945,1025,1028,1030,1038,1065,1066,1071,1077,1162,1163,1164,1165,1166,1170,1172,1175,1183,1186,1256,1257,1259,1262],why:[40,42,1268],width:[1142,1147],window:[1142,1147,1149,1150,1151,1152,1153,1154,1155,1156,1286,1287,1288,1289,1290,1291,1292,1293],wireless:42,wise:[44,45,47,922,923,924,925,926,927,928,929,1025,1026,1027,1029,1031,1032,1034,1035,1036,1040,1041,1042,1045,1049,1050,1051,1055,1056,1057,1058,1059,1061,1063,1064,1069,1071,1090,1126,1129,1131,1133,1135,1213,1218,1221,1222,1229,1231],with_bia:[1286,1296],with_cal:[1071,1085],with_default_key_color:[44,45],with_entries_as_list:[44,45],with_grad:[1126,1136],with_ivy_backend:[44,45],with_key_length_limit:[44,45],with_partial_v:[1298,1299],with_print_ind:[44,45],with_print_limit:[44,45],with_print_line_spac:[44,45],with_remaind:[44,45,1183,1189],with_to_kv_fn:[1286,1297],with_to_out_fn:[1286,1297],with_to_q_fn:[1286,1297],within:[15,18,19,47,1162,1174,1213,1215,1244,1248],without:[44,45,47,1071,1108,1113,1197,1199,1213,1235],won:[42,43],wonder:[41,43,1268],word:[15,16,17,1213,1215,1244,1248,1275,1276],work:[43,47,1271],worker:[975,984,985],worker_class:[975,984,985],workflow:[43,64],wors:42,would:[42,47,922,927,1268],wouldn:43,wrap:[15,44,45,46,47,399,423,467,516,1071,1077,1126,1140,1268],wrapper:47,write:[43,44,45,47,1268],written:[41,47,1268],ws_new:[1126,1129,1131,1133,1134,1135],x1_i:[1025,1034,1036,1040,1045,1049,1050,1055,1056,1058,1059,1061,1063,1213,1221],x2_i:[1025,1034,1036,1040,1045,1049,1050,1055,1056,1058,1059,1061,1063,1213,1221],x_feat_dim:[1149,1160],x_i:[1025,1026,1027,1028,1030,1031,1035,1037,1038,1043,1044,1046,1047,1048,1052,1054,1057,1065,1066,1067,1068,1256,1258],x_in:1268,x_inv:[1162,1167],x_max:[516,1213,1218],x_min:[516,1213,1218],xor:[1025,1059],year:[41,43,1268],yet:[1197,1206],yield:[1213,1240],you:[41,42,43,47,1268,1271],your:[42,43,1268],yourself:[47,1268],yourslef:47,youtub:47,zero:[43,44,45,403,933,936,938,944,945,1025,1043,1057,1058,1063,1071,1109,1110,1126,1128,1129,1133,1134,1149,1157,1162,1164,1168,1177,1183,1184,1192,1213,1233,1241,1251,1252,1256,1258,1261,1263,1265,1266,1267,1277,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1302,1303,1304,1305],zero_pad:1183,zeros_lik:[516,1213]},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Background","ML Explosion","Standardization","Why Unify?","Container","Container","MultiDevContainer","Contributing","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Design","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Extensions","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Activations","softmax","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","remainder","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Mxnet","Activations","gelu","Array api","Data types","Function and method signatures","Searching functions","Set functions","Statistical functions","Constants","Creation","array","asarray","empty","eye","linspace","logspace","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","Elementwise","acos","acosh","bitwise_and","bitwise_or","ceil","floor","greater_equal","isfinite","isinf","isnan","less","logical_and","logical_not","logical_or","logical_xor","negative","round","sin","sinh","sqrt","square","tanh","General","array_equal","cumprod","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matrix_norm","pinv","qr","slogdet","svd","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","repeat","split","tile","zero_pad","Old","General","abs","arange","broadcast_to","cast","clip","compile","concatenate","cross","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","matmul","meshgrid","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Numpy","Activations","gelu","softmax","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","remainder","round","sin","sinh","sqrt","square","tanh","General","cumprod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","compile","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Tensorflow","Activations","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","remainder","round","sin","sinh","sqrt","square","tanh","General","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv2d","conv3d","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","identity","linear_resample","one_hot","squeeze","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Torch","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","remainder","round","sin","sinh","sqrt","square","tan","tanh","General","array_equal","container_types","copy_array","cumprod","cumsum","floormod","gather","gather_nd","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","to_list","to_numpy","to_scalar","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","broadcast_to","cast","clip","compile","concatenate","cross","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","get_num_dims","identity","indices_where","linear_resample","maximum","meshgrid","minimum","multiprocessing","one_hot","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Ivy","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Compilation","compile","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","broadcast_to","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","result_type","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","divide","erf","exp","expm1","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","logical_xor","negative","not_equal","positive","remainder","round","sin","sinh","sqrt","square","tan","tanh","General","all_equal","arg_names","array_equal","arrays_equal","assert_supports_inplace","cache_fn","clip_matrix_norm","clip_vector_norm","container_types","copy_array","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","exists","floormod","fourier_encode","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_referrers_recursive","has_nans","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","match_kwargs","num_arrays_in_memory","print_all_arrays_in_memory","queue_timeout","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape_to_tuple","stable_divide","stable_pow","supports_inplace","tmp_dir","to_list","to_numpy","to_scalar","try_else_none","unstack","value_is_nan","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slodget","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Meta","fomaml_step","maml_step","reptile_step","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Norms","layer_norm","Old","Dtype","General","abs","arange","argmin","broadcast_to","clip","concatenate","cross","equal","floor","full","get_num_dims","identity","indices_where","linear_resample","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linalg","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Roadmap","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Verbosity","cprint"],titleterms:{"default":1085,"function":[249,250,251,252],"var":[240,394,550,708,917,1264],Ones:1282,The:42,abs:[115,351,426,585,674,754,865,1026,1214],aco:[116,276,427,586,755,1027],acosh:[117,277,428,587,756,1028],activ:[81,245,399,555,713,922,1272],adam:1303,adam_step:1128,adam_upd:1129,algebra:[181,219,328,374,495,534,648,689,836,896,1162],all:[242,396,552,710,919,1266],all_equ:1072,all_nested_indic:1198,ani:[243,397,553,711,920,1267],api:[0,42,47,247],arang:[203,352,517,675,866,1215],arg_nam:1073,argmax:[229,382,539,697,906,1252],argmin:[204,518,676,867,1216],args_to_ivi:16,args_to_n:17,argsort:[232,385,542,700,909,1255],arithmet:1,arrai:[0,3,42,47,88,247,255,404,558,726,934],array_equ:[299,800,1074],arrays_equ:1075,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[89,256,405,559,727,935],asin:[118,429,588,757,1029],asinh:[119,430,589,758,1030],assert_supports_inplac:1076,atan2:[760,1032],atan:[120,431,590,759,1031],atanh:[761,1033],attribut:5,backend:[47,79],background:40,bilinear_resampl:[170,317,484,641,825,1143],binary_cross_entropi:1180,bitwis:7,bitwise_and:[121,278,432,591,762,1034],bitwise_invert:[122,433,592,763,1035],bitwise_or:[123,279,434,593,764,1036],broadcast_to:[103,353,419,573,741,868,951,1217],builder:56,cache_fn:1077,cast:[205,354,519,677,869,952],ceil:[124,280,435,594,765,1037],choleski:[182,329,496,649,837,1163],choose_random_framework:67,citat:1268,clear_framework_stack:68,clear_mem_on_dev:[747,991],clip:[355,870,1218],clip_matrix_norm:1078,clip_vector_norm:1079,closest_valid_dtyp:953,comparison:9,competit:42,compil:[356,520,871,930,931],complimentari:42,concaten:[206,357,521,678,872,1219],constant:[83,253,402,556,721,932],constant_pad:[342,664,854,1184],contain:[44,45],container_typ:[801,1080],content:1268,contribut:47,conv1d:[174,321,488,829,1150,1287],conv1d_transpos:[175,322,489,830,1151],conv1dtranspos:1288,conv2d:[176,323,490,645,831,1152,1289],conv2d_transpos:[177,324,491,832,1153],conv2dtranspos:1290,conv3d:[178,325,492,646,833,1154,1291],conv3d_transpos:[179,326,493,834,1155],conv3dtranspos:1292,convers:15,convert:[84,722,1275],convert_dtyp:954,copy_arrai:[802,1081],copy_nest:1199,cos:[125,436,595,766,1038],cosh:[126,437,596,767,1039],cprint:1312,creat:47,creation:[87,254,403,557,725,933],cross:[358,873,1220],cross_entropi:1181,cumprod:[156,300,468,803,1082],cumsum:[804,1083],current_framework:69,current_framework_str:[874,1084],data:[101,248,265,417,571,739,947],debug_mod:49,debugg:48,default_devic:992,default_dtyp:955,default_float_dtyp:956,default_int_dtyp:957,depthwise_conv2d:[180,327,494,647,835,1156],depthwiseconv2d:1293,design:[47,54],det:[183,330,497,650,838,1164],dev:[109,271,579,748,993],dev_clon:994,dev_clone_arrai:995,dev_clone_it:996,dev_clone_nest:997,dev_dist:998,dev_dist_arrai:999,dev_dist_it:1000,dev_dist_nest:1001,dev_from_str:[110,272,580,749,1002],dev_to_str:[111,273,581,750,1003],dev_unifi:1004,dev_unify_arrai:1005,dev_unify_it:1006,dev_unify_nest:1007,dev_util:1008,devclonedit:978,devcloneditem:977,devclonednest:979,devdistit:981,devdistitem:980,devdistnest:982,devic:[20,107,269,423,577,745,975],devmapp:984,devmappermultiproc:985,diagon:[184,331,498,651,839,1165],divid:1040,dropout:[1157,1294],dtype:[207,359,522,679,875,958,1212],dtype_bit:[208,360,523,680,876,959],dtype_from_str:[209,361,524,681,877,960],dtype_to_str:[210,362,525,682,878,961],ecosystem:57,eigvalsh:[185,332,499,652,840,1166],einops_rearrang:1086,einops_reduc:1087,einops_repeat:1088,einsum:[234,387,544,702,911,1257],elementwis:[114,275,425,584,753,1025],empti:[90,257,406,560,728,936],empty_lik:[91,407,561,729,937],equal:[127,438,597,768,1221],erf:[439,769,1041],execute_with_gradi:[167,312,479,636,819,1130],exist:1089,exp:[770,1042],expand_dim:[197,343,511,665,855,1185],explos:41,expm1:[128,440,598,771,1043],extens:64,eye:[92,258,408,562,730,938],finfo:[104,267,420,574,742,962],firstlayersiren:1279,flip:[198,344,512,666,856,1186],float_img_to_uint8_img:1144,floor:[129,281,441,599,772,1044,1222],floormod:[301,805,1090],fomaml_step:1194,fork:47,fourier_encod:1091,framework:65,full:[211,363,526,683,879,1223],full_lik:[93,409,563,731,939],func:78,gather:[157,302,469,626,806,1092],gather_nd:[158,303,470,627,807,1093],geglu:1273,gelu:[246,400,714,923,1274],gener:[22,155,202,298,350,467,516,625,673,799,864,1071,1213],get_all_arrays_in_memori:1094,get_all_arrays_on_dev:1009,get_framework:70,get_min_bas:1095,get_min_denomin:1096,get_num_dim:[880,1224],get_referrers_recurs:1097,glorotuniform:1280,gpu_is_avail:1010,gradient:[24,166,311,478,635,818,1126],gradient_descent_upd:1131,gradient_imag:[171,318,485,642,826,1145],greater_equ:[130,282,442,600,773,1045],gym:58,handler:65,has_nan:1098,ident:[212,364,527,684,881,1225],iinfo:[105,268,421,575,743,963],imag:[26,169,316,483,640,824,1142],implement:43,index_nest:1200,indices_wher:[213,365,528,882,1226],infinit:43,initi:1277,inplac:11,inplace_arrays_support:1099,inplace_decr:[159,304,471,628,808,1100],inplace_incr:[160,305,472,629,809,1101],inplace_upd:[161,306,473,630,810,1102],inplace_variables_support:1103,inv:[841,1167],invalid_dtyp:964,is_arrai:[162,307,474,631,811,1104],is_float_dtyp:965,is_int_dtyp:966,is_vari:[168,313,480,637,820,1132],isfinit:[131,283,443,601,774,1046],isinf:[132,284,444,602,775,1047],isnan:[133,285,445,603,776,1048],issu:47,ivi:[47,55,56,57,58,59,60,61,62,63,921],ivymodul:[85,723],jax:80,keep:47,lamb:1304,lamb_upd:1133,lar:1305,lars_upd:1134,layer:[173,320,487,644,828,1149,1286],layer_norm:1210,layernorm:1301,leaky_relu:[715,924],less:[134,286,446,604,777,1049],less_equ:[135,447,605,778,1050],life:43,linalg:[28,1242],linear:[181,219,328,374,495,534,648,689,836,896,1158,1162,1296],linear_resampl:[214,366,529,685,883,1227],linspac:[94,259,410,564,732,940],list:47,log10:[137,449,607,780,1052],log1p:[138,450,608,781,1053],log2:[139,451,609,782,1054],log:[136,448,606,779,1051],logaddexp:[140,452,610,783,1055],logic:30,logical_and:[141,287,453,611,784,1056],logical_not:[142,288,454,612,785,1057],logical_or:[143,289,455,613,786,1058],logical_xor:[144,290,456,614,787,1059],logspac:[95,260,411,565,733,941],loss:1179,lstm:1295,lstm_updat:1159,maml_step:1195,manipul:[196,341,510,663,853,1183],map:1201,map_nest_at_index:1202,map_nest_at_indic:1203,match_kwarg:1105,math:32,matmul:[186,367,500,653,842,1168,1228],matrix_norm:[187,333,501,654,843,1169],matrix_transpos:[188,502,655,844,1170],max:[235,388,545,703,912,1258],maximum:[884,1229],mean:[236,389,546,704,913,1259],mech:59,memori:60,meshgrid:[368,885,1230],meta:[34,1193],method:249,min:[237,390,547,705,914,1260],minimum:[886,1231],model:61,modul:[1298,1299],more:43,multi_head_attent:1160,multi_index_nest:1204,multidevcontain:46,multidevit:988,multidevitem:987,multidevnest:989,multiheadattent:1297,multinomi:[222,377,537,692,899,1245],multiprocess:[887,1232],mxnet:244,neg:[145,291,457,615,788,1060],nest:1197,nested_indices_wher:1205,nested_map:1206,next:1268,norm:[1209,1300],not_equ:[146,458,616,789,1061],num_arrays_in_memori:1106,num_arrays_on_dev:1011,num_cpu_cor:1012,num_gpu:[112,1013],numpi:398,nutshel:1268,old:[201,349,515,672,863,1211],one_hot:[215,530,686,888,1233],ones:[96,261,412,566,734,942,1234],ones_lik:[97,262,413,567,735,943],oper:[1,3,7,9,11,13,47],optim:[1302,1306],optimizer_upd:1135,overview:1268,percent_used_mem_on_dev:1014,permute_dim:[199,513,667,857,1187],pinv:[334,845,1171],posit:[147,459,617,790,1062],print_all_arrays_in_memori:1107,print_all_arrays_on_dev:1015,prod:[238,391,548,706,915,1261],profil:[108,270,424,578,746,990],pull:47,queue_timeout:1108,randint:[223,378,693,900,1246],random:[36,221,376,536,691,898,1244],random_crop:1146,random_norm:[224,379,694,901,1247],random_uniform:[225,380,695,902,1248],reduct:[38,220,375,535,690,897,1243],reflect:13,relu:[716,925],remaind:[148,460,618,791,1063],repeat:[345,858,1188],reptile_step:1196,request:47,reshap:[889,1235],result_typ:[106,422,576,744,967],roadmap:1271,robot:62,round:[149,292,461,619,792,1064],scaled_dot_product_attent:1161,scatter_flat:[163,308,475,632,812,1109],scatter_nd:[164,309,476,633,813,1110],search:[228,250,381,538,696,905,1251],seed:[226,903,1249],sequenti:[1308,1309],set:[230,251,383,540,698,907,1253],set_breakpoint_debug_mod:50,set_debug_mod:51,set_default_devic:1016,set_default_dtyp:968,set_default_float_dtyp:969,set_default_int_dtyp:970,set_exception_debug_mod:52,set_framework:71,set_min_bas:1111,set_min_denomin:1112,set_nest_at_index:1207,set_nest_at_indic:1208,set_queue_timeout:1113,set_split_factor:1017,set_tmp_dir:1114,set_with_grad:1136,sgd:1307,shape:[890,1236],shape_to_tupl:1115,shelf:43,shuffl:[227,904,1250],sigmoid:[717,926],signatur:249,sin:[150,293,462,620,793,1065],sinh:[151,294,463,621,794,1066],siren:1283,skeptic:42,slodget:1173,slogdet:[190,336,504,657,847],softmax:[82,401,718,927],softplu:[719,928],sort:[231,384,541,699,908,1254],sparse_cross_entropi:1182,split:[200,346,514,668,859,1189],split_factor:1018,split_func_cal:1019,sqrt:[152,295,464,622,795,1067],squar:[153,296,465,623,796,1068],squeez:[216,369,531,687,891,1237],stable_divid:1116,stable_pow:1117,stack:[370,892,1238],stack_imag:[172,319,486,643,827,1147],standard:[42,47],statist:[233,252,386,543,701,910,1256],std:[392,1262],stop_gradi:[314,481,638,821,1137],submodul:47,sum:[239,393,549,707,916,1263],supports_inplac:1118,svd:[191,337,505,658,848,1174],svdval:[192,506,659,849,1175],swapax:[669,860,1190],tan:[797,1069],tanh:[154,297,466,624,720,798,929,1070],tensorflow:554,tile:[347,670,861,1191],tmp_dir:1119,to_dev:[113,274,582,751,1020],to_ivi:18,to_ivy_modul:[86,724,1276],to_list:[814,1120],to_n:19,to_numpi:[815,1121],to_scalar:[816,1122],todo:47,torch:712,total_mem_on_dev:1021,tpu_is_avail:[583,752,1022],trace:[193,338,507,660,850,1176],transpos:[217,371,532,893,1239],tril:[98,263,414,568,736,944],triu:[99,415,569,737,945],try_else_non:1123,try_import_ivy_jax:72,try_import_ivy_mxnet:73,try_import_ivy_numpi:74,try_import_ivy_tf:75,try_import_ivy_torch:76,type:[101,248,265,417,571,739,947],uint8_img_to_float_img:1148,unifi:43,unset_debug_mod:53,unset_default_devic:1023,unset_default_dtyp:971,unset_default_float_dtyp:972,unset_default_int_dtyp:973,unset_framework:77,unset_with_grad:1138,unstack:[165,310,477,634,817,1124],updat:47,used_mem_on_dev:1024,util:[241,395,551,709,918,1265],valid_dtyp:974,value_is_nan:1125,variabl:[315,482,639,822,1139],variable_data:[823,1140],vector_norm:[194,339,508,661,851,1177],vector_to_skew_symmetric_matrix:[195,340,509,662,852,1178],verbos:1311,vision:63,where:[372,894,1240,1268],why:43,with_grad:1141,work:42,wrapper:78,your:47,zero:[100,264,416,570,738,946,1285],zero_pad:[348,671,862,1192],zeros_lik:[218,373,533,688,895,1241]}})