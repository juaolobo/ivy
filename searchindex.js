Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/activations","functional/backends/jax/activations/softmax","functional/backends/jax/constants","functional/backends/jax/converters","functional/backends/jax/converters/IvyModule","functional/backends/jax/converters/to_ivy_module","functional/backends/jax/creation","functional/backends/jax/creation/array","functional/backends/jax/creation/asarray","functional/backends/jax/creation/empty","functional/backends/jax/creation/empty_like","functional/backends/jax/creation/eye","functional/backends/jax/creation/full_like","functional/backends/jax/creation/linspace","functional/backends/jax/creation/logspace","functional/backends/jax/creation/ones","functional/backends/jax/creation/ones_like","functional/backends/jax/creation/tril","functional/backends/jax/creation/triu","functional/backends/jax/creation/zeros","functional/backends/jax/data_type","functional/backends/jax/data_type/Finfo:\n\n    def __init__","functional/backends/jax/data_type/broadcast_to","functional/backends/jax/data_type/finfo","functional/backends/jax/data_type/iinfo","functional/backends/jax/data_type/result_type","functional/backends/jax/device","functional/backends/jax/device/Profiler","functional/backends/jax/device/dev","functional/backends/jax/device/dev_from_str","functional/backends/jax/device/dev_to_str","functional/backends/jax/device/num_gpus","functional/backends/jax/device/to_dev","functional/backends/jax/elementwise","functional/backends/jax/elementwise/abs","functional/backends/jax/elementwise/acos","functional/backends/jax/elementwise/acosh","functional/backends/jax/elementwise/asin","functional/backends/jax/elementwise/asinh","functional/backends/jax/elementwise/bitwise_and","functional/backends/jax/elementwise/bitwise_invert","functional/backends/jax/elementwise/bitwise_or","functional/backends/jax/elementwise/ceil","functional/backends/jax/elementwise/cos","functional/backends/jax/elementwise/cosh","functional/backends/jax/elementwise/equal","functional/backends/jax/elementwise/floor","functional/backends/jax/elementwise/greater_equal","functional/backends/jax/elementwise/isfinite","functional/backends/jax/elementwise/isinf","functional/backends/jax/elementwise/isnan","functional/backends/jax/elementwise/less","functional/backends/jax/elementwise/less_equal","functional/backends/jax/elementwise/log10","functional/backends/jax/elementwise/log1p","functional/backends/jax/elementwise/log2","functional/backends/jax/elementwise/logaddexp","functional/backends/jax/elementwise/logical_and","functional/backends/jax/elementwise/logical_not","functional/backends/jax/elementwise/logical_or","functional/backends/jax/elementwise/negative","functional/backends/jax/elementwise/not_equal","functional/backends/jax/elementwise/positive","functional/backends/jax/elementwise/round","functional/backends/jax/elementwise/sin","functional/backends/jax/elementwise/sinh","functional/backends/jax/elementwise/sqrt","functional/backends/jax/elementwise/square","functional/backends/jax/elementwise/tanh","functional/backends/jax/general","functional/backends/jax/general/cumprod","functional/backends/jax/general/inplace_decrement","functional/backends/jax/general/inplace_increment","functional/backends/jax/general/inplace_update","functional/backends/jax/general/is_array","functional/backends/jax/general/scatter_flat","functional/backends/jax/general/scatter_nd","functional/backends/jax/general/unstack","functional/backends/jax/gradients","functional/backends/jax/gradients/execute_with_gradients","functional/backends/jax/gradients/is_variable","functional/backends/jax/image","functional/backends/jax/image/bilinear_resample","functional/backends/jax/image/gradient_image","functional/backends/jax/image/stack_images","functional/backends/jax/layers","functional/backends/jax/layers/conv1d","functional/backends/jax/layers/conv1d_transpose","functional/backends/jax/layers/conv2d","functional/backends/jax/layers/conv2d_transpose","functional/backends/jax/layers/conv3d","functional/backends/jax/layers/conv3d_transpose","functional/backends/jax/layers/depthwise_conv2d","functional/backends/jax/linear_algebra","functional/backends/jax/linear_algebra/cholesky","functional/backends/jax/linear_algebra/det","functional/backends/jax/linear_algebra/diagonal","functional/backends/jax/linear_algebra/eigvalsh","functional/backends/jax/linear_algebra/matmul","functional/backends/jax/linear_algebra/matrix_norm","functional/backends/jax/linear_algebra/matrix_transpose","functional/backends/jax/linear_algebra/qr","functional/backends/jax/linear_algebra/slogdet","functional/backends/jax/linear_algebra/svd","functional/backends/jax/linear_algebra/svdvals","functional/backends/jax/linear_algebra/trace","functional/backends/jax/linear_algebra/vector_norm","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/manipulation","functional/backends/jax/manipulation/expand_dims","functional/backends/jax/manipulation/flip","functional/backends/jax/manipulation/permute_dims","functional/backends/jax/manipulation/split","functional/backends/jax/old","functional/backends/jax/old/general","functional/backends/jax/old/general/arange","functional/backends/jax/old/general/argmin","functional/backends/jax/old/general/cast","functional/backends/jax/old/general/concatenate","functional/backends/jax/old/general/dtype","functional/backends/jax/old/general/dtype_bits","functional/backends/jax/old/general/dtype_from_str","functional/backends/jax/old/general/dtype_to_str","functional/backends/jax/old/general/full","functional/backends/jax/old/general/gather","functional/backends/jax/old/general/gather_nd","functional/backends/jax/old/general/identity","functional/backends/jax/old/general/indices_where","functional/backends/jax/old/general/linear_resample","functional/backends/jax/old/general/one_hot","functional/backends/jax/old/general/squeeze","functional/backends/jax/old/general/transpose","functional/backends/jax/old/general/zeros_like","functional/backends/jax/old/linear_algebra","functional/backends/jax/old/reductions","functional/backends/jax/random","functional/backends/jax/random/multinomial","functional/backends/jax/random/randint","functional/backends/jax/random/random_normal","functional/backends/jax/random/random_uniform","functional/backends/jax/random/seed","functional/backends/jax/random/shuffle","functional/backends/jax/searching","functional/backends/jax/searching/argmax","functional/backends/jax/set","functional/backends/jax/sorting","functional/backends/jax/sorting/argsort","functional/backends/jax/statistical","functional/backends/jax/statistical/einsum","functional/backends/jax/statistical/max","functional/backends/jax/statistical/mean","functional/backends/jax/statistical/min","functional/backends/jax/statistical/prod","functional/backends/jax/statistical/sum","functional/backends/jax/statistical/var","functional/backends/jax/utility","functional/backends/jax/utility/all","functional/backends/jax/utility/any","functional/backends/mxnet","functional/backends/mxnet/activations","functional/backends/mxnet/activations/gelu","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/constants","functional/backends/mxnet/creation","functional/backends/mxnet/creation/array","functional/backends/mxnet/creation/asarray","functional/backends/mxnet/creation/empty","functional/backends/mxnet/creation/eye","functional/backends/mxnet/creation/linspace","functional/backends/mxnet/creation/logspace","functional/backends/mxnet/creation/ones","functional/backends/mxnet/creation/ones_like","functional/backends/mxnet/creation/tril","functional/backends/mxnet/creation/zeros","functional/backends/mxnet/data_type","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__","functional/backends/mxnet/data_type/finfo","functional/backends/mxnet/data_type/iinfo","functional/backends/mxnet/device","functional/backends/mxnet/device/Profiler","functional/backends/mxnet/device/dev","functional/backends/mxnet/device/dev_from_str","functional/backends/mxnet/device/dev_to_str","functional/backends/mxnet/device/to_dev","functional/backends/mxnet/elementwise","functional/backends/mxnet/elementwise/acos","functional/backends/mxnet/elementwise/acosh","functional/backends/mxnet/elementwise/bitwise_and","functional/backends/mxnet/elementwise/bitwise_or","functional/backends/mxnet/elementwise/ceil","functional/backends/mxnet/elementwise/floor","functional/backends/mxnet/elementwise/greater_equal","functional/backends/mxnet/elementwise/isfinite","functional/backends/mxnet/elementwise/isinf","functional/backends/mxnet/elementwise/isnan","functional/backends/mxnet/elementwise/less","functional/backends/mxnet/elementwise/logical_and","functional/backends/mxnet/elementwise/logical_not","functional/backends/mxnet/elementwise/logical_or","functional/backends/mxnet/elementwise/negative","functional/backends/mxnet/elementwise/round","functional/backends/mxnet/elementwise/sin","functional/backends/mxnet/elementwise/sinh","functional/backends/mxnet/elementwise/sqrt","functional/backends/mxnet/elementwise/square","functional/backends/mxnet/elementwise/tanh","functional/backends/mxnet/general","functional/backends/mxnet/general/array_equal","functional/backends/mxnet/general/cumprod","functional/backends/mxnet/general/floormod","functional/backends/mxnet/general/inplace_decrement","functional/backends/mxnet/general/inplace_increment","functional/backends/mxnet/general/inplace_update","functional/backends/mxnet/general/is_array","functional/backends/mxnet/general/scatter_flat","functional/backends/mxnet/general/scatter_nd","functional/backends/mxnet/general/unstack","functional/backends/mxnet/gradients","functional/backends/mxnet/gradients/execute_with_gradients","functional/backends/mxnet/gradients/is_variable","functional/backends/mxnet/gradients/stop_gradient","functional/backends/mxnet/gradients/variable","functional/backends/mxnet/image","functional/backends/mxnet/image/bilinear_resample","functional/backends/mxnet/image/gradient_image","functional/backends/mxnet/image/stack_images","functional/backends/mxnet/layers","functional/backends/mxnet/layers/conv1d","functional/backends/mxnet/layers/conv1d_transpose","functional/backends/mxnet/layers/conv2d","functional/backends/mxnet/layers/conv2d_transpose","functional/backends/mxnet/layers/conv3d","functional/backends/mxnet/layers/conv3d_transpose","functional/backends/mxnet/layers/depthwise_conv2d","functional/backends/mxnet/linear_algebra","functional/backends/mxnet/linear_algebra/cholesky","functional/backends/mxnet/linear_algebra/det","functional/backends/mxnet/linear_algebra/diagonal","functional/backends/mxnet/linear_algebra/eigvalsh","functional/backends/mxnet/linear_algebra/matrix_norm","functional/backends/mxnet/linear_algebra/pinv","functional/backends/mxnet/linear_algebra/qr","functional/backends/mxnet/linear_algebra/slogdet","functional/backends/mxnet/linear_algebra/svd","functional/backends/mxnet/linear_algebra/trace","functional/backends/mxnet/linear_algebra/vector_norm","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/manipulation","functional/backends/mxnet/manipulation/constant_pad","functional/backends/mxnet/manipulation/expand_dims","functional/backends/mxnet/manipulation/flip","functional/backends/mxnet/manipulation/repeat","functional/backends/mxnet/manipulation/split","functional/backends/mxnet/manipulation/tile","functional/backends/mxnet/manipulation/zero_pad","functional/backends/mxnet/old","functional/backends/mxnet/old/general","functional/backends/mxnet/old/general/abs","functional/backends/mxnet/old/general/arange","functional/backends/mxnet/old/general/broadcast_to","functional/backends/mxnet/old/general/cast","functional/backends/mxnet/old/general/clip","functional/backends/mxnet/old/general/compile","functional/backends/mxnet/old/general/concatenate","functional/backends/mxnet/old/general/cross","functional/backends/mxnet/old/general/dtype","functional/backends/mxnet/old/general/dtype_bits","functional/backends/mxnet/old/general/dtype_from_str","functional/backends/mxnet/old/general/dtype_to_str","functional/backends/mxnet/old/general/full","functional/backends/mxnet/old/general/gather","functional/backends/mxnet/old/general/gather_nd","functional/backends/mxnet/old/general/identity","functional/backends/mxnet/old/general/indices_where","functional/backends/mxnet/old/general/linear_resample","functional/backends/mxnet/old/general/matmul","functional/backends/mxnet/old/general/meshgrid","functional/backends/mxnet/old/general/squeeze","functional/backends/mxnet/old/general/stack","functional/backends/mxnet/old/general/transpose","functional/backends/mxnet/old/general/where","functional/backends/mxnet/old/general/zeros_like","functional/backends/mxnet/old/linear_algebra","functional/backends/mxnet/old/reductions","functional/backends/mxnet/random","functional/backends/mxnet/random/multinomial","functional/backends/mxnet/random/randint","functional/backends/mxnet/random/random_normal","functional/backends/mxnet/random/random_uniform","functional/backends/mxnet/searching","functional/backends/mxnet/searching/argmax","functional/backends/mxnet/set","functional/backends/mxnet/sorting","functional/backends/mxnet/sorting/argsort","functional/backends/mxnet/statistical","functional/backends/mxnet/statistical/einsum","functional/backends/mxnet/statistical/max","functional/backends/mxnet/statistical/mean","functional/backends/mxnet/statistical/min","functional/backends/mxnet/statistical/prod","functional/backends/mxnet/statistical/std","functional/backends/mxnet/statistical/sum","functional/backends/mxnet/statistical/var","functional/backends/mxnet/utility","functional/backends/mxnet/utility/all","functional/backends/mxnet/utility/any","functional/backends/numpy","functional/backends/numpy/activations","functional/backends/numpy/activations/gelu","functional/backends/numpy/activations/softmax","functional/backends/numpy/constants","functional/backends/numpy/creation","functional/backends/numpy/creation/array","functional/backends/numpy/creation/asarray","functional/backends/numpy/creation/empty","functional/backends/numpy/creation/empty_like","functional/backends/numpy/creation/eye","functional/backends/numpy/creation/full_like","functional/backends/numpy/creation/linspace","functional/backends/numpy/creation/logspace","functional/backends/numpy/creation/ones","functional/backends/numpy/creation/ones_like","functional/backends/numpy/creation/tril","functional/backends/numpy/creation/triu","functional/backends/numpy/creation/zeros","functional/backends/numpy/data_type","functional/backends/numpy/data_type/Finfo:\n\n    def __init__","functional/backends/numpy/data_type/broadcast_to","functional/backends/numpy/data_type/finfo","functional/backends/numpy/data_type/iinfo","functional/backends/numpy/data_type/result_type","functional/backends/numpy/device","functional/backends/numpy/device/Profiler","functional/backends/numpy/elementwise","functional/backends/numpy/elementwise/abs","functional/backends/numpy/elementwise/acos","functional/backends/numpy/elementwise/acosh","functional/backends/numpy/elementwise/asin","functional/backends/numpy/elementwise/asinh","functional/backends/numpy/elementwise/bitwise_and","functional/backends/numpy/elementwise/bitwise_invert","functional/backends/numpy/elementwise/bitwise_or","functional/backends/numpy/elementwise/ceil","functional/backends/numpy/elementwise/cos","functional/backends/numpy/elementwise/cosh","functional/backends/numpy/elementwise/equal","functional/backends/numpy/elementwise/erf","functional/backends/numpy/elementwise/floor","functional/backends/numpy/elementwise/greater_equal","functional/backends/numpy/elementwise/isfinite","functional/backends/numpy/elementwise/isinf","functional/backends/numpy/elementwise/isnan","functional/backends/numpy/elementwise/less","functional/backends/numpy/elementwise/less_equal","functional/backends/numpy/elementwise/log10","functional/backends/numpy/elementwise/log1p","functional/backends/numpy/elementwise/log2","functional/backends/numpy/elementwise/logaddexp","functional/backends/numpy/elementwise/logical_and","functional/backends/numpy/elementwise/logical_not","functional/backends/numpy/elementwise/logical_or","functional/backends/numpy/elementwise/negative","functional/backends/numpy/elementwise/not_equal","functional/backends/numpy/elementwise/positive","functional/backends/numpy/elementwise/round","functional/backends/numpy/elementwise/sin","functional/backends/numpy/elementwise/sinh","functional/backends/numpy/elementwise/sqrt","functional/backends/numpy/elementwise/square","functional/backends/numpy/elementwise/tanh","functional/backends/numpy/general","functional/backends/numpy/general/cumprod","functional/backends/numpy/general/inplace_decrement","functional/backends/numpy/general/inplace_increment","functional/backends/numpy/general/inplace_update","functional/backends/numpy/general/is_array","functional/backends/numpy/general/scatter_flat","functional/backends/numpy/general/scatter_nd","functional/backends/numpy/general/unstack","functional/backends/numpy/gradients","functional/backends/numpy/gradients/execute_with_gradients","functional/backends/numpy/gradients/is_variable","functional/backends/numpy/gradients/stop_gradient","functional/backends/numpy/gradients/variable","functional/backends/numpy/image","functional/backends/numpy/image/bilinear_resample","functional/backends/numpy/image/gradient_image","functional/backends/numpy/image/stack_images","functional/backends/numpy/layers","functional/backends/numpy/layers/conv1d","functional/backends/numpy/layers/conv1d_transpose","functional/backends/numpy/layers/conv2d","functional/backends/numpy/layers/conv2d_transpose","functional/backends/numpy/layers/conv3d","functional/backends/numpy/layers/conv3d_transpose","functional/backends/numpy/layers/depthwise_conv2d","functional/backends/numpy/linear_algebra","functional/backends/numpy/linear_algebra/cholesky","functional/backends/numpy/linear_algebra/det","functional/backends/numpy/linear_algebra/diagonal","functional/backends/numpy/linear_algebra/eigvalsh","functional/backends/numpy/linear_algebra/matmul","functional/backends/numpy/linear_algebra/matrix_norm","functional/backends/numpy/linear_algebra/matrix_transpose","functional/backends/numpy/linear_algebra/qr","functional/backends/numpy/linear_algebra/slogdet","functional/backends/numpy/linear_algebra/svd","functional/backends/numpy/linear_algebra/svdvals","functional/backends/numpy/linear_algebra/trace","functional/backends/numpy/linear_algebra/vector_norm","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/manipulation","functional/backends/numpy/manipulation/expand_dims","functional/backends/numpy/manipulation/flip","functional/backends/numpy/manipulation/permute_dims","functional/backends/numpy/manipulation/split","functional/backends/numpy/old","functional/backends/numpy/old/general","functional/backends/numpy/old/general/arange","functional/backends/numpy/old/general/argmin","functional/backends/numpy/old/general/cast","functional/backends/numpy/old/general/compile","functional/backends/numpy/old/general/concatenate","functional/backends/numpy/old/general/dtype","functional/backends/numpy/old/general/dtype_bits","functional/backends/numpy/old/general/dtype_from_str","functional/backends/numpy/old/general/dtype_to_str","functional/backends/numpy/old/general/full","functional/backends/numpy/old/general/gather","functional/backends/numpy/old/general/gather_nd","functional/backends/numpy/old/general/identity","functional/backends/numpy/old/general/indices_where","functional/backends/numpy/old/general/linear_resample","functional/backends/numpy/old/general/one_hot","functional/backends/numpy/old/general/squeeze","functional/backends/numpy/old/general/transpose","functional/backends/numpy/old/general/zeros_like","functional/backends/numpy/old/linear_algebra","functional/backends/numpy/old/reductions","functional/backends/numpy/random","functional/backends/numpy/random/multinomial","functional/backends/numpy/searching","functional/backends/numpy/searching/argmax","functional/backends/numpy/set","functional/backends/numpy/sorting","functional/backends/numpy/sorting/argsort","functional/backends/numpy/statistical","functional/backends/numpy/statistical/einsum","functional/backends/numpy/statistical/max","functional/backends/numpy/statistical/mean","functional/backends/numpy/statistical/min","functional/backends/numpy/statistical/prod","functional/backends/numpy/statistical/sum","functional/backends/numpy/statistical/var","functional/backends/numpy/utility","functional/backends/numpy/utility/all","functional/backends/numpy/utility/any","functional/backends/tensorflow","functional/backends/tensorflow/activations","functional/backends/tensorflow/constants","functional/backends/tensorflow/creation","functional/backends/tensorflow/creation/array","functional/backends/tensorflow/creation/asarray","functional/backends/tensorflow/creation/empty","functional/backends/tensorflow/creation/empty_like","functional/backends/tensorflow/creation/eye","functional/backends/tensorflow/creation/full_like","functional/backends/tensorflow/creation/linspace","functional/backends/tensorflow/creation/logspace","functional/backends/tensorflow/creation/ones","functional/backends/tensorflow/creation/ones_like","functional/backends/tensorflow/creation/tril","functional/backends/tensorflow/creation/triu","functional/backends/tensorflow/creation/zeros","functional/backends/tensorflow/data_type","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__","functional/backends/tensorflow/data_type/broadcast_to ","functional/backends/tensorflow/data_type/finfo","functional/backends/tensorflow/data_type/iinfo","functional/backends/tensorflow/data_type/result_type","functional/backends/tensorflow/device","functional/backends/tensorflow/device/Profiler","functional/backends/tensorflow/device/dev","functional/backends/tensorflow/device/dev_from_str","functional/backends/tensorflow/device/dev_to_str","functional/backends/tensorflow/device/to_dev","functional/backends/tensorflow/device/tpu_is_available","functional/backends/tensorflow/elementwise","functional/backends/tensorflow/elementwise/abs","functional/backends/tensorflow/elementwise/acos","functional/backends/tensorflow/elementwise/acosh","functional/backends/tensorflow/elementwise/asin","functional/backends/tensorflow/elementwise/asinh","functional/backends/tensorflow/elementwise/bitwise_and","functional/backends/tensorflow/elementwise/bitwise_invert","functional/backends/tensorflow/elementwise/bitwise_or","functional/backends/tensorflow/elementwise/ceil","functional/backends/tensorflow/elementwise/cos","functional/backends/tensorflow/elementwise/cosh","functional/backends/tensorflow/elementwise/equal","functional/backends/tensorflow/elementwise/floor","functional/backends/tensorflow/elementwise/greater_equal","functional/backends/tensorflow/elementwise/isfinite","functional/backends/tensorflow/elementwise/isinf","functional/backends/tensorflow/elementwise/isnan","functional/backends/tensorflow/elementwise/less","functional/backends/tensorflow/elementwise/less_equal","functional/backends/tensorflow/elementwise/log10","functional/backends/tensorflow/elementwise/log1p","functional/backends/tensorflow/elementwise/log2","functional/backends/tensorflow/elementwise/logaddexp","functional/backends/tensorflow/elementwise/logical_and","functional/backends/tensorflow/elementwise/logical_not","functional/backends/tensorflow/elementwise/logical_or","functional/backends/tensorflow/elementwise/negative","functional/backends/tensorflow/elementwise/not_equal","functional/backends/tensorflow/elementwise/positive","functional/backends/tensorflow/elementwise/round","functional/backends/tensorflow/elementwise/sin","functional/backends/tensorflow/elementwise/sinh","functional/backends/tensorflow/elementwise/sqrt","functional/backends/tensorflow/elementwise/square","functional/backends/tensorflow/elementwise/tanh","functional/backends/tensorflow/general","functional/backends/tensorflow/general/inplace_decrement","functional/backends/tensorflow/general/inplace_increment","functional/backends/tensorflow/general/inplace_update","functional/backends/tensorflow/general/is_array","functional/backends/tensorflow/general/scatter_flat","functional/backends/tensorflow/general/scatter_nd","functional/backends/tensorflow/general/unstack","functional/backends/tensorflow/gradients","functional/backends/tensorflow/gradients/execute_with_gradients","functional/backends/tensorflow/gradients/is_variable","functional/backends/tensorflow/gradients/stop_gradient","functional/backends/tensorflow/gradients/variable","functional/backends/tensorflow/image","functional/backends/tensorflow/image/bilinear_resample","functional/backends/tensorflow/image/gradient_image","functional/backends/tensorflow/image/stack_images","functional/backends/tensorflow/layers","functional/backends/tensorflow/layers/conv2d","functional/backends/tensorflow/layers/conv3d","functional/backends/tensorflow/layers/depthwise_conv2d","functional/backends/tensorflow/linear_algebra","functional/backends/tensorflow/linear_algebra/cholesky","functional/backends/tensorflow/linear_algebra/det","functional/backends/tensorflow/linear_algebra/diagonal","functional/backends/tensorflow/linear_algebra/eigvalsh","functional/backends/tensorflow/linear_algebra/matmul","functional/backends/tensorflow/linear_algebra/matrix_norm","functional/backends/tensorflow/linear_algebra/matrix_transpose","functional/backends/tensorflow/linear_algebra/qr","functional/backends/tensorflow/linear_algebra/slogdet","functional/backends/tensorflow/linear_algebra/svd","functional/backends/tensorflow/linear_algebra/svdvals","functional/backends/tensorflow/linear_algebra/trace","functional/backends/tensorflow/linear_algebra/vector_norm","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/manipulation","functional/backends/tensorflow/manipulation/constant_pad","functional/backends/tensorflow/manipulation/expand_dims","functional/backends/tensorflow/manipulation/flip","functional/backends/tensorflow/manipulation/permute_dims","functional/backends/tensorflow/manipulation/split","functional/backends/tensorflow/manipulation/swapaxes","functional/backends/tensorflow/manipulation/tile","functional/backends/tensorflow/manipulation/zero_pad","functional/backends/tensorflow/old","functional/backends/tensorflow/old/general","functional/backends/tensorflow/old/general/abs","functional/backends/tensorflow/old/general/arange","functional/backends/tensorflow/old/general/argmin","functional/backends/tensorflow/old/general/cast","functional/backends/tensorflow/old/general/concatenate","functional/backends/tensorflow/old/general/dtype","functional/backends/tensorflow/old/general/dtype_bits","functional/backends/tensorflow/old/general/dtype_from_str","functional/backends/tensorflow/old/general/dtype_to_str","functional/backends/tensorflow/old/general/full","functional/backends/tensorflow/old/general/gather","functional/backends/tensorflow/old/general/gather_nd","functional/backends/tensorflow/old/general/identity","functional/backends/tensorflow/old/general/linear_resample","functional/backends/tensorflow/old/general/one_hot","functional/backends/tensorflow/old/general/squeeze","functional/backends/tensorflow/old/general/zeros_like","functional/backends/tensorflow/old/linear_algebra","functional/backends/tensorflow/old/reductions","functional/backends/tensorflow/random","functional/backends/tensorflow/random/multinomial","functional/backends/tensorflow/random/randint","functional/backends/tensorflow/random/random_normal","functional/backends/tensorflow/random/random_uniform","functional/backends/tensorflow/searching","functional/backends/tensorflow/searching/argmax","functional/backends/tensorflow/set","functional/backends/tensorflow/sorting","functional/backends/tensorflow/sorting/argsort","functional/backends/tensorflow/statistical","functional/backends/tensorflow/statistical/einsum","functional/backends/tensorflow/statistical/max","functional/backends/tensorflow/statistical/mean","functional/backends/tensorflow/statistical/min","functional/backends/tensorflow/statistical/prod","functional/backends/tensorflow/statistical/sum","functional/backends/tensorflow/statistical/var","functional/backends/tensorflow/utility","functional/backends/tensorflow/utility/all","functional/backends/tensorflow/utility/any","functional/backends/torch","functional/backends/torch/activations","functional/backends/torch/activations/gelu","functional/backends/torch/activations/leaky_relu","functional/backends/torch/activations/relu","functional/backends/torch/activations/sigmoid","functional/backends/torch/activations/softmax","functional/backends/torch/activations/softplus","functional/backends/torch/activations/tanh","functional/backends/torch/constants","functional/backends/torch/converters","functional/backends/torch/converters/IvyModule","functional/backends/torch/converters/to_ivy_module","functional/backends/torch/creation","functional/backends/torch/creation/array","functional/backends/torch/creation/asarray","functional/backends/torch/creation/empty","functional/backends/torch/creation/empty_like","functional/backends/torch/creation/eye","functional/backends/torch/creation/full_like","functional/backends/torch/creation/linspace","functional/backends/torch/creation/logspace","functional/backends/torch/creation/ones","functional/backends/torch/creation/ones_like","functional/backends/torch/creation/tril","functional/backends/torch/creation/triu","functional/backends/torch/creation/zeros","functional/backends/torch/data_type","functional/backends/torch/data_type/Finfo:\n\n    def __init__","functional/backends/torch/data_type/broadcast_to","functional/backends/torch/data_type/finfo","functional/backends/torch/data_type/iinfo","functional/backends/torch/data_type/result_type","functional/backends/torch/device","functional/backends/torch/device/Profiler","functional/backends/torch/device/clear_mem_on_dev","functional/backends/torch/device/dev","functional/backends/torch/device/dev_from_str","functional/backends/torch/device/dev_to_str","functional/backends/torch/device/to_dev","functional/backends/torch/device/tpu_is_available","functional/backends/torch/elementwise","functional/backends/torch/elementwise/abs","functional/backends/torch/elementwise/acos","functional/backends/torch/elementwise/acosh","functional/backends/torch/elementwise/asin","functional/backends/torch/elementwise/asinh","functional/backends/torch/elementwise/atan","functional/backends/torch/elementwise/atan2","functional/backends/torch/elementwise/atanh","functional/backends/torch/elementwise/bitwise_and","functional/backends/torch/elementwise/bitwise_invert","functional/backends/torch/elementwise/bitwise_or","functional/backends/torch/elementwise/ceil","functional/backends/torch/elementwise/cos","functional/backends/torch/elementwise/cosh","functional/backends/torch/elementwise/equal","functional/backends/torch/elementwise/erf","functional/backends/torch/elementwise/exp","functional/backends/torch/elementwise/floor","functional/backends/torch/elementwise/greater_equal","functional/backends/torch/elementwise/isfinite","functional/backends/torch/elementwise/isinf","functional/backends/torch/elementwise/isnan","functional/backends/torch/elementwise/less","functional/backends/torch/elementwise/less_equal","functional/backends/torch/elementwise/log","functional/backends/torch/elementwise/log10","functional/backends/torch/elementwise/log1p","functional/backends/torch/elementwise/log2","functional/backends/torch/elementwise/logaddexp","functional/backends/torch/elementwise/logical_and","functional/backends/torch/elementwise/logical_not","functional/backends/torch/elementwise/logical_or","functional/backends/torch/elementwise/negative","functional/backends/torch/elementwise/not_equal","functional/backends/torch/elementwise/positive","functional/backends/torch/elementwise/round","functional/backends/torch/elementwise/sin","functional/backends/torch/elementwise/sinh","functional/backends/torch/elementwise/sqrt","functional/backends/torch/elementwise/square","functional/backends/torch/elementwise/tan","functional/backends/torch/elementwise/tanh","functional/backends/torch/general","functional/backends/torch/general/array_equal","functional/backends/torch/general/container_types","functional/backends/torch/general/copy_array","functional/backends/torch/general/cumprod","functional/backends/torch/general/cumsum","functional/backends/torch/general/floormod","functional/backends/torch/general/inplace_decrement","functional/backends/torch/general/inplace_increment","functional/backends/torch/general/inplace_update","functional/backends/torch/general/is_array","functional/backends/torch/general/scatter_flat","functional/backends/torch/general/scatter_nd","functional/backends/torch/general/to_list","functional/backends/torch/general/to_numpy","functional/backends/torch/general/to_scalar","functional/backends/torch/general/unstack","functional/backends/torch/gradients","functional/backends/torch/gradients/execute_with_gradients","functional/backends/torch/gradients/is_variable","functional/backends/torch/gradients/stop_gradient","functional/backends/torch/gradients/variable","functional/backends/torch/gradients/variable_data","functional/backends/torch/image","functional/backends/torch/image/bilinear_resample","functional/backends/torch/image/gradient_image","functional/backends/torch/image/stack_images","functional/backends/torch/layers","functional/backends/torch/layers/conv1d","functional/backends/torch/layers/conv1d_transpose","functional/backends/torch/layers/conv2d","functional/backends/torch/layers/conv2d_transpose","functional/backends/torch/layers/conv3d","functional/backends/torch/layers/conv3d_transpose","functional/backends/torch/layers/depthwise_conv2d","functional/backends/torch/linear_algebra","functional/backends/torch/linear_algebra/cholesky","functional/backends/torch/linear_algebra/det","functional/backends/torch/linear_algebra/diagonal","functional/backends/torch/linear_algebra/eigvalsh","functional/backends/torch/linear_algebra/inv","functional/backends/torch/linear_algebra/matmul","functional/backends/torch/linear_algebra/matrix_norm","functional/backends/torch/linear_algebra/matrix_transpose","functional/backends/torch/linear_algebra/pinv","functional/backends/torch/linear_algebra/qr","functional/backends/torch/linear_algebra/slogdet","functional/backends/torch/linear_algebra/svd","functional/backends/torch/linear_algebra/svdvals","functional/backends/torch/linear_algebra/trace","functional/backends/torch/linear_algebra/vector_norm","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/manipulation","functional/backends/torch/manipulation/constant_pad","functional/backends/torch/manipulation/expand_dims","functional/backends/torch/manipulation/flip","functional/backends/torch/manipulation/permute_dims","functional/backends/torch/manipulation/repeat","functional/backends/torch/manipulation/split","functional/backends/torch/manipulation/swapaxes","functional/backends/torch/manipulation/tile","functional/backends/torch/manipulation/zero_pad","functional/backends/torch/old","functional/backends/torch/old/general","functional/backends/torch/old/general/abs","functional/backends/torch/old/general/arange","functional/backends/torch/old/general/argmin","functional/backends/torch/old/general/broadcast_to","functional/backends/torch/old/general/cast","functional/backends/torch/old/general/clip","functional/backends/torch/old/general/compile","functional/backends/torch/old/general/concatenate","functional/backends/torch/old/general/cross","functional/backends/torch/old/general/current_framework_str","functional/backends/torch/old/general/dtype","functional/backends/torch/old/general/dtype_bits","functional/backends/torch/old/general/dtype_from_str","functional/backends/torch/old/general/dtype_to_str","functional/backends/torch/old/general/full","functional/backends/torch/old/general/gather","functional/backends/torch/old/general/gather_nd","functional/backends/torch/old/general/get_num_dims","functional/backends/torch/old/general/identity","functional/backends/torch/old/general/indices_where","functional/backends/torch/old/general/linear_resample","functional/backends/torch/old/general/maximum","functional/backends/torch/old/general/meshgrid","functional/backends/torch/old/general/minimum","functional/backends/torch/old/general/multiprocessing","functional/backends/torch/old/general/one_hot","functional/backends/torch/old/general/reshape","functional/backends/torch/old/general/shape","functional/backends/torch/old/general/squeeze","functional/backends/torch/old/general/stack","functional/backends/torch/old/general/transpose","functional/backends/torch/old/general/where","functional/backends/torch/old/general/zeros_like","functional/backends/torch/old/linear_algebra","functional/backends/torch/old/reductions","functional/backends/torch/random","functional/backends/torch/random/multinomial","functional/backends/torch/random/randint","functional/backends/torch/random/random_normal","functional/backends/torch/random/random_uniform","functional/backends/torch/random/seed","functional/backends/torch/random/shuffle","functional/backends/torch/searching","functional/backends/torch/searching/argmax","functional/backends/torch/set","functional/backends/torch/sorting","functional/backends/torch/sorting/argsort","functional/backends/torch/statistical","functional/backends/torch/statistical/einsum","functional/backends/torch/statistical/max","functional/backends/torch/statistical/mean","functional/backends/torch/statistical/min","functional/backends/torch/statistical/prod","functional/backends/torch/statistical/sum","functional/backends/torch/statistical/var","functional/backends/torch/utility","functional/backends/torch/utility/all","functional/backends/torch/utility/any","functional/ivy","functional/ivy/activations","functional/ivy/activations/gelu","functional/ivy/activations/leaky_relu","functional/ivy/activations/relu","functional/ivy/activations/sigmoid","functional/ivy/activations/softmax","functional/ivy/activations/softplus","functional/ivy/activations/tanh","functional/ivy/compilation","functional/ivy/compilation/compile","functional/ivy/constants","functional/ivy/creation","functional/ivy/creation/array","functional/ivy/creation/asarray","functional/ivy/creation/empty","functional/ivy/creation/empty_like","functional/ivy/creation/eye","functional/ivy/creation/full_like","functional/ivy/creation/linspace","functional/ivy/creation/logspace","functional/ivy/creation/ones","functional/ivy/creation/ones_like","functional/ivy/creation/tril","functional/ivy/creation/triu","functional/ivy/creation/zeros","functional/ivy/data_type","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/data_type/broadcast_to","functional/ivy/data_type/cast","functional/ivy/data_type/closest_valid_dtype","functional/ivy/data_type/convert_dtype","functional/ivy/data_type/default_dtype","functional/ivy/data_type/default_float_dtype","functional/ivy/data_type/default_int_dtype","functional/ivy/data_type/dtype","functional/ivy/data_type/dtype_bits","functional/ivy/data_type/dtype_from_str","functional/ivy/data_type/dtype_to_str","functional/ivy/data_type/finfo","functional/ivy/data_type/iinfo","functional/ivy/data_type/invalid_dtype","functional/ivy/data_type/is_float_dtype","functional/ivy/data_type/is_int_dtype","functional/ivy/data_type/result_type","functional/ivy/data_type/set_default_dtype","functional/ivy/data_type/set_default_float_dtype","functional/ivy/data_type/set_default_int_dtype","functional/ivy/data_type/unset_default_dtype","functional/ivy/data_type/unset_default_float_dtype","functional/ivy/data_type/unset_default_int_dtype","functional/ivy/data_type/valid_dtype","functional/ivy/device","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/device/DevClonedItem","functional/ivy/device/DevClonedIter","functional/ivy/device/DevClonedNest","functional/ivy/device/DevDistItem","functional/ivy/device/DevDistIter","functional/ivy/device/DevDistNest","functional/ivy/device/DevManager:\n\n    def __init__","functional/ivy/device/DevMapper","functional/ivy/device/DevMapperMultiProc","functional/ivy/device/MultiDev:\n\n    def __init__","functional/ivy/device/MultiDevItem","functional/ivy/device/MultiDevIter","functional/ivy/device/MultiDevNest","functional/ivy/device/Profiler","functional/ivy/device/clear_mem_on_dev","functional/ivy/device/default_device","functional/ivy/device/dev","functional/ivy/device/dev_clone","functional/ivy/device/dev_clone_array","functional/ivy/device/dev_clone_iter","functional/ivy/device/dev_clone_nest","functional/ivy/device/dev_dist","functional/ivy/device/dev_dist_array","functional/ivy/device/dev_dist_iter","functional/ivy/device/dev_dist_nest","functional/ivy/device/dev_from_str","functional/ivy/device/dev_to_str","functional/ivy/device/dev_unify","functional/ivy/device/dev_unify_array","functional/ivy/device/dev_unify_iter","functional/ivy/device/dev_unify_nest","functional/ivy/device/dev_util","functional/ivy/device/get_all_arrays_on_dev","functional/ivy/device/gpu_is_available","functional/ivy/device/num_arrays_on_dev","functional/ivy/device/num_cpu_cores","functional/ivy/device/num_gpus","functional/ivy/device/percent_used_mem_on_dev","functional/ivy/device/print_all_arrays_on_dev","functional/ivy/device/set_default_device","functional/ivy/device/set_split_factor","functional/ivy/device/split_factor","functional/ivy/device/split_func_call","functional/ivy/device/to_dev","functional/ivy/device/total_mem_on_dev","functional/ivy/device/tpu_is_available","functional/ivy/device/unset_default_device","functional/ivy/device/used_mem_on_dev","functional/ivy/elementwise","functional/ivy/elementwise/abs","functional/ivy/elementwise/acos","functional/ivy/elementwise/acosh","functional/ivy/elementwise/asin","functional/ivy/elementwise/asinh","functional/ivy/elementwise/atan","functional/ivy/elementwise/atan2","functional/ivy/elementwise/atanh","functional/ivy/elementwise/bitwise_and","functional/ivy/elementwise/bitwise_invert","functional/ivy/elementwise/bitwise_or","functional/ivy/elementwise/ceil","functional/ivy/elementwise/cos","functional/ivy/elementwise/cosh","functional/ivy/elementwise/divide","functional/ivy/elementwise/erf","functional/ivy/elementwise/exp","functional/ivy/elementwise/floor","functional/ivy/elementwise/greater_equal","functional/ivy/elementwise/isfinite","functional/ivy/elementwise/isinf","functional/ivy/elementwise/isnan","functional/ivy/elementwise/less","functional/ivy/elementwise/less_equal","functional/ivy/elementwise/log","functional/ivy/elementwise/log10","functional/ivy/elementwise/log1p","functional/ivy/elementwise/log2","functional/ivy/elementwise/logaddexp","functional/ivy/elementwise/logical_and","functional/ivy/elementwise/logical_not","functional/ivy/elementwise/logical_or","functional/ivy/elementwise/negative","functional/ivy/elementwise/not_equal","functional/ivy/elementwise/positive","functional/ivy/elementwise/round","functional/ivy/elementwise/sin","functional/ivy/elementwise/sinh","functional/ivy/elementwise/sqrt","functional/ivy/elementwise/square","functional/ivy/elementwise/tan","functional/ivy/elementwise/tanh","functional/ivy/general","functional/ivy/general/all_equal","functional/ivy/general/arg_names","functional/ivy/general/array_equal","functional/ivy/general/arrays_equal","functional/ivy/general/assert_supports_inplace","functional/ivy/general/cache_fn","functional/ivy/general/clip_matrix_norm","functional/ivy/general/clip_vector_norm","functional/ivy/general/container_types","functional/ivy/general/copy_array","functional/ivy/general/cumprod","functional/ivy/general/cumsum","functional/ivy/general/current_framework_str","functional/ivy/general/default","functional/ivy/general/einops_rearrange","functional/ivy/general/einops_reduce","functional/ivy/general/einops_repeat","functional/ivy/general/exists","functional/ivy/general/floormod","functional/ivy/general/fourier_encode","functional/ivy/general/get_all_arrays_in_memory","functional/ivy/general/get_min_base","functional/ivy/general/get_min_denominator","functional/ivy/general/get_referrers_recursive","functional/ivy/general/has_nans","functional/ivy/general/inplace_arrays_supported","functional/ivy/general/inplace_decrement","functional/ivy/general/inplace_increment","functional/ivy/general/inplace_update","functional/ivy/general/inplace_variables_supported","functional/ivy/general/is_array","functional/ivy/general/match_kwargs","functional/ivy/general/num_arrays_in_memory","functional/ivy/general/print_all_arrays_in_memory","functional/ivy/general/queue_timeout","functional/ivy/general/scatter_flat","functional/ivy/general/scatter_nd","functional/ivy/general/set_min_base","functional/ivy/general/set_min_denominator","functional/ivy/general/set_queue_timeout","functional/ivy/general/set_tmp_dir","functional/ivy/general/shape_to_tuple","functional/ivy/general/stable_divide","functional/ivy/general/stable_pow","functional/ivy/general/supports_inplace","functional/ivy/general/tmp_dir","functional/ivy/general/to_list","functional/ivy/general/to_numpy","functional/ivy/general/to_scalar","functional/ivy/general/try_else_none","functional/ivy/general/unstack","functional/ivy/general/value_is_nan","functional/ivy/gradients","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/gradients/adam_step","functional/ivy/gradients/adam_update","functional/ivy/gradients/execute_with_gradients","functional/ivy/gradients/gradient_descent_update","functional/ivy/gradients/is_variable","functional/ivy/gradients/lamb_update","functional/ivy/gradients/lars_update","functional/ivy/gradients/optimizer_update","functional/ivy/gradients/set_with_grads","functional/ivy/gradients/stop_gradient","functional/ivy/gradients/unset_with_grads","functional/ivy/gradients/variable","functional/ivy/gradients/variable_data","functional/ivy/gradients/with_grads","functional/ivy/image","functional/ivy/image/bilinear_resample","functional/ivy/image/float_img_to_uint8_img","functional/ivy/image/gradient_image","functional/ivy/image/random_crop","functional/ivy/image/stack_images","functional/ivy/image/uint8_img_to_float_img","functional/ivy/layers","functional/ivy/layers/conv1d","functional/ivy/layers/conv1d_transpose","functional/ivy/layers/conv2d","functional/ivy/layers/conv2d_transpose","functional/ivy/layers/conv3d","functional/ivy/layers/conv3d_transpose","functional/ivy/layers/depthwise_conv2d","functional/ivy/layers/dropout","functional/ivy/layers/linear","functional/ivy/layers/lstm_update","functional/ivy/layers/multi_head_attention","functional/ivy/layers/scaled_dot_product_attention","functional/ivy/linear_algebra","functional/ivy/linear_algebra/cholesky","functional/ivy/linear_algebra/det","functional/ivy/linear_algebra/diagonal","functional/ivy/linear_algebra/eigvalsh","functional/ivy/linear_algebra/inv","functional/ivy/linear_algebra/matmul","functional/ivy/linear_algebra/matrix_norm","functional/ivy/linear_algebra/matrix_transpose","functional/ivy/linear_algebra/pinv","functional/ivy/linear_algebra/qr","functional/ivy/linear_algebra/slodget","functional/ivy/linear_algebra/svd","functional/ivy/linear_algebra/svdvals","functional/ivy/linear_algebra/trace","functional/ivy/linear_algebra/vector_norm","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix","functional/ivy/losses","functional/ivy/losses/binary_cross_entropy","functional/ivy/losses/cross_entropy","functional/ivy/losses/sparse_cross_entropy","functional/ivy/manipulation","functional/ivy/manipulation/constant_pad","functional/ivy/manipulation/expand_dims","functional/ivy/manipulation/flip","functional/ivy/manipulation/permute_dims","functional/ivy/manipulation/repeat","functional/ivy/manipulation/split","functional/ivy/manipulation/swapaxes","functional/ivy/manipulation/tile","functional/ivy/manipulation/zero_pad","functional/ivy/meta","functional/ivy/meta/fomaml_step","functional/ivy/meta/maml_step","functional/ivy/meta/reptile_step","functional/ivy/nest","functional/ivy/nest/all_nested_indices","functional/ivy/nest/copy_nest","functional/ivy/nest/index_nest","functional/ivy/nest/map","functional/ivy/nest/map_nest_at_index","functional/ivy/nest/map_nest_at_indices","functional/ivy/nest/multi_index_nest","functional/ivy/nest/nested_indices_where","functional/ivy/nest/nested_map","functional/ivy/nest/set_nest_at_index","functional/ivy/nest/set_nest_at_indices","functional/ivy/norms","functional/ivy/norms/layer_norm","functional/ivy/old","functional/ivy/old/dtype","functional/ivy/old/general","functional/ivy/old/general/abs","functional/ivy/old/general/arange","functional/ivy/old/general/argmin","functional/ivy/old/general/broadcast_to","functional/ivy/old/general/clip","functional/ivy/old/general/concatenate","functional/ivy/old/general/cross","functional/ivy/old/general/equal","functional/ivy/old/general/floor","functional/ivy/old/general/full","functional/ivy/old/general/gather","functional/ivy/old/general/gather_nd","functional/ivy/old/general/get_num_dims","functional/ivy/old/general/identity","functional/ivy/old/general/indices_where","functional/ivy/old/general/linear_resample","functional/ivy/old/general/matmul","functional/ivy/old/general/maximum","functional/ivy/old/general/meshgrid","functional/ivy/old/general/minimum","functional/ivy/old/general/multiprocessing","functional/ivy/old/general/one_hot","functional/ivy/old/general/ones","functional/ivy/old/general/reshape","functional/ivy/old/general/shape","functional/ivy/old/general/squeeze","functional/ivy/old/general/stack","functional/ivy/old/general/transpose","functional/ivy/old/general/where","functional/ivy/old/general/zeros_like","functional/ivy/old/linalg","functional/ivy/old/reductions","functional/ivy/random","functional/ivy/random/multinomial","functional/ivy/random/randint","functional/ivy/random/random_normal","functional/ivy/random/random_uniform","functional/ivy/random/seed","functional/ivy/random/shuffle","functional/ivy/searching","functional/ivy/searching/argmax","functional/ivy/set","functional/ivy/sorting","functional/ivy/sorting/argsort","functional/ivy/statistical","functional/ivy/statistical/einsum","functional/ivy/statistical/max","functional/ivy/statistical/mean","functional/ivy/statistical/min","functional/ivy/statistical/prod","functional/ivy/statistical/std","functional/ivy/statistical/sum","functional/ivy/statistical/var","functional/ivy/utility","functional/ivy/utility/all","functional/ivy/utility/any","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/activations.rst","functional/backends/jax/activations/softmax.rst","functional/backends/jax/constants.rst","functional/backends/jax/converters.rst","functional/backends/jax/converters/IvyModule.rst","functional/backends/jax/converters/to_ivy_module.rst","functional/backends/jax/creation.rst","functional/backends/jax/creation/array.rst","functional/backends/jax/creation/asarray.rst","functional/backends/jax/creation/empty.rst","functional/backends/jax/creation/empty_like.rst","functional/backends/jax/creation/eye.rst","functional/backends/jax/creation/full_like.rst","functional/backends/jax/creation/linspace.rst","functional/backends/jax/creation/logspace.rst","functional/backends/jax/creation/ones.rst","functional/backends/jax/creation/ones_like.rst","functional/backends/jax/creation/tril.rst","functional/backends/jax/creation/triu.rst","functional/backends/jax/creation/zeros.rst","functional/backends/jax/data_type.rst","functional/backends/jax/data_type/Finfo:\n\n    def __init__.rst","functional/backends/jax/data_type/broadcast_to.rst","functional/backends/jax/data_type/finfo.rst","functional/backends/jax/data_type/iinfo.rst","functional/backends/jax/data_type/result_type.rst","functional/backends/jax/device.rst","functional/backends/jax/device/Profiler.rst","functional/backends/jax/device/dev.rst","functional/backends/jax/device/dev_from_str.rst","functional/backends/jax/device/dev_to_str.rst","functional/backends/jax/device/num_gpus.rst","functional/backends/jax/device/to_dev.rst","functional/backends/jax/elementwise.rst","functional/backends/jax/elementwise/abs.rst","functional/backends/jax/elementwise/acos.rst","functional/backends/jax/elementwise/acosh.rst","functional/backends/jax/elementwise/asin.rst","functional/backends/jax/elementwise/asinh.rst","functional/backends/jax/elementwise/bitwise_and.rst","functional/backends/jax/elementwise/bitwise_invert.rst","functional/backends/jax/elementwise/bitwise_or.rst","functional/backends/jax/elementwise/ceil.rst","functional/backends/jax/elementwise/cos.rst","functional/backends/jax/elementwise/cosh.rst","functional/backends/jax/elementwise/equal.rst","functional/backends/jax/elementwise/floor.rst","functional/backends/jax/elementwise/greater_equal.rst","functional/backends/jax/elementwise/isfinite.rst","functional/backends/jax/elementwise/isinf.rst","functional/backends/jax/elementwise/isnan.rst","functional/backends/jax/elementwise/less.rst","functional/backends/jax/elementwise/less_equal.rst","functional/backends/jax/elementwise/log10.rst","functional/backends/jax/elementwise/log1p.rst","functional/backends/jax/elementwise/log2.rst","functional/backends/jax/elementwise/logaddexp.rst","functional/backends/jax/elementwise/logical_and.rst","functional/backends/jax/elementwise/logical_not.rst","functional/backends/jax/elementwise/logical_or.rst","functional/backends/jax/elementwise/negative.rst","functional/backends/jax/elementwise/not_equal.rst","functional/backends/jax/elementwise/positive.rst","functional/backends/jax/elementwise/round.rst","functional/backends/jax/elementwise/sin.rst","functional/backends/jax/elementwise/sinh.rst","functional/backends/jax/elementwise/sqrt.rst","functional/backends/jax/elementwise/square.rst","functional/backends/jax/elementwise/tanh.rst","functional/backends/jax/general.rst","functional/backends/jax/general/cumprod.rst","functional/backends/jax/general/inplace_decrement.rst","functional/backends/jax/general/inplace_increment.rst","functional/backends/jax/general/inplace_update.rst","functional/backends/jax/general/is_array.rst","functional/backends/jax/general/scatter_flat.rst","functional/backends/jax/general/scatter_nd.rst","functional/backends/jax/general/unstack.rst","functional/backends/jax/gradients.rst","functional/backends/jax/gradients/execute_with_gradients.rst","functional/backends/jax/gradients/is_variable.rst","functional/backends/jax/image.rst","functional/backends/jax/image/bilinear_resample.rst","functional/backends/jax/image/gradient_image.rst","functional/backends/jax/image/stack_images.rst","functional/backends/jax/layers.rst","functional/backends/jax/layers/conv1d.rst","functional/backends/jax/layers/conv1d_transpose.rst","functional/backends/jax/layers/conv2d.rst","functional/backends/jax/layers/conv2d_transpose.rst","functional/backends/jax/layers/conv3d.rst","functional/backends/jax/layers/conv3d_transpose.rst","functional/backends/jax/layers/depthwise_conv2d.rst","functional/backends/jax/linear_algebra.rst","functional/backends/jax/linear_algebra/cholesky.rst","functional/backends/jax/linear_algebra/det.rst","functional/backends/jax/linear_algebra/diagonal.rst","functional/backends/jax/linear_algebra/eigvalsh.rst","functional/backends/jax/linear_algebra/matmul.rst","functional/backends/jax/linear_algebra/matrix_norm.rst","functional/backends/jax/linear_algebra/matrix_transpose.rst","functional/backends/jax/linear_algebra/qr.rst","functional/backends/jax/linear_algebra/slogdet.rst","functional/backends/jax/linear_algebra/svd.rst","functional/backends/jax/linear_algebra/svdvals.rst","functional/backends/jax/linear_algebra/trace.rst","functional/backends/jax/linear_algebra/vector_norm.rst","functional/backends/jax/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/manipulation.rst","functional/backends/jax/manipulation/expand_dims.rst","functional/backends/jax/manipulation/flip.rst","functional/backends/jax/manipulation/permute_dims.rst","functional/backends/jax/manipulation/split.rst","functional/backends/jax/old.rst","functional/backends/jax/old/general.rst","functional/backends/jax/old/general/arange.rst","functional/backends/jax/old/general/argmin.rst","functional/backends/jax/old/general/cast.rst","functional/backends/jax/old/general/concatenate.rst","functional/backends/jax/old/general/dtype.rst","functional/backends/jax/old/general/dtype_bits.rst","functional/backends/jax/old/general/dtype_from_str.rst","functional/backends/jax/old/general/dtype_to_str.rst","functional/backends/jax/old/general/full.rst","functional/backends/jax/old/general/gather.rst","functional/backends/jax/old/general/gather_nd.rst","functional/backends/jax/old/general/identity.rst","functional/backends/jax/old/general/indices_where.rst","functional/backends/jax/old/general/linear_resample.rst","functional/backends/jax/old/general/one_hot.rst","functional/backends/jax/old/general/squeeze.rst","functional/backends/jax/old/general/transpose.rst","functional/backends/jax/old/general/zeros_like.rst","functional/backends/jax/old/linear_algebra.rst","functional/backends/jax/old/reductions.rst","functional/backends/jax/random.rst","functional/backends/jax/random/multinomial.rst","functional/backends/jax/random/randint.rst","functional/backends/jax/random/random_normal.rst","functional/backends/jax/random/random_uniform.rst","functional/backends/jax/random/seed.rst","functional/backends/jax/random/shuffle.rst","functional/backends/jax/searching.rst","functional/backends/jax/searching/argmax.rst","functional/backends/jax/set.rst","functional/backends/jax/sorting.rst","functional/backends/jax/sorting/argsort.rst","functional/backends/jax/statistical.rst","functional/backends/jax/statistical/einsum.rst","functional/backends/jax/statistical/max.rst","functional/backends/jax/statistical/mean.rst","functional/backends/jax/statistical/min.rst","functional/backends/jax/statistical/prod.rst","functional/backends/jax/statistical/sum.rst","functional/backends/jax/statistical/var.rst","functional/backends/jax/utility.rst","functional/backends/jax/utility/all.rst","functional/backends/jax/utility/any.rst","functional/backends/mxnet.rst","functional/backends/mxnet/activations.rst","functional/backends/mxnet/activations/gelu.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/constants.rst","functional/backends/mxnet/creation.rst","functional/backends/mxnet/creation/array.rst","functional/backends/mxnet/creation/asarray.rst","functional/backends/mxnet/creation/empty.rst","functional/backends/mxnet/creation/eye.rst","functional/backends/mxnet/creation/linspace.rst","functional/backends/mxnet/creation/logspace.rst","functional/backends/mxnet/creation/ones.rst","functional/backends/mxnet/creation/ones_like.rst","functional/backends/mxnet/creation/tril.rst","functional/backends/mxnet/creation/zeros.rst","functional/backends/mxnet/data_type.rst","functional/backends/mxnet/data_type/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/data_type/finfo.rst","functional/backends/mxnet/data_type/iinfo.rst","functional/backends/mxnet/device.rst","functional/backends/mxnet/device/Profiler.rst","functional/backends/mxnet/device/dev.rst","functional/backends/mxnet/device/dev_from_str.rst","functional/backends/mxnet/device/dev_to_str.rst","functional/backends/mxnet/device/to_dev.rst","functional/backends/mxnet/elementwise.rst","functional/backends/mxnet/elementwise/acos.rst","functional/backends/mxnet/elementwise/acosh.rst","functional/backends/mxnet/elementwise/bitwise_and.rst","functional/backends/mxnet/elementwise/bitwise_or.rst","functional/backends/mxnet/elementwise/ceil.rst","functional/backends/mxnet/elementwise/floor.rst","functional/backends/mxnet/elementwise/greater_equal.rst","functional/backends/mxnet/elementwise/isfinite.rst","functional/backends/mxnet/elementwise/isinf.rst","functional/backends/mxnet/elementwise/isnan.rst","functional/backends/mxnet/elementwise/less.rst","functional/backends/mxnet/elementwise/logical_and.rst","functional/backends/mxnet/elementwise/logical_not.rst","functional/backends/mxnet/elementwise/logical_or.rst","functional/backends/mxnet/elementwise/negative.rst","functional/backends/mxnet/elementwise/round.rst","functional/backends/mxnet/elementwise/sin.rst","functional/backends/mxnet/elementwise/sinh.rst","functional/backends/mxnet/elementwise/sqrt.rst","functional/backends/mxnet/elementwise/square.rst","functional/backends/mxnet/elementwise/tanh.rst","functional/backends/mxnet/general.rst","functional/backends/mxnet/general/array_equal.rst","functional/backends/mxnet/general/cumprod.rst","functional/backends/mxnet/general/floormod.rst","functional/backends/mxnet/general/inplace_decrement.rst","functional/backends/mxnet/general/inplace_increment.rst","functional/backends/mxnet/general/inplace_update.rst","functional/backends/mxnet/general/is_array.rst","functional/backends/mxnet/general/scatter_flat.rst","functional/backends/mxnet/general/scatter_nd.rst","functional/backends/mxnet/general/unstack.rst","functional/backends/mxnet/gradients.rst","functional/backends/mxnet/gradients/execute_with_gradients.rst","functional/backends/mxnet/gradients/is_variable.rst","functional/backends/mxnet/gradients/stop_gradient.rst","functional/backends/mxnet/gradients/variable.rst","functional/backends/mxnet/image.rst","functional/backends/mxnet/image/bilinear_resample.rst","functional/backends/mxnet/image/gradient_image.rst","functional/backends/mxnet/image/stack_images.rst","functional/backends/mxnet/layers.rst","functional/backends/mxnet/layers/conv1d.rst","functional/backends/mxnet/layers/conv1d_transpose.rst","functional/backends/mxnet/layers/conv2d.rst","functional/backends/mxnet/layers/conv2d_transpose.rst","functional/backends/mxnet/layers/conv3d.rst","functional/backends/mxnet/layers/conv3d_transpose.rst","functional/backends/mxnet/layers/depthwise_conv2d.rst","functional/backends/mxnet/linear_algebra.rst","functional/backends/mxnet/linear_algebra/cholesky.rst","functional/backends/mxnet/linear_algebra/det.rst","functional/backends/mxnet/linear_algebra/diagonal.rst","functional/backends/mxnet/linear_algebra/eigvalsh.rst","functional/backends/mxnet/linear_algebra/matrix_norm.rst","functional/backends/mxnet/linear_algebra/pinv.rst","functional/backends/mxnet/linear_algebra/qr.rst","functional/backends/mxnet/linear_algebra/slogdet.rst","functional/backends/mxnet/linear_algebra/svd.rst","functional/backends/mxnet/linear_algebra/trace.rst","functional/backends/mxnet/linear_algebra/vector_norm.rst","functional/backends/mxnet/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/manipulation.rst","functional/backends/mxnet/manipulation/constant_pad.rst","functional/backends/mxnet/manipulation/expand_dims.rst","functional/backends/mxnet/manipulation/flip.rst","functional/backends/mxnet/manipulation/repeat.rst","functional/backends/mxnet/manipulation/split.rst","functional/backends/mxnet/manipulation/tile.rst","functional/backends/mxnet/manipulation/zero_pad.rst","functional/backends/mxnet/old.rst","functional/backends/mxnet/old/general.rst","functional/backends/mxnet/old/general/abs.rst","functional/backends/mxnet/old/general/arange.rst","functional/backends/mxnet/old/general/broadcast_to.rst","functional/backends/mxnet/old/general/cast.rst","functional/backends/mxnet/old/general/clip.rst","functional/backends/mxnet/old/general/compile.rst","functional/backends/mxnet/old/general/concatenate.rst","functional/backends/mxnet/old/general/cross.rst","functional/backends/mxnet/old/general/dtype.rst","functional/backends/mxnet/old/general/dtype_bits.rst","functional/backends/mxnet/old/general/dtype_from_str.rst","functional/backends/mxnet/old/general/dtype_to_str.rst","functional/backends/mxnet/old/general/full.rst","functional/backends/mxnet/old/general/gather.rst","functional/backends/mxnet/old/general/gather_nd.rst","functional/backends/mxnet/old/general/identity.rst","functional/backends/mxnet/old/general/indices_where.rst","functional/backends/mxnet/old/general/linear_resample.rst","functional/backends/mxnet/old/general/matmul.rst","functional/backends/mxnet/old/general/meshgrid.rst","functional/backends/mxnet/old/general/squeeze.rst","functional/backends/mxnet/old/general/stack.rst","functional/backends/mxnet/old/general/transpose.rst","functional/backends/mxnet/old/general/where.rst","functional/backends/mxnet/old/general/zeros_like.rst","functional/backends/mxnet/old/linear_algebra.rst","functional/backends/mxnet/old/reductions.rst","functional/backends/mxnet/random.rst","functional/backends/mxnet/random/multinomial.rst","functional/backends/mxnet/random/randint.rst","functional/backends/mxnet/random/random_normal.rst","functional/backends/mxnet/random/random_uniform.rst","functional/backends/mxnet/searching.rst","functional/backends/mxnet/searching/argmax.rst","functional/backends/mxnet/set.rst","functional/backends/mxnet/sorting.rst","functional/backends/mxnet/sorting/argsort.rst","functional/backends/mxnet/statistical.rst","functional/backends/mxnet/statistical/einsum.rst","functional/backends/mxnet/statistical/max.rst","functional/backends/mxnet/statistical/mean.rst","functional/backends/mxnet/statistical/min.rst","functional/backends/mxnet/statistical/prod.rst","functional/backends/mxnet/statistical/std.rst","functional/backends/mxnet/statistical/sum.rst","functional/backends/mxnet/statistical/var.rst","functional/backends/mxnet/utility.rst","functional/backends/mxnet/utility/all.rst","functional/backends/mxnet/utility/any.rst","functional/backends/numpy.rst","functional/backends/numpy/activations.rst","functional/backends/numpy/activations/gelu.rst","functional/backends/numpy/activations/softmax.rst","functional/backends/numpy/constants.rst","functional/backends/numpy/creation.rst","functional/backends/numpy/creation/array.rst","functional/backends/numpy/creation/asarray.rst","functional/backends/numpy/creation/empty.rst","functional/backends/numpy/creation/empty_like.rst","functional/backends/numpy/creation/eye.rst","functional/backends/numpy/creation/full_like.rst","functional/backends/numpy/creation/linspace.rst","functional/backends/numpy/creation/logspace.rst","functional/backends/numpy/creation/ones.rst","functional/backends/numpy/creation/ones_like.rst","functional/backends/numpy/creation/tril.rst","functional/backends/numpy/creation/triu.rst","functional/backends/numpy/creation/zeros.rst","functional/backends/numpy/data_type.rst","functional/backends/numpy/data_type/Finfo:\n\n    def __init__.rst","functional/backends/numpy/data_type/broadcast_to.rst","functional/backends/numpy/data_type/finfo.rst","functional/backends/numpy/data_type/iinfo.rst","functional/backends/numpy/data_type/result_type.rst","functional/backends/numpy/device.rst","functional/backends/numpy/device/Profiler.rst","functional/backends/numpy/elementwise.rst","functional/backends/numpy/elementwise/abs.rst","functional/backends/numpy/elementwise/acos.rst","functional/backends/numpy/elementwise/acosh.rst","functional/backends/numpy/elementwise/asin.rst","functional/backends/numpy/elementwise/asinh.rst","functional/backends/numpy/elementwise/bitwise_and.rst","functional/backends/numpy/elementwise/bitwise_invert.rst","functional/backends/numpy/elementwise/bitwise_or.rst","functional/backends/numpy/elementwise/ceil.rst","functional/backends/numpy/elementwise/cos.rst","functional/backends/numpy/elementwise/cosh.rst","functional/backends/numpy/elementwise/equal.rst","functional/backends/numpy/elementwise/erf.rst","functional/backends/numpy/elementwise/floor.rst","functional/backends/numpy/elementwise/greater_equal.rst","functional/backends/numpy/elementwise/isfinite.rst","functional/backends/numpy/elementwise/isinf.rst","functional/backends/numpy/elementwise/isnan.rst","functional/backends/numpy/elementwise/less.rst","functional/backends/numpy/elementwise/less_equal.rst","functional/backends/numpy/elementwise/log10.rst","functional/backends/numpy/elementwise/log1p.rst","functional/backends/numpy/elementwise/log2.rst","functional/backends/numpy/elementwise/logaddexp.rst","functional/backends/numpy/elementwise/logical_and.rst","functional/backends/numpy/elementwise/logical_not.rst","functional/backends/numpy/elementwise/logical_or.rst","functional/backends/numpy/elementwise/negative.rst","functional/backends/numpy/elementwise/not_equal.rst","functional/backends/numpy/elementwise/positive.rst","functional/backends/numpy/elementwise/round.rst","functional/backends/numpy/elementwise/sin.rst","functional/backends/numpy/elementwise/sinh.rst","functional/backends/numpy/elementwise/sqrt.rst","functional/backends/numpy/elementwise/square.rst","functional/backends/numpy/elementwise/tanh.rst","functional/backends/numpy/general.rst","functional/backends/numpy/general/cumprod.rst","functional/backends/numpy/general/inplace_decrement.rst","functional/backends/numpy/general/inplace_increment.rst","functional/backends/numpy/general/inplace_update.rst","functional/backends/numpy/general/is_array.rst","functional/backends/numpy/general/scatter_flat.rst","functional/backends/numpy/general/scatter_nd.rst","functional/backends/numpy/general/unstack.rst","functional/backends/numpy/gradients.rst","functional/backends/numpy/gradients/execute_with_gradients.rst","functional/backends/numpy/gradients/is_variable.rst","functional/backends/numpy/gradients/stop_gradient.rst","functional/backends/numpy/gradients/variable.rst","functional/backends/numpy/image.rst","functional/backends/numpy/image/bilinear_resample.rst","functional/backends/numpy/image/gradient_image.rst","functional/backends/numpy/image/stack_images.rst","functional/backends/numpy/layers.rst","functional/backends/numpy/layers/conv1d.rst","functional/backends/numpy/layers/conv1d_transpose.rst","functional/backends/numpy/layers/conv2d.rst","functional/backends/numpy/layers/conv2d_transpose.rst","functional/backends/numpy/layers/conv3d.rst","functional/backends/numpy/layers/conv3d_transpose.rst","functional/backends/numpy/layers/depthwise_conv2d.rst","functional/backends/numpy/linear_algebra.rst","functional/backends/numpy/linear_algebra/cholesky.rst","functional/backends/numpy/linear_algebra/det.rst","functional/backends/numpy/linear_algebra/diagonal.rst","functional/backends/numpy/linear_algebra/eigvalsh.rst","functional/backends/numpy/linear_algebra/matmul.rst","functional/backends/numpy/linear_algebra/matrix_norm.rst","functional/backends/numpy/linear_algebra/matrix_transpose.rst","functional/backends/numpy/linear_algebra/qr.rst","functional/backends/numpy/linear_algebra/slogdet.rst","functional/backends/numpy/linear_algebra/svd.rst","functional/backends/numpy/linear_algebra/svdvals.rst","functional/backends/numpy/linear_algebra/trace.rst","functional/backends/numpy/linear_algebra/vector_norm.rst","functional/backends/numpy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/manipulation.rst","functional/backends/numpy/manipulation/expand_dims.rst","functional/backends/numpy/manipulation/flip.rst","functional/backends/numpy/manipulation/permute_dims.rst","functional/backends/numpy/manipulation/split.rst","functional/backends/numpy/old.rst","functional/backends/numpy/old/general.rst","functional/backends/numpy/old/general/arange.rst","functional/backends/numpy/old/general/argmin.rst","functional/backends/numpy/old/general/cast.rst","functional/backends/numpy/old/general/compile.rst","functional/backends/numpy/old/general/concatenate.rst","functional/backends/numpy/old/general/dtype.rst","functional/backends/numpy/old/general/dtype_bits.rst","functional/backends/numpy/old/general/dtype_from_str.rst","functional/backends/numpy/old/general/dtype_to_str.rst","functional/backends/numpy/old/general/full.rst","functional/backends/numpy/old/general/gather.rst","functional/backends/numpy/old/general/gather_nd.rst","functional/backends/numpy/old/general/identity.rst","functional/backends/numpy/old/general/indices_where.rst","functional/backends/numpy/old/general/linear_resample.rst","functional/backends/numpy/old/general/one_hot.rst","functional/backends/numpy/old/general/squeeze.rst","functional/backends/numpy/old/general/transpose.rst","functional/backends/numpy/old/general/zeros_like.rst","functional/backends/numpy/old/linear_algebra.rst","functional/backends/numpy/old/reductions.rst","functional/backends/numpy/random.rst","functional/backends/numpy/random/multinomial.rst","functional/backends/numpy/searching.rst","functional/backends/numpy/searching/argmax.rst","functional/backends/numpy/set.rst","functional/backends/numpy/sorting.rst","functional/backends/numpy/sorting/argsort.rst","functional/backends/numpy/statistical.rst","functional/backends/numpy/statistical/einsum.rst","functional/backends/numpy/statistical/max.rst","functional/backends/numpy/statistical/mean.rst","functional/backends/numpy/statistical/min.rst","functional/backends/numpy/statistical/prod.rst","functional/backends/numpy/statistical/sum.rst","functional/backends/numpy/statistical/var.rst","functional/backends/numpy/utility.rst","functional/backends/numpy/utility/all.rst","functional/backends/numpy/utility/any.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/activations.rst","functional/backends/tensorflow/constants.rst","functional/backends/tensorflow/creation.rst","functional/backends/tensorflow/creation/array.rst","functional/backends/tensorflow/creation/asarray.rst","functional/backends/tensorflow/creation/empty.rst","functional/backends/tensorflow/creation/empty_like.rst","functional/backends/tensorflow/creation/eye.rst","functional/backends/tensorflow/creation/full_like.rst","functional/backends/tensorflow/creation/linspace.rst","functional/backends/tensorflow/creation/logspace.rst","functional/backends/tensorflow/creation/ones.rst","functional/backends/tensorflow/creation/ones_like.rst","functional/backends/tensorflow/creation/tril.rst","functional/backends/tensorflow/creation/triu.rst","functional/backends/tensorflow/creation/zeros.rst","functional/backends/tensorflow/data_type.rst","functional/backends/tensorflow/data_type/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/data_type/broadcast_to .rst","functional/backends/tensorflow/data_type/finfo.rst","functional/backends/tensorflow/data_type/iinfo.rst","functional/backends/tensorflow/data_type/result_type.rst","functional/backends/tensorflow/device.rst","functional/backends/tensorflow/device/Profiler.rst","functional/backends/tensorflow/device/dev.rst","functional/backends/tensorflow/device/dev_from_str.rst","functional/backends/tensorflow/device/dev_to_str.rst","functional/backends/tensorflow/device/to_dev.rst","functional/backends/tensorflow/device/tpu_is_available.rst","functional/backends/tensorflow/elementwise.rst","functional/backends/tensorflow/elementwise/abs.rst","functional/backends/tensorflow/elementwise/acos.rst","functional/backends/tensorflow/elementwise/acosh.rst","functional/backends/tensorflow/elementwise/asin.rst","functional/backends/tensorflow/elementwise/asinh.rst","functional/backends/tensorflow/elementwise/bitwise_and.rst","functional/backends/tensorflow/elementwise/bitwise_invert.rst","functional/backends/tensorflow/elementwise/bitwise_or.rst","functional/backends/tensorflow/elementwise/ceil.rst","functional/backends/tensorflow/elementwise/cos.rst","functional/backends/tensorflow/elementwise/cosh.rst","functional/backends/tensorflow/elementwise/equal.rst","functional/backends/tensorflow/elementwise/floor.rst","functional/backends/tensorflow/elementwise/greater_equal.rst","functional/backends/tensorflow/elementwise/isfinite.rst","functional/backends/tensorflow/elementwise/isinf.rst","functional/backends/tensorflow/elementwise/isnan.rst","functional/backends/tensorflow/elementwise/less.rst","functional/backends/tensorflow/elementwise/less_equal.rst","functional/backends/tensorflow/elementwise/log10.rst","functional/backends/tensorflow/elementwise/log1p.rst","functional/backends/tensorflow/elementwise/log2.rst","functional/backends/tensorflow/elementwise/logaddexp.rst","functional/backends/tensorflow/elementwise/logical_and.rst","functional/backends/tensorflow/elementwise/logical_not.rst","functional/backends/tensorflow/elementwise/logical_or.rst","functional/backends/tensorflow/elementwise/negative.rst","functional/backends/tensorflow/elementwise/not_equal.rst","functional/backends/tensorflow/elementwise/positive.rst","functional/backends/tensorflow/elementwise/round.rst","functional/backends/tensorflow/elementwise/sin.rst","functional/backends/tensorflow/elementwise/sinh.rst","functional/backends/tensorflow/elementwise/sqrt.rst","functional/backends/tensorflow/elementwise/square.rst","functional/backends/tensorflow/elementwise/tanh.rst","functional/backends/tensorflow/general.rst","functional/backends/tensorflow/general/inplace_decrement.rst","functional/backends/tensorflow/general/inplace_increment.rst","functional/backends/tensorflow/general/inplace_update.rst","functional/backends/tensorflow/general/is_array.rst","functional/backends/tensorflow/general/scatter_flat.rst","functional/backends/tensorflow/general/scatter_nd.rst","functional/backends/tensorflow/general/unstack.rst","functional/backends/tensorflow/gradients.rst","functional/backends/tensorflow/gradients/execute_with_gradients.rst","functional/backends/tensorflow/gradients/is_variable.rst","functional/backends/tensorflow/gradients/stop_gradient.rst","functional/backends/tensorflow/gradients/variable.rst","functional/backends/tensorflow/image.rst","functional/backends/tensorflow/image/bilinear_resample.rst","functional/backends/tensorflow/image/gradient_image.rst","functional/backends/tensorflow/image/stack_images.rst","functional/backends/tensorflow/layers.rst","functional/backends/tensorflow/layers/conv2d.rst","functional/backends/tensorflow/layers/conv3d.rst","functional/backends/tensorflow/layers/depthwise_conv2d.rst","functional/backends/tensorflow/linear_algebra.rst","functional/backends/tensorflow/linear_algebra/cholesky.rst","functional/backends/tensorflow/linear_algebra/det.rst","functional/backends/tensorflow/linear_algebra/diagonal.rst","functional/backends/tensorflow/linear_algebra/eigvalsh.rst","functional/backends/tensorflow/linear_algebra/matmul.rst","functional/backends/tensorflow/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/linear_algebra/matrix_transpose.rst","functional/backends/tensorflow/linear_algebra/qr.rst","functional/backends/tensorflow/linear_algebra/slogdet.rst","functional/backends/tensorflow/linear_algebra/svd.rst","functional/backends/tensorflow/linear_algebra/svdvals.rst","functional/backends/tensorflow/linear_algebra/trace.rst","functional/backends/tensorflow/linear_algebra/vector_norm.rst","functional/backends/tensorflow/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/manipulation.rst","functional/backends/tensorflow/manipulation/constant_pad.rst","functional/backends/tensorflow/manipulation/expand_dims.rst","functional/backends/tensorflow/manipulation/flip.rst","functional/backends/tensorflow/manipulation/permute_dims.rst","functional/backends/tensorflow/manipulation/split.rst","functional/backends/tensorflow/manipulation/swapaxes.rst","functional/backends/tensorflow/manipulation/tile.rst","functional/backends/tensorflow/manipulation/zero_pad.rst","functional/backends/tensorflow/old.rst","functional/backends/tensorflow/old/general.rst","functional/backends/tensorflow/old/general/abs.rst","functional/backends/tensorflow/old/general/arange.rst","functional/backends/tensorflow/old/general/argmin.rst","functional/backends/tensorflow/old/general/cast.rst","functional/backends/tensorflow/old/general/concatenate.rst","functional/backends/tensorflow/old/general/dtype.rst","functional/backends/tensorflow/old/general/dtype_bits.rst","functional/backends/tensorflow/old/general/dtype_from_str.rst","functional/backends/tensorflow/old/general/dtype_to_str.rst","functional/backends/tensorflow/old/general/full.rst","functional/backends/tensorflow/old/general/gather.rst","functional/backends/tensorflow/old/general/gather_nd.rst","functional/backends/tensorflow/old/general/identity.rst","functional/backends/tensorflow/old/general/linear_resample.rst","functional/backends/tensorflow/old/general/one_hot.rst","functional/backends/tensorflow/old/general/squeeze.rst","functional/backends/tensorflow/old/general/zeros_like.rst","functional/backends/tensorflow/old/linear_algebra.rst","functional/backends/tensorflow/old/reductions.rst","functional/backends/tensorflow/random.rst","functional/backends/tensorflow/random/multinomial.rst","functional/backends/tensorflow/random/randint.rst","functional/backends/tensorflow/random/random_normal.rst","functional/backends/tensorflow/random/random_uniform.rst","functional/backends/tensorflow/searching.rst","functional/backends/tensorflow/searching/argmax.rst","functional/backends/tensorflow/set.rst","functional/backends/tensorflow/sorting.rst","functional/backends/tensorflow/sorting/argsort.rst","functional/backends/tensorflow/statistical.rst","functional/backends/tensorflow/statistical/einsum.rst","functional/backends/tensorflow/statistical/max.rst","functional/backends/tensorflow/statistical/mean.rst","functional/backends/tensorflow/statistical/min.rst","functional/backends/tensorflow/statistical/prod.rst","functional/backends/tensorflow/statistical/sum.rst","functional/backends/tensorflow/statistical/var.rst","functional/backends/tensorflow/utility.rst","functional/backends/tensorflow/utility/all.rst","functional/backends/tensorflow/utility/any.rst","functional/backends/torch.rst","functional/backends/torch/activations.rst","functional/backends/torch/activations/gelu.rst","functional/backends/torch/activations/leaky_relu.rst","functional/backends/torch/activations/relu.rst","functional/backends/torch/activations/sigmoid.rst","functional/backends/torch/activations/softmax.rst","functional/backends/torch/activations/softplus.rst","functional/backends/torch/activations/tanh.rst","functional/backends/torch/constants.rst","functional/backends/torch/converters.rst","functional/backends/torch/converters/IvyModule.rst","functional/backends/torch/converters/to_ivy_module.rst","functional/backends/torch/creation.rst","functional/backends/torch/creation/array.rst","functional/backends/torch/creation/asarray.rst","functional/backends/torch/creation/empty.rst","functional/backends/torch/creation/empty_like.rst","functional/backends/torch/creation/eye.rst","functional/backends/torch/creation/full_like.rst","functional/backends/torch/creation/linspace.rst","functional/backends/torch/creation/logspace.rst","functional/backends/torch/creation/ones.rst","functional/backends/torch/creation/ones_like.rst","functional/backends/torch/creation/tril.rst","functional/backends/torch/creation/triu.rst","functional/backends/torch/creation/zeros.rst","functional/backends/torch/data_type.rst","functional/backends/torch/data_type/Finfo:\n\n    def __init__.rst","functional/backends/torch/data_type/broadcast_to.rst","functional/backends/torch/data_type/finfo.rst","functional/backends/torch/data_type/iinfo.rst","functional/backends/torch/data_type/result_type.rst","functional/backends/torch/device.rst","functional/backends/torch/device/Profiler.rst","functional/backends/torch/device/clear_mem_on_dev.rst","functional/backends/torch/device/dev.rst","functional/backends/torch/device/dev_from_str.rst","functional/backends/torch/device/dev_to_str.rst","functional/backends/torch/device/to_dev.rst","functional/backends/torch/device/tpu_is_available.rst","functional/backends/torch/elementwise.rst","functional/backends/torch/elementwise/abs.rst","functional/backends/torch/elementwise/acos.rst","functional/backends/torch/elementwise/acosh.rst","functional/backends/torch/elementwise/asin.rst","functional/backends/torch/elementwise/asinh.rst","functional/backends/torch/elementwise/atan.rst","functional/backends/torch/elementwise/atan2.rst","functional/backends/torch/elementwise/atanh.rst","functional/backends/torch/elementwise/bitwise_and.rst","functional/backends/torch/elementwise/bitwise_invert.rst","functional/backends/torch/elementwise/bitwise_or.rst","functional/backends/torch/elementwise/ceil.rst","functional/backends/torch/elementwise/cos.rst","functional/backends/torch/elementwise/cosh.rst","functional/backends/torch/elementwise/equal.rst","functional/backends/torch/elementwise/erf.rst","functional/backends/torch/elementwise/exp.rst","functional/backends/torch/elementwise/floor.rst","functional/backends/torch/elementwise/greater_equal.rst","functional/backends/torch/elementwise/isfinite.rst","functional/backends/torch/elementwise/isinf.rst","functional/backends/torch/elementwise/isnan.rst","functional/backends/torch/elementwise/less.rst","functional/backends/torch/elementwise/less_equal.rst","functional/backends/torch/elementwise/log.rst","functional/backends/torch/elementwise/log10.rst","functional/backends/torch/elementwise/log1p.rst","functional/backends/torch/elementwise/log2.rst","functional/backends/torch/elementwise/logaddexp.rst","functional/backends/torch/elementwise/logical_and.rst","functional/backends/torch/elementwise/logical_not.rst","functional/backends/torch/elementwise/logical_or.rst","functional/backends/torch/elementwise/negative.rst","functional/backends/torch/elementwise/not_equal.rst","functional/backends/torch/elementwise/positive.rst","functional/backends/torch/elementwise/round.rst","functional/backends/torch/elementwise/sin.rst","functional/backends/torch/elementwise/sinh.rst","functional/backends/torch/elementwise/sqrt.rst","functional/backends/torch/elementwise/square.rst","functional/backends/torch/elementwise/tan.rst","functional/backends/torch/elementwise/tanh.rst","functional/backends/torch/general.rst","functional/backends/torch/general/array_equal.rst","functional/backends/torch/general/container_types.rst","functional/backends/torch/general/copy_array.rst","functional/backends/torch/general/cumprod.rst","functional/backends/torch/general/cumsum.rst","functional/backends/torch/general/floormod.rst","functional/backends/torch/general/inplace_decrement.rst","functional/backends/torch/general/inplace_increment.rst","functional/backends/torch/general/inplace_update.rst","functional/backends/torch/general/is_array.rst","functional/backends/torch/general/scatter_flat.rst","functional/backends/torch/general/scatter_nd.rst","functional/backends/torch/general/to_list.rst","functional/backends/torch/general/to_numpy.rst","functional/backends/torch/general/to_scalar.rst","functional/backends/torch/general/unstack.rst","functional/backends/torch/gradients.rst","functional/backends/torch/gradients/execute_with_gradients.rst","functional/backends/torch/gradients/is_variable.rst","functional/backends/torch/gradients/stop_gradient.rst","functional/backends/torch/gradients/variable.rst","functional/backends/torch/gradients/variable_data.rst","functional/backends/torch/image.rst","functional/backends/torch/image/bilinear_resample.rst","functional/backends/torch/image/gradient_image.rst","functional/backends/torch/image/stack_images.rst","functional/backends/torch/layers.rst","functional/backends/torch/layers/conv1d.rst","functional/backends/torch/layers/conv1d_transpose.rst","functional/backends/torch/layers/conv2d.rst","functional/backends/torch/layers/conv2d_transpose.rst","functional/backends/torch/layers/conv3d.rst","functional/backends/torch/layers/conv3d_transpose.rst","functional/backends/torch/layers/depthwise_conv2d.rst","functional/backends/torch/linear_algebra.rst","functional/backends/torch/linear_algebra/cholesky.rst","functional/backends/torch/linear_algebra/det.rst","functional/backends/torch/linear_algebra/diagonal.rst","functional/backends/torch/linear_algebra/eigvalsh.rst","functional/backends/torch/linear_algebra/inv.rst","functional/backends/torch/linear_algebra/matmul.rst","functional/backends/torch/linear_algebra/matrix_norm.rst","functional/backends/torch/linear_algebra/matrix_transpose.rst","functional/backends/torch/linear_algebra/pinv.rst","functional/backends/torch/linear_algebra/qr.rst","functional/backends/torch/linear_algebra/slogdet.rst","functional/backends/torch/linear_algebra/svd.rst","functional/backends/torch/linear_algebra/svdvals.rst","functional/backends/torch/linear_algebra/trace.rst","functional/backends/torch/linear_algebra/vector_norm.rst","functional/backends/torch/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/manipulation.rst","functional/backends/torch/manipulation/constant_pad.rst","functional/backends/torch/manipulation/expand_dims.rst","functional/backends/torch/manipulation/flip.rst","functional/backends/torch/manipulation/permute_dims.rst","functional/backends/torch/manipulation/repeat.rst","functional/backends/torch/manipulation/split.rst","functional/backends/torch/manipulation/swapaxes.rst","functional/backends/torch/manipulation/tile.rst","functional/backends/torch/manipulation/zero_pad.rst","functional/backends/torch/old.rst","functional/backends/torch/old/general.rst","functional/backends/torch/old/general/abs.rst","functional/backends/torch/old/general/arange.rst","functional/backends/torch/old/general/argmin.rst","functional/backends/torch/old/general/broadcast_to.rst","functional/backends/torch/old/general/cast.rst","functional/backends/torch/old/general/clip.rst","functional/backends/torch/old/general/compile.rst","functional/backends/torch/old/general/concatenate.rst","functional/backends/torch/old/general/cross.rst","functional/backends/torch/old/general/current_framework_str.rst","functional/backends/torch/old/general/dtype.rst","functional/backends/torch/old/general/dtype_bits.rst","functional/backends/torch/old/general/dtype_from_str.rst","functional/backends/torch/old/general/dtype_to_str.rst","functional/backends/torch/old/general/full.rst","functional/backends/torch/old/general/gather.rst","functional/backends/torch/old/general/gather_nd.rst","functional/backends/torch/old/general/get_num_dims.rst","functional/backends/torch/old/general/identity.rst","functional/backends/torch/old/general/indices_where.rst","functional/backends/torch/old/general/linear_resample.rst","functional/backends/torch/old/general/maximum.rst","functional/backends/torch/old/general/meshgrid.rst","functional/backends/torch/old/general/minimum.rst","functional/backends/torch/old/general/multiprocessing.rst","functional/backends/torch/old/general/one_hot.rst","functional/backends/torch/old/general/reshape.rst","functional/backends/torch/old/general/shape.rst","functional/backends/torch/old/general/squeeze.rst","functional/backends/torch/old/general/stack.rst","functional/backends/torch/old/general/transpose.rst","functional/backends/torch/old/general/where.rst","functional/backends/torch/old/general/zeros_like.rst","functional/backends/torch/old/linear_algebra.rst","functional/backends/torch/old/reductions.rst","functional/backends/torch/random.rst","functional/backends/torch/random/multinomial.rst","functional/backends/torch/random/randint.rst","functional/backends/torch/random/random_normal.rst","functional/backends/torch/random/random_uniform.rst","functional/backends/torch/random/seed.rst","functional/backends/torch/random/shuffle.rst","functional/backends/torch/searching.rst","functional/backends/torch/searching/argmax.rst","functional/backends/torch/set.rst","functional/backends/torch/sorting.rst","functional/backends/torch/sorting/argsort.rst","functional/backends/torch/statistical.rst","functional/backends/torch/statistical/einsum.rst","functional/backends/torch/statistical/max.rst","functional/backends/torch/statistical/mean.rst","functional/backends/torch/statistical/min.rst","functional/backends/torch/statistical/prod.rst","functional/backends/torch/statistical/sum.rst","functional/backends/torch/statistical/var.rst","functional/backends/torch/utility.rst","functional/backends/torch/utility/all.rst","functional/backends/torch/utility/any.rst","functional/ivy.rst","functional/ivy/activations.rst","functional/ivy/activations/gelu.rst","functional/ivy/activations/leaky_relu.rst","functional/ivy/activations/relu.rst","functional/ivy/activations/sigmoid.rst","functional/ivy/activations/softmax.rst","functional/ivy/activations/softplus.rst","functional/ivy/activations/tanh.rst","functional/ivy/compilation.rst","functional/ivy/compilation/compile.rst","functional/ivy/constants.rst","functional/ivy/creation.rst","functional/ivy/creation/array.rst","functional/ivy/creation/asarray.rst","functional/ivy/creation/empty.rst","functional/ivy/creation/empty_like.rst","functional/ivy/creation/eye.rst","functional/ivy/creation/full_like.rst","functional/ivy/creation/linspace.rst","functional/ivy/creation/logspace.rst","functional/ivy/creation/ones.rst","functional/ivy/creation/ones_like.rst","functional/ivy/creation/tril.rst","functional/ivy/creation/triu.rst","functional/ivy/creation/zeros.rst","functional/ivy/data_type.rst","functional/ivy/data_type/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/data_type/broadcast_to.rst","functional/ivy/data_type/cast.rst","functional/ivy/data_type/closest_valid_dtype.rst","functional/ivy/data_type/convert_dtype.rst","functional/ivy/data_type/default_dtype.rst","functional/ivy/data_type/default_float_dtype.rst","functional/ivy/data_type/default_int_dtype.rst","functional/ivy/data_type/dtype.rst","functional/ivy/data_type/dtype_bits.rst","functional/ivy/data_type/dtype_from_str.rst","functional/ivy/data_type/dtype_to_str.rst","functional/ivy/data_type/finfo.rst","functional/ivy/data_type/iinfo.rst","functional/ivy/data_type/invalid_dtype.rst","functional/ivy/data_type/is_float_dtype.rst","functional/ivy/data_type/is_int_dtype.rst","functional/ivy/data_type/result_type.rst","functional/ivy/data_type/set_default_dtype.rst","functional/ivy/data_type/set_default_float_dtype.rst","functional/ivy/data_type/set_default_int_dtype.rst","functional/ivy/data_type/unset_default_dtype.rst","functional/ivy/data_type/unset_default_float_dtype.rst","functional/ivy/data_type/unset_default_int_dtype.rst","functional/ivy/data_type/valid_dtype.rst","functional/ivy/device.rst","functional/ivy/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/device/DevClonedItem.rst","functional/ivy/device/DevClonedIter.rst","functional/ivy/device/DevClonedNest.rst","functional/ivy/device/DevDistItem.rst","functional/ivy/device/DevDistIter.rst","functional/ivy/device/DevDistNest.rst","functional/ivy/device/DevManager:\n\n    def __init__.rst","functional/ivy/device/DevMapper.rst","functional/ivy/device/DevMapperMultiProc.rst","functional/ivy/device/MultiDev:\n\n    def __init__.rst","functional/ivy/device/MultiDevItem.rst","functional/ivy/device/MultiDevIter.rst","functional/ivy/device/MultiDevNest.rst","functional/ivy/device/Profiler.rst","functional/ivy/device/clear_mem_on_dev.rst","functional/ivy/device/default_device.rst","functional/ivy/device/dev.rst","functional/ivy/device/dev_clone.rst","functional/ivy/device/dev_clone_array.rst","functional/ivy/device/dev_clone_iter.rst","functional/ivy/device/dev_clone_nest.rst","functional/ivy/device/dev_dist.rst","functional/ivy/device/dev_dist_array.rst","functional/ivy/device/dev_dist_iter.rst","functional/ivy/device/dev_dist_nest.rst","functional/ivy/device/dev_from_str.rst","functional/ivy/device/dev_to_str.rst","functional/ivy/device/dev_unify.rst","functional/ivy/device/dev_unify_array.rst","functional/ivy/device/dev_unify_iter.rst","functional/ivy/device/dev_unify_nest.rst","functional/ivy/device/dev_util.rst","functional/ivy/device/get_all_arrays_on_dev.rst","functional/ivy/device/gpu_is_available.rst","functional/ivy/device/num_arrays_on_dev.rst","functional/ivy/device/num_cpu_cores.rst","functional/ivy/device/num_gpus.rst","functional/ivy/device/percent_used_mem_on_dev.rst","functional/ivy/device/print_all_arrays_on_dev.rst","functional/ivy/device/set_default_device.rst","functional/ivy/device/set_split_factor.rst","functional/ivy/device/split_factor.rst","functional/ivy/device/split_func_call.rst","functional/ivy/device/to_dev.rst","functional/ivy/device/total_mem_on_dev.rst","functional/ivy/device/tpu_is_available.rst","functional/ivy/device/unset_default_device.rst","functional/ivy/device/used_mem_on_dev.rst","functional/ivy/elementwise.rst","functional/ivy/elementwise/abs.rst","functional/ivy/elementwise/acos.rst","functional/ivy/elementwise/acosh.rst","functional/ivy/elementwise/asin.rst","functional/ivy/elementwise/asinh.rst","functional/ivy/elementwise/atan.rst","functional/ivy/elementwise/atan2.rst","functional/ivy/elementwise/atanh.rst","functional/ivy/elementwise/bitwise_and.rst","functional/ivy/elementwise/bitwise_invert.rst","functional/ivy/elementwise/bitwise_or.rst","functional/ivy/elementwise/ceil.rst","functional/ivy/elementwise/cos.rst","functional/ivy/elementwise/cosh.rst","functional/ivy/elementwise/divide.rst","functional/ivy/elementwise/erf.rst","functional/ivy/elementwise/exp.rst","functional/ivy/elementwise/floor.rst","functional/ivy/elementwise/greater_equal.rst","functional/ivy/elementwise/isfinite.rst","functional/ivy/elementwise/isinf.rst","functional/ivy/elementwise/isnan.rst","functional/ivy/elementwise/less.rst","functional/ivy/elementwise/less_equal.rst","functional/ivy/elementwise/log.rst","functional/ivy/elementwise/log10.rst","functional/ivy/elementwise/log1p.rst","functional/ivy/elementwise/log2.rst","functional/ivy/elementwise/logaddexp.rst","functional/ivy/elementwise/logical_and.rst","functional/ivy/elementwise/logical_not.rst","functional/ivy/elementwise/logical_or.rst","functional/ivy/elementwise/negative.rst","functional/ivy/elementwise/not_equal.rst","functional/ivy/elementwise/positive.rst","functional/ivy/elementwise/round.rst","functional/ivy/elementwise/sin.rst","functional/ivy/elementwise/sinh.rst","functional/ivy/elementwise/sqrt.rst","functional/ivy/elementwise/square.rst","functional/ivy/elementwise/tan.rst","functional/ivy/elementwise/tanh.rst","functional/ivy/general.rst","functional/ivy/general/all_equal.rst","functional/ivy/general/arg_names.rst","functional/ivy/general/array_equal.rst","functional/ivy/general/arrays_equal.rst","functional/ivy/general/assert_supports_inplace.rst","functional/ivy/general/cache_fn.rst","functional/ivy/general/clip_matrix_norm.rst","functional/ivy/general/clip_vector_norm.rst","functional/ivy/general/container_types.rst","functional/ivy/general/copy_array.rst","functional/ivy/general/cumprod.rst","functional/ivy/general/cumsum.rst","functional/ivy/general/current_framework_str.rst","functional/ivy/general/default.rst","functional/ivy/general/einops_rearrange.rst","functional/ivy/general/einops_reduce.rst","functional/ivy/general/einops_repeat.rst","functional/ivy/general/exists.rst","functional/ivy/general/floormod.rst","functional/ivy/general/fourier_encode.rst","functional/ivy/general/get_all_arrays_in_memory.rst","functional/ivy/general/get_min_base.rst","functional/ivy/general/get_min_denominator.rst","functional/ivy/general/get_referrers_recursive.rst","functional/ivy/general/has_nans.rst","functional/ivy/general/inplace_arrays_supported.rst","functional/ivy/general/inplace_decrement.rst","functional/ivy/general/inplace_increment.rst","functional/ivy/general/inplace_update.rst","functional/ivy/general/inplace_variables_supported.rst","functional/ivy/general/is_array.rst","functional/ivy/general/match_kwargs.rst","functional/ivy/general/num_arrays_in_memory.rst","functional/ivy/general/print_all_arrays_in_memory.rst","functional/ivy/general/queue_timeout.rst","functional/ivy/general/scatter_flat.rst","functional/ivy/general/scatter_nd.rst","functional/ivy/general/set_min_base.rst","functional/ivy/general/set_min_denominator.rst","functional/ivy/general/set_queue_timeout.rst","functional/ivy/general/set_tmp_dir.rst","functional/ivy/general/shape_to_tuple.rst","functional/ivy/general/stable_divide.rst","functional/ivy/general/stable_pow.rst","functional/ivy/general/supports_inplace.rst","functional/ivy/general/tmp_dir.rst","functional/ivy/general/to_list.rst","functional/ivy/general/to_numpy.rst","functional/ivy/general/to_scalar.rst","functional/ivy/general/try_else_none.rst","functional/ivy/general/unstack.rst","functional/ivy/general/value_is_nan.rst","functional/ivy/gradients.rst","functional/ivy/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/gradients/adam_step.rst","functional/ivy/gradients/adam_update.rst","functional/ivy/gradients/execute_with_gradients.rst","functional/ivy/gradients/gradient_descent_update.rst","functional/ivy/gradients/is_variable.rst","functional/ivy/gradients/lamb_update.rst","functional/ivy/gradients/lars_update.rst","functional/ivy/gradients/optimizer_update.rst","functional/ivy/gradients/set_with_grads.rst","functional/ivy/gradients/stop_gradient.rst","functional/ivy/gradients/unset_with_grads.rst","functional/ivy/gradients/variable.rst","functional/ivy/gradients/variable_data.rst","functional/ivy/gradients/with_grads.rst","functional/ivy/image.rst","functional/ivy/image/bilinear_resample.rst","functional/ivy/image/float_img_to_uint8_img.rst","functional/ivy/image/gradient_image.rst","functional/ivy/image/random_crop.rst","functional/ivy/image/stack_images.rst","functional/ivy/image/uint8_img_to_float_img.rst","functional/ivy/layers.rst","functional/ivy/layers/conv1d.rst","functional/ivy/layers/conv1d_transpose.rst","functional/ivy/layers/conv2d.rst","functional/ivy/layers/conv2d_transpose.rst","functional/ivy/layers/conv3d.rst","functional/ivy/layers/conv3d_transpose.rst","functional/ivy/layers/depthwise_conv2d.rst","functional/ivy/layers/dropout.rst","functional/ivy/layers/linear.rst","functional/ivy/layers/lstm_update.rst","functional/ivy/layers/multi_head_attention.rst","functional/ivy/layers/scaled_dot_product_attention.rst","functional/ivy/linear_algebra.rst","functional/ivy/linear_algebra/cholesky.rst","functional/ivy/linear_algebra/det.rst","functional/ivy/linear_algebra/diagonal.rst","functional/ivy/linear_algebra/eigvalsh.rst","functional/ivy/linear_algebra/inv.rst","functional/ivy/linear_algebra/matmul.rst","functional/ivy/linear_algebra/matrix_norm.rst","functional/ivy/linear_algebra/matrix_transpose.rst","functional/ivy/linear_algebra/pinv.rst","functional/ivy/linear_algebra/qr.rst","functional/ivy/linear_algebra/slodget.rst","functional/ivy/linear_algebra/svd.rst","functional/ivy/linear_algebra/svdvals.rst","functional/ivy/linear_algebra/trace.rst","functional/ivy/linear_algebra/vector_norm.rst","functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/ivy/losses.rst","functional/ivy/losses/binary_cross_entropy.rst","functional/ivy/losses/cross_entropy.rst","functional/ivy/losses/sparse_cross_entropy.rst","functional/ivy/manipulation.rst","functional/ivy/manipulation/constant_pad.rst","functional/ivy/manipulation/expand_dims.rst","functional/ivy/manipulation/flip.rst","functional/ivy/manipulation/permute_dims.rst","functional/ivy/manipulation/repeat.rst","functional/ivy/manipulation/split.rst","functional/ivy/manipulation/swapaxes.rst","functional/ivy/manipulation/tile.rst","functional/ivy/manipulation/zero_pad.rst","functional/ivy/meta.rst","functional/ivy/meta/fomaml_step.rst","functional/ivy/meta/maml_step.rst","functional/ivy/meta/reptile_step.rst","functional/ivy/nest.rst","functional/ivy/nest/all_nested_indices.rst","functional/ivy/nest/copy_nest.rst","functional/ivy/nest/index_nest.rst","functional/ivy/nest/map.rst","functional/ivy/nest/map_nest_at_index.rst","functional/ivy/nest/map_nest_at_indices.rst","functional/ivy/nest/multi_index_nest.rst","functional/ivy/nest/nested_indices_where.rst","functional/ivy/nest/nested_map.rst","functional/ivy/nest/set_nest_at_index.rst","functional/ivy/nest/set_nest_at_indices.rst","functional/ivy/norms.rst","functional/ivy/norms/layer_norm.rst","functional/ivy/old.rst","functional/ivy/old/dtype.rst","functional/ivy/old/general.rst","functional/ivy/old/general/abs.rst","functional/ivy/old/general/arange.rst","functional/ivy/old/general/argmin.rst","functional/ivy/old/general/broadcast_to.rst","functional/ivy/old/general/clip.rst","functional/ivy/old/general/concatenate.rst","functional/ivy/old/general/cross.rst","functional/ivy/old/general/equal.rst","functional/ivy/old/general/floor.rst","functional/ivy/old/general/full.rst","functional/ivy/old/general/gather.rst","functional/ivy/old/general/gather_nd.rst","functional/ivy/old/general/get_num_dims.rst","functional/ivy/old/general/identity.rst","functional/ivy/old/general/indices_where.rst","functional/ivy/old/general/linear_resample.rst","functional/ivy/old/general/matmul.rst","functional/ivy/old/general/maximum.rst","functional/ivy/old/general/meshgrid.rst","functional/ivy/old/general/minimum.rst","functional/ivy/old/general/multiprocessing.rst","functional/ivy/old/general/one_hot.rst","functional/ivy/old/general/ones.rst","functional/ivy/old/general/reshape.rst","functional/ivy/old/general/shape.rst","functional/ivy/old/general/squeeze.rst","functional/ivy/old/general/stack.rst","functional/ivy/old/general/transpose.rst","functional/ivy/old/general/where.rst","functional/ivy/old/general/zeros_like.rst","functional/ivy/old/linalg.rst","functional/ivy/old/reductions.rst","functional/ivy/random.rst","functional/ivy/random/multinomial.rst","functional/ivy/random/randint.rst","functional/ivy/random/random_normal.rst","functional/ivy/random/random_uniform.rst","functional/ivy/random/seed.rst","functional/ivy/random/shuffle.rst","functional/ivy/searching.rst","functional/ivy/searching/argmax.rst","functional/ivy/set.rst","functional/ivy/sorting.rst","functional/ivy/sorting/argsort.rst","functional/ivy/statistical.rst","functional/ivy/statistical/einsum.rst","functional/ivy/statistical/max.rst","functional/ivy/statistical/mean.rst","functional/ivy/statistical/min.rst","functional/ivy/statistical/prod.rst","functional/ivy/statistical/std.rst","functional/ivy/statistical/sum.rst","functional/ivy/statistical/var.rst","functional/ivy/utility.rst","functional/ivy/utility/all.rst","functional/ivy/utility/any.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{"var":[41,3,1,""],__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],mean:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prod:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_min:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],std:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],sum:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[896,0,0,"-"]},"ivy.functional.backends.numpy":{activations:[387,0,0,"-"],constants:[390,0,0,"-"],creation:[391,0,0,"-"],data_type:[405,0,0,"-"],device:[411,0,0,"-"],general:[450,0,0,"-"]},"ivy.functional.backends.numpy.activations":{gelu:[388,2,1,""],leaky_relu:[387,2,1,""],relu:[387,2,1,""],sigmoid:[387,2,1,""],softmax:[389,2,1,""],softplus:[387,2,1,""]},"ivy.functional.backends.numpy.creation":{array:[392,2,1,""],asarray:[393,2,1,""],empty:[394,2,1,""],empty_like:[395,2,1,""],eye:[396,2,1,""],full_like:[397,2,1,""],linspace:[398,2,1,""],logspace:[399,2,1,""],ones:[400,2,1,""],ones_like:[401,2,1,""],tril:[402,2,1,""],triu:[403,2,1,""],zeros:[404,2,1,""]},"ivy.functional.backends.numpy.data_type":{Finfo:[405,1,1,""],broadcast_to:[407,2,1,""],finfo:[408,2,1,""],iinfo:[409,2,1,""],result_type:[410,2,1,""]},"ivy.functional.backends.numpy.data_type.Finfo":{__init__:[405,3,1,""],bits:[405,3,1,""],eps:[405,3,1,""],max:[405,3,1,""],min:[405,3,1,""],smallest_normal:[405,3,1,""]},"ivy.functional.backends.numpy.device":{Profiler:[412,1,1,""],clear_mem_on_dev:[411,2,1,""],dev:[411,2,1,""],dev_from_str:[411,2,1,""],dev_to_str:[411,2,1,""],gpu_is_available:[411,2,1,""],num_gpus:[411,2,1,""],to_dev:[411,2,1,""],tpu_is_available:[411,2,1,""]},"ivy.functional.backends.numpy.device.Profiler":{__init__:[412,3,1,""],start:[412,3,1,""],stop:[412,3,1,""]},"ivy.functional.backends.numpy.general":{container_types:[450,2,1,""],copy_array:[450,2,1,""],cumprod:[451,2,1,""],floormod:[450,2,1,""],inplace_arrays_supported:[450,2,1,""],inplace_decrement:[452,2,1,""],inplace_increment:[453,2,1,""],inplace_update:[454,2,1,""],inplace_variables_supported:[450,2,1,""],is_array:[455,2,1,""],scatter_flat:[456,2,1,""],scatter_nd:[457,2,1,""],to_list:[450,2,1,""],to_numpy:[450,2,1,""],to_scalar:[450,2,1,""],unstack:[458,2,1,""]},"ivy.functional.backends.numpy.old":{general:[497,0,0,"-"],linear_algebra:[517,0,0,"-"]},"ivy.functional.backends.numpy.old.general":{abs:[497,2,1,""],arange:[498,2,1,""],argmin:[499,2,1,""],astype:[497,2,1,""],cast:[500,2,1,""],clip:[497,2,1,""],compile:[501,2,1,""],concatenate:[502,2,1,""],current_framework_str:[497,2,1,""],dtype:[503,2,1,""],dtype_bits:[504,2,1,""],dtype_from_str:[505,2,1,""],dtype_to_str:[506,2,1,""],full:[507,2,1,""],gather:[508,2,1,""],gather_nd:[509,2,1,""],get_num_dims:[497,2,1,""],identity:[510,2,1,""],indices_where:[511,2,1,""],linear_resample:[512,2,1,""],meshgrid:[497,2,1,""],multiprocessing:[497,2,1,""],one_hot:[513,2,1,""],shape:[497,2,1,""],squeeze:[514,2,1,""],transpose:[515,2,1,""],where:[497,2,1,""],zeros_like:[516,2,1,""]},"ivy.functional.ivy":{activations:[897,0,0,"-"],compilation:[905,0,0,"-"],constants:[907,0,0,"-"],creation:[908,0,0,"-"],data_type:[922,0,0,"-"],device:[950,0,0,"-"],elementwise:[1000,0,0,"-"],general:[1043,0,0,"-"],gradients:[1096,0,0,"-"],image:[1112,0,0,"-"],layers:[1119,0,0,"-"],linear_algebra:[1132,0,0,"-"],losses:[1149,0,0,"-"],manipulation:[1153,0,0,"-"],meta:[1163,0,0,"-"],nest:[1167,0,0,"-"],norms:[1179,0,0,"-"],old:[1181,0,0,"-"],random:[1216,0,0,"-"],searching:[1223,0,0,"-"],set:[1225,0,0,"-"],sorting:[1226,0,0,"-"],statistical:[1228,0,0,"-"],utility:[1237,0,0,"-"]},"ivy.functional.ivy.activations":{gelu:[898,2,1,""],leaky_relu:[899,2,1,""],relu:[900,2,1,""],sigmoid:[901,2,1,""],softmax:[902,2,1,""],softplus:[903,2,1,""],tanh:[904,2,1,""]},"ivy.functional.ivy.compilation":{compile:[906,2,1,""]},"ivy.functional.ivy.constants":{e:[907,4,1,""],nan:[907,4,1,""],pi:[907,4,1,""]},"ivy.functional.ivy.creation":{array:[909,2,1,""],asarray:[910,2,1,""],empty:[911,2,1,""],empty_like:[912,2,1,""],eye:[913,2,1,""],full_like:[914,2,1,""],linspace:[915,2,1,""],logspace:[916,2,1,""],ones:[917,2,1,""],ones_like:[918,2,1,""],tril:[919,2,1,""],triu:[920,2,1,""],zeros:[921,2,1,""]},"ivy.functional.ivy.data_type":{DefaultDtype:[922,1,1,""],DefaultFloatDtype:[922,1,1,""],DefaultIntDtype:[922,1,1,""],astype:[922,2,1,""],broadcast_to:[926,2,1,""],cast:[927,2,1,""],closest_valid_dtype:[928,2,1,""],convert_dtype:[929,2,1,""],default_dtype:[930,2,1,""],default_float_dtype:[931,2,1,""],default_int_dtype:[932,2,1,""],dtype:[933,2,1,""],dtype_bits:[934,2,1,""],dtype_from_str:[935,2,1,""],dtype_to_str:[936,2,1,""],finfo:[937,2,1,""],iinfo:[938,2,1,""],invalid_dtype:[939,2,1,""],is_float_dtype:[940,2,1,""],is_int_dtype:[941,2,1,""],result_type:[942,2,1,""],set_default_dtype:[943,2,1,""],set_default_float_dtype:[944,2,1,""],set_default_int_dtype:[945,2,1,""],unset_default_dtype:[946,2,1,""],unset_default_float_dtype:[947,2,1,""],unset_default_int_dtype:[948,2,1,""],valid_dtype:[949,2,1,""]},"ivy.functional.ivy.data_type.DefaultDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.data_type.DefaultFloatDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.data_type.DefaultIntDtype":{__init__:[922,3,1,""]},"ivy.functional.ivy.device":{DefaultDevice:[950,1,1,""],DevClonedItem:[952,1,1,""],DevClonedIter:[953,1,1,""],DevClonedNest:[954,1,1,""],DevDistItem:[955,1,1,""],DevDistIter:[956,1,1,""],DevDistNest:[957,1,1,""],DevManager:[950,1,1,""],DevMapper:[959,1,1,""],DevMapperMultiProc:[960,1,1,""],MultiDev:[950,1,1,""],MultiDevItem:[962,1,1,""],MultiDevIter:[963,1,1,""],MultiDevNest:[964,1,1,""],Profiler:[965,1,1,""],clear_mem_on_dev:[966,2,1,""],default_device:[967,2,1,""],dev:[968,2,1,""],dev_clone:[969,2,1,""],dev_clone_array:[970,2,1,""],dev_clone_iter:[971,2,1,""],dev_clone_nest:[972,2,1,""],dev_dist:[973,2,1,""],dev_dist_array:[974,2,1,""],dev_dist_iter:[975,2,1,""],dev_dist_nest:[976,2,1,""],dev_from_str:[977,2,1,""],dev_to_str:[978,2,1,""],dev_unify:[979,2,1,""],dev_unify_array:[980,2,1,""],dev_unify_iter:[981,2,1,""],dev_unify_nest:[982,2,1,""],dev_util:[983,2,1,""],get_all_arrays_on_dev:[984,2,1,""],gpu_is_available:[985,2,1,""],num_arrays_on_dev:[986,2,1,""],num_cpu_cores:[987,2,1,""],num_gpus:[988,2,1,""],percent_used_mem_on_dev:[989,2,1,""],print_all_arrays_on_dev:[990,2,1,""],set_default_device:[991,2,1,""],set_split_factor:[992,2,1,""],split_factor:[993,2,1,""],split_func_call:[994,2,1,""],to_dev:[995,2,1,""],total_mem_on_dev:[996,2,1,""],tpu_is_available:[997,2,1,""],unset_default_device:[998,2,1,""],used_mem_on_dev:[999,2,1,""]},"ivy.functional.ivy.device.DefaultDevice":{__init__:[950,3,1,""]},"ivy.functional.ivy.device.DevManager":{__init__:[950,3,1,""],da_tune_step:[950,3,1,""],dim_size:[950,3,1,""],ds_tune_step:[950,3,1,""],map:[950,3,1,""],repeated_config_check:[950,3,1,""],tune_step:[950,3,1,""],tuned:[950,3,1,""]},"ivy.functional.ivy.device.DevMapper":{__init__:[959,3,1,""],map:[959,3,1,""]},"ivy.functional.ivy.device.DevMapperMultiProc":{__init__:[960,3,1,""]},"ivy.functional.ivy.device.MultiDev":{__init__:[950,3,1,""]},"ivy.functional.ivy.device.MultiDevItem":{__init__:[962,3,1,""],items:[962,3,1,""],keys:[962,3,1,""],shape:[962,3,1,""],values:[962,3,1,""]},"ivy.functional.ivy.device.MultiDevIter":{__init__:[963,3,1,""],at_dev:[963,3,1,""],at_devs:[963,3,1,""]},"ivy.functional.ivy.device.MultiDevNest":{__init__:[964,3,1,""],at_dev:[964,3,1,""]},"ivy.functional.ivy.device.Profiler":{__init__:[965,3,1,""],start:[965,3,1,""],stop:[965,3,1,""]},"ivy.functional.ivy.elementwise":{abs:[1001,2,1,""],acos:[1002,2,1,""],acosh:[1003,2,1,""],asin:[1004,2,1,""],asinh:[1005,2,1,""],atan2:[1007,2,1,""],atan:[1006,2,1,""],atanh:[1008,2,1,""],bitwise_and:[1009,2,1,""],bitwise_invert:[1010,2,1,""],bitwise_or:[1011,2,1,""],ceil:[1012,2,1,""],cos:[1013,2,1,""],cosh:[1014,2,1,""],divide:[1015,2,1,""],erf:[1016,2,1,""],exp:[1017,2,1,""],floor:[1018,2,1,""],greater_equal:[1019,2,1,""],isfinite:[1020,2,1,""],isinf:[1021,2,1,""],isnan:[1022,2,1,""],less:[1023,2,1,""],less_equal:[1024,2,1,""],log10:[1026,2,1,""],log1p:[1027,2,1,""],log2:[1028,2,1,""],log:[1025,2,1,""],logaddexp:[1029,2,1,""],logical_and:[1030,2,1,""],logical_not:[1031,2,1,""],logical_or:[1032,2,1,""],negative:[1033,2,1,""],not_equal:[1034,2,1,""],positive:[1035,2,1,""],round:[1036,2,1,""],sin:[1037,2,1,""],sinh:[1038,2,1,""],sqrt:[1039,2,1,""],square:[1040,2,1,""],tan:[1041,2,1,""],tanh:[1042,2,1,""]},"ivy.functional.ivy.general":{"default":[1057,2,1,""],all_equal:[1044,2,1,""],arg_names:[1045,2,1,""],array_equal:[1046,2,1,""],arrays_equal:[1047,2,1,""],assert_supports_inplace:[1048,2,1,""],cache_fn:[1049,2,1,""],clip_matrix_norm:[1050,2,1,""],clip_vector_norm:[1051,2,1,""],container_types:[1052,2,1,""],copy_array:[1053,2,1,""],cumprod:[1054,2,1,""],cumsum:[1055,2,1,""],current_framework_str:[1056,2,1,""],einops_rearrange:[1058,2,1,""],einops_reduce:[1059,2,1,""],einops_repeat:[1060,2,1,""],exists:[1061,2,1,""],floormod:[1062,2,1,""],fourier_encode:[1063,2,1,""],get_all_arrays_in_memory:[1064,2,1,""],get_min_base:[1065,2,1,""],get_min_denominator:[1066,2,1,""],get_referrers_recursive:[1067,2,1,""],has_nans:[1068,2,1,""],inplace_arrays_supported:[1069,2,1,""],inplace_decrement:[1070,2,1,""],inplace_increment:[1071,2,1,""],inplace_update:[1072,2,1,""],inplace_variables_supported:[1073,2,1,""],is_array:[1074,2,1,""],match_kwargs:[1075,2,1,""],num_arrays_in_memory:[1076,2,1,""],print_all_arrays_in_memory:[1077,2,1,""],queue_timeout:[1078,2,1,""],scatter_flat:[1079,2,1,""],scatter_nd:[1080,2,1,""],set_min_base:[1081,2,1,""],set_min_denominator:[1082,2,1,""],set_queue_timeout:[1083,2,1,""],set_tmp_dir:[1084,2,1,""],shape_to_tuple:[1085,2,1,""],stable_divide:[1086,2,1,""],stable_pow:[1087,2,1,""],supports_inplace:[1088,2,1,""],tmp_dir:[1089,2,1,""],to_list:[1090,2,1,""],to_numpy:[1091,2,1,""],to_scalar:[1092,2,1,""],try_else_none:[1093,2,1,""],unstack:[1094,2,1,""],value_is_nan:[1095,2,1,""]},"ivy.functional.ivy.gradients":{GradientTracking:[1096,1,1,""],adam_step:[1098,2,1,""],adam_update:[1099,2,1,""],execute_with_gradients:[1100,2,1,""],gradient_descent_update:[1101,2,1,""],is_variable:[1102,2,1,""],lamb_update:[1103,2,1,""],lars_update:[1104,2,1,""],optimizer_update:[1105,2,1,""],set_with_grads:[1106,2,1,""],stop_gradient:[1107,2,1,""],unset_with_grads:[1108,2,1,""],variable:[1109,2,1,""],variable_data:[1110,2,1,""],with_grads:[1111,2,1,""]},"ivy.functional.ivy.gradients.GradientTracking":{__init__:[1096,3,1,""]},"ivy.functional.ivy.image":{bilinear_resample:[1113,2,1,""],float_img_to_uint8_img:[1114,2,1,""],gradient_image:[1115,2,1,""],random_crop:[1116,2,1,""],stack_images:[1117,2,1,""],uint8_img_to_float_img:[1118,2,1,""]},"ivy.functional.ivy.layers":{conv1d:[1120,2,1,""],conv1d_transpose:[1121,2,1,""],conv2d:[1122,2,1,""],conv2d_transpose:[1123,2,1,""],conv3d:[1124,2,1,""],conv3d_transpose:[1125,2,1,""],depthwise_conv2d:[1126,2,1,""],dropout:[1127,2,1,""],linear:[1128,2,1,""],lstm_update:[1129,2,1,""],multi_head_attention:[1130,2,1,""],scaled_dot_product_attention:[1131,2,1,""]},"ivy.functional.ivy.linear_algebra":{cholesky:[1133,2,1,""],det:[1134,2,1,""],diagonal:[1135,2,1,""],eigvalsh:[1136,2,1,""],inv:[1137,2,1,""],matmul:[1138,2,1,""],matrix_norm:[1139,2,1,""],matrix_transpose:[1140,2,1,""],pinv:[1141,2,1,""],qr:[1142,2,1,""],slodget:[1143,2,1,""],svd:[1144,2,1,""],svdvals:[1145,2,1,""],trace:[1146,2,1,""],vector_norm:[1147,2,1,""],vector_to_skew_symmetric_matrix:[1148,2,1,""]},"ivy.functional.ivy.losses":{binary_cross_entropy:[1150,2,1,""],cross_entropy:[1151,2,1,""],sparse_cross_entropy:[1152,2,1,""]},"ivy.functional.ivy.manipulation":{constant_pad:[1154,2,1,""],expand_dims:[1155,2,1,""],flip:[1156,2,1,""],permute_dims:[1157,2,1,""],repeat:[1158,2,1,""],split:[1159,2,1,""],swapaxes:[1160,2,1,""],tile:[1161,2,1,""],zero_pad:[1162,2,1,""]},"ivy.functional.ivy.meta":{fomaml_step:[1164,2,1,""],maml_step:[1165,2,1,""],reptile_step:[1166,2,1,""]},"ivy.functional.ivy.nest":{all_nested_indices:[1168,2,1,""],copy_nest:[1169,2,1,""],index_nest:[1170,2,1,""],map:[1171,2,1,""],map_nest_at_index:[1172,2,1,""],map_nest_at_indices:[1173,2,1,""],multi_index_nest:[1174,2,1,""],nested_indices_where:[1175,2,1,""],nested_map:[1176,2,1,""],set_nest_at_index:[1177,2,1,""],set_nest_at_indices:[1178,2,1,""]},"ivy.functional.ivy.norms":{layer_norm:[1180,2,1,""]},"ivy.functional.ivy.old":{dtype:[1182,0,0,"-"],general:[1183,0,0,"-"],linalg:[1214,0,0,"-"],reductions:[1215,0,0,"-"]},"ivy.functional.ivy.old.general":{abs:[1184,2,1,""],arange:[1185,2,1,""],argmin:[1186,2,1,""],broadcast_to:[1187,2,1,""],clip:[1188,2,1,""],concatenate:[1189,2,1,""],cross:[1190,2,1,""],equal:[1191,2,1,""],floor:[1192,2,1,""],full:[1193,2,1,""],gather:[1194,2,1,""],gather_nd:[1195,2,1,""],get_num_dims:[1196,2,1,""],identity:[1197,2,1,""],indices_where:[1198,2,1,""],linear_resample:[1199,2,1,""],matmul:[1200,2,1,""],maximum:[1201,2,1,""],meshgrid:[1202,2,1,""],minimum:[1203,2,1,""],multiprocessing:[1204,2,1,""],one_hot:[1205,2,1,""],ones:[1206,2,1,""],reshape:[1207,2,1,""],shape:[1208,2,1,""],squeeze:[1209,2,1,""],stack:[1210,2,1,""],transpose:[1211,2,1,""],where:[1212,2,1,""],zeros_like:[1213,2,1,""]},"ivy.functional.ivy.random":{multinomial:[1217,2,1,""],randint:[1218,2,1,""],random_normal:[1219,2,1,""],random_uniform:[1220,2,1,""],seed:[1221,2,1,""],shuffle:[1222,2,1,""]},"ivy.functional.ivy.searching":{argmax:[1224,2,1,""]},"ivy.functional.ivy.sorting":{argsort:[1227,2,1,""]},"ivy.functional.ivy.statistical":{"var":[1236,2,1,""],einsum:[1229,2,1,""],max:[1230,2,1,""],mean:[1231,2,1,""],min:[1232,2,1,""],prod:[1233,2,1,""],std:[1234,2,1,""],sum:[1235,2,1,""]},"ivy.functional.ivy.utility":{all:[1238,2,1,""],any:[1239,2,1,""]},"ivy.stateful":{activations:[1243,0,0,"-"],converters:[1246,0,0,"-"],initializers:[1248,0,0,"-"],layers:[1257,0,0,"-"],module:[1269,0,0,"-"],norms:[1271,0,0,"-"],optimizers:[1273,0,0,"-"],sequential:[1279,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1244,1,1,""],GELU:[1245,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1244,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1245,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1247,2,1,""]},"ivy.stateful.initializers":{Constant:[1248,1,1,""],FirstLayerSiren:[1250,1,1,""],GlorotUniform:[1251,1,1,""],KaimingNormal:[1248,1,1,""],Ones:[1253,1,1,""],Siren:[1254,1,1,""],Uniform:[1248,1,1,""],Zeros:[1256,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1248,3,1,""],create_variables:[1248,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1250,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1251,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1248,3,1,""],create_variables:[1248,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1253,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1254,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1248,3,1,""],create_variables:[1248,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1256,3,1,""]},"ivy.stateful.layers":{Conv1D:[1258,1,1,""],Conv1DTranspose:[1259,1,1,""],Conv2D:[1260,1,1,""],Conv2DTranspose:[1261,1,1,""],Conv3D:[1262,1,1,""],Conv3DTranspose:[1263,1,1,""],DepthwiseConv2D:[1264,1,1,""],Dropout:[1265,1,1,""],LSTM:[1266,1,1,""],Linear:[1267,1,1,""],MultiHeadAttention:[1268,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1258,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1259,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1260,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1261,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1262,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1263,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1264,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1265,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1266,3,1,""],get_initial_state:[1266,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1267,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1268,3,1,""]},"ivy.stateful.module":{Module:[1270,1,1,""]},"ivy.stateful.module.Module":{__init__:[1270,3,1,""],build:[1270,3,1,""],build_mode:[1270,3,1,""],built:[1270,3,1,""],check_submod_rets:[1270,3,1,""],get_mod_key:[1270,3,1,""],mod_depth:[1270,3,1,""],mod_height:[1270,3,1,""],mod_with_top_mod_key_chain:[1270,3,1,""],save_weights:[1270,3,1,""],show_mod_in_top_mod:[1270,3,1,""],show_structure:[1270,3,1,""],show_v_in_top_v:[1270,3,1,""],sub_mods:[1270,3,1,""],track_submod_call_order:[1270,3,1,""],track_submod_rets:[1270,3,1,""],v_with_top_v_key_chains:[1270,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1272,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1272,3,1,""]},"ivy.stateful.optimizers":{Adam:[1274,1,1,""],LAMB:[1275,1,1,""],LARS:[1276,1,1,""],Optimizer:[1277,1,1,""],SGD:[1278,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1274,3,1,""],set_state:[1274,3,1,""],state:[1274,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1275,3,1,""],set_state:[1275,3,1,""],state:[1275,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1276,3,1,""],set_state:[1276,3,1,""],state:[1276,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1277,3,1,""],set_state:[1277,3,1,""],step:[1277,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1278,3,1,""],set_state:[1278,3,1,""],state:[1278,3,1,""]},"ivy.stateful.sequential":{Sequential:[1280,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1280,3,1,""]},"ivy.verbosity":{cprint:[1285,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1284,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1273,1274,1275],"02886":1240,"100":[1240,1282],"141592653589793":907,"2021":1240,"2102":1240,"360":[1000,1041],"718281828459045":907,"754":[907,922,937,1000,1039],"999":[1096,1098,1099,1103,1273,1274,1275],"\u03c0":[1000,1002],"abstract":[950,965,1240,1273,1277],"boolean":[40,41,922,939,949,950,985,997,1000,1009,1010,1011,1030,1031,1032,1043,1044,1046,1047,1068,1069,1073,1074,1088,1095,1096,1102,1163,1164,1165,1183,1198],"break":43,"case":[15,18,19,40,41,42,43,950,989,996,999,1000,1001,1002,1003,1005,1012,1013,1018,1026,1028,1029,1037,1038,1039,1043,1079,1080,1132,1139,1167,1170,1174,1183,1185,1207,1228,1230,1240,1257,1268,1269,1270,1273,1277,1286],"catch":[1043,1057],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,405,411,412,922,938,950,952,953,954,955,956,957,959,960,962,963,964,965,977,978,1043,1045,1075,1096,1110,1149,1151,1152,1167,1169,1176,1240,1243,1244,1245,1246,1247,1248,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1286],"default":[15,18,19,40,41,42,43,897,898,902,905,906,908,910,911,912,913,914,916,917,918,919,920,921,922,930,931,932,933,950,959,960,967,968,972,973,974,975,976,979,980,981,982,989,992,993,994,999,1043,1044,1050,1051,1054,1055,1063,1068,1075,1078,1079,1080,1083,1086,1087,1094,1095,1096,1099,1101,1102,1103,1104,1105,1107,1111,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1135,1139,1142,1147,1149,1150,1151,1152,1153,1154,1156,1158,1159,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1179,1180,1183,1185,1186,1189,1190,1193,1194,1196,1197,1199,1202,1204,1206,1208,1211,1216,1217,1219,1220,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],"final":[40,41,43,908,915,916,1043,1063,1257,1268,1283],"float":[40,41,42,43,391,397,897,899,907,908,911,913,914,916,917,921,922,931,937,940,942,950,959,960,983,989,992,996,999,1000,1002,1003,1005,1012,1013,1015,1018,1026,1028,1029,1037,1038,1039,1043,1050,1051,1063,1065,1066,1081,1082,1083,1086,1087,1096,1098,1099,1101,1103,1104,1105,1112,1114,1118,1119,1127,1130,1131,1132,1133,1134,1136,1142,1147,1149,1150,1151,1152,1153,1154,1163,1164,1165,1166,1179,1180,1183,1185,1193,1216,1219,1220,1228,1230,1233,1235,1257,1265,1268,1271,1272,1273,1274,1275,1276,1277,1278],"function":[15,40,41,43,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,450,451,452,453,454,455,456,457,458,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1243,1244,1245,1273,1276,1277,1278,1282,1283,1286],"import":[43,1240,1283,1286],"int":[40,41,42,43,391,394,396,397,400,402,403,404,405,407,897,902,905,906,908,911,913,914,915,916,917,919,920,921,922,926,932,934,937,938,941,950,972,973,974,975,976,979,980,981,982,987,988,994,1043,1054,1055,1058,1059,1060,1063,1079,1080,1085,1094,1096,1098,1099,1103,1112,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1130,1132,1135,1139,1146,1147,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1176,1179,1180,1183,1186,1187,1189,1193,1194,1196,1197,1199,1205,1206,1207,1208,1209,1210,1211,1216,1217,1218,1220,1221,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1236,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1271,1272],"long":[43,1119,1129],"new":[40,41,43,908,911,914,917,918,921,922,927,1000,1008,1014,1027,1035,1042,1043,1058,1059,1060,1063,1079,1080,1081,1082,1086,1087,1096,1099,1101,1103,1104,1105,1112,1114,1116,1118,1153,1155,1167,1177,1178,1179,1180,1183,1184,1187,1193,1194,1195,1206,1207,1210,1216,1217,1240,1246,1247,1257,1267,1271,1272,1273,1274,1275,1276,1277,1278,1283,1286],"public":[1043,1052],"return":[15,16,17,18,19,40,41,42,43,897,898,899,900,901,902,903,904,905,906,908,909,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,939,940,941,942,949,950,959,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,985,986,988,989,993,994,995,996,997,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1068,1069,1070,1071,1072,1073,1074,1075,1076,1079,1080,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1246,1247,1257,1266,1267,1273,1277,1282,1283,1286],"short":[43,1119,1129,1240,1286],"static":[40,41,905,906],"true":[40,41,42,387,388,497,501,897,898,905,906,950,1000,1020,1021,1022,1031,1032,1043,1044,1048,1049,1061,1063,1068,1095,1096,1099,1101,1102,1103,1104,1105,1107,1119,1127,1132,1133,1139,1144,1147,1149,1150,1151,1152,1163,1164,1165,1166,1167,1168,1175,1183,1198,1212,1216,1217,1223,1224,1226,1227,1228,1230,1231,1233,1234,1236,1237,1238,1239,1257,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278],"try":[40,41,1043,1093],"var":[40,41,222,374,526,679,885,1163,1164,1165,1228,1286],"while":[40,41,42,1000,1031,1032],AND:[1000,1009,1030,1237,1238],But:1286,For:[43,1000,1001,1002,1003,1005,1012,1013,1018,1026,1028,1029,1037,1038,1039,1096,1102,1110,1183,1185,1188,1210,1228,1230,1240,1246,1247,1283,1286],Its:[1000,1006],NOT:[1000,1031],Not:907,One:[40,41,43,1043,1059,1183,1207,1216,1218,1286],Ones:[1240,1248],PRs:43,Such:[1043,1052],That:1283,The:[15,16,17,18,19,40,41,42,43,897,898,899,900,901,902,903,904,905,906,908,909,916,919,920,922,927,928,929,934,935,936,939,949,950,959,960,966,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,989,992,993,994,995,996,999,1000,1001,1002,1003,1004,1005,1006,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1031,1032,1034,1037,1038,1039,1041,1043,1046,1049,1050,1051,1053,1056,1057,1063,1070,1071,1072,1074,1079,1080,1081,1082,1083,1085,1086,1087,1095,1096,1098,1099,1101,1103,1104,1105,1107,1110,1112,1114,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1136,1139,1140,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1161,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1183,1185,1187,1189,1190,1191,1194,1195,1197,1199,1200,1202,1204,1206,1207,1209,1210,1213,1216,1217,1219,1220,1223,1224,1226,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1283,1286],There:[43,1240,1283],These:[43,1240],Use:43,Used:[1167,1168,1175,1269,1270],Using:[1240,1241,1286],With:[40,41,1132,1139,1223,1224,1228,1231,1234,1236,1240,1282,1286],__array__:[908,909],__call__:[1257,1268,1269,1270],__dict__:1283,__init__:[40,41,42,43,59,60,96,255,405,406,411,412,555,718,922,923,924,925,950,951,958,959,960,961,962,963,964,965,1096,1097,1240,1243,1244,1245,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1286],__pow__:43,_assign_vari:1282,_base:[1167,1168,1175],_cur_framework:43,_forward:[1240,1282],_get_kalman_param:1286,_get_prior:1286,_get_some_model:1286,_handle_flat_arrays_in_out:43,_index:[1167,1168,1175],_min_bas:[1043,1087,1179,1180,1271,1272],_min_denomin:[1043,1086],_model:1286,_native_wrapp:43,_paramet:1282,_step:[1273,1277],_unroll_step:1286,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,950,959,965,1269,1270,1273,1277],abil:1240,abl:[40,41],about:[922,937,938],abov:[43,908,919,920,1132,1135,1216,1218,1228,1233,1235],above_height:[40,41],abs:[108,336,413,497,567,649,731,837,1000,1132,1147,1183],absolut:[40,41,1000,1001,1132,1143,1183,1184],accept:[15,43,1000,1031,1032,1240],access:[40,41,43,1283],accord:[40,41,922,937,1043,1079,1080,1153,1154,1162,1183,1194,1211],accordingli:[1132,1147,1228,1230,1233,1237,1238,1239],accur:[59,405,411,412,922,950,962,963,964,965,1096,1248,1250,1251,1253,1254,1256],aco:[108,264,413,567,731,1000],acosh:[108,264,413,567,731,1000],across:[40,41,950,959,960,969,970,972,973,974,975,976,982,992,993,1043,1046,1047,1167,1171,1183,1186],act:43,activ:[388,389,898,899,900,901,902,903,904,1240,1244,1245],actual:1283,adam:[1096,1098,1099,1103,1240,1273,1275,1282],adam_step:1096,adam_upd:1096,adapt:[1096,1104,1273,1276],add:[40,41,43,1149,1150,1151,1152,1179,1180,1240,1271,1272,1283],added:[43,1043,1086,1087,1279,1280],adding:[43,1183,1187],addit:[40,41,43,1043,1058,1059,1060,1179,1180,1257,1267],addition:43,address:43,adher:43,adjac:[1183,1185],adopt:[43,1043,1052],affect:[1183,1185],affin:[1271,1272],after:[1000,1039,1096,1099,1100,1101,1103,1104,1105,1112,1113,1179,1180,1183,1199,1273,1274,1275,1276,1277,1278,1286],after_1:[1153,1154,1162],after_n:[1153,1154,1162],again:43,against:[40,41,1132,1138,1139,1223,1224,1228,1231,1234,1236],agnost:[43,1240,1282,1283],aim:1286,algorithm:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264,1286],align:[40,41,43,1183,1187],aliv:[950,984,986,990,1043,1064,1076,1077],all:[15,16,17,18,19,40,41,43,230,383,534,687,893,905,906,908,913,919,920,950,959,984,990,1043,1044,1046,1047,1052,1064,1077,1119,1129,1132,1147,1153,1156,1163,1164,1165,1166,1167,1168,1169,1175,1176,1183,1184,1197,1209,1216,1217,1220,1228,1231,1234,1236,1237,1240,1283,1286],all_depth:[40,41],all_equ:1043,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1167,all_tru:[40,41],alloc:[43,908,919,920,950],allow:[908,915,916,1043,1075,1269,1270],allow_dupl:[1043,1075],alon:[950,989,999,1240],along:[40,41,43,908,915,916,950,973,974,975,976,979,980,981,982,994,1043,1054,1055,1094,1132,1139,1146,1147,1153,1156,1158,1159,1161,1163,1164,1165,1166,1183,1189,1194,1199,1210,1216,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239],alongsid:[1282,1283],alpha:[387,897,899],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,950,1000,1012,1018],also:[40,41,43,1096,1099,1119,1128,1163,1164,1165,1166,1167,1168,1169,1175,1176,1183,1185,1240,1257,1267,1282],altern:1282,alwai:[40,41,43,1096,1102,1107],among:[40,41],amount:[950,996,1240],angl:[1000,1007,1038],ani:[15,16,17,18,19,40,41,43,230,383,534,687,893,905,906,908,909,910,950,952,955,959,960,962,971,972,975,976,981,1000,1019,1024,1043,1044,1057,1058,1059,1060,1061,1068,1074,1075,1086,1087,1096,1100,1167,1168,1171,1175,1176,1177,1178,1183,1185,1191,1216,1220,1237,1240,1246,1247,1269,1270,1282,1283,1286],anoth:[40,41,43,922,929,1240],another_backend:43,anyth:[43,1286],anywai:43,apart:43,api:[1240,1241],appear:[43,1153,1155],append:[40,41,1132,1135,1138],appli:[15,18,19,40,41,897,898,899,900,901,902,903,904,922,942,1043,1058,1059,1060,1096,1103,1104,1119,1128,1130,1131,1132,1144,1163,1164,1165,1167,1171,1174,1176,1179,1180,1240,1243,1244,1245,1271,1272],applic:[1119,1130,1131,1167,1171,1176,1240,1286],appropri:[1223,1224],approxim:[43,387,388,897,898,1000,1002,1003,1005,1013,1026,1027,1028,1037,1038],arang:[189,336,497,649,837,908,915,916,1183],arbitrari:[40,41,922,942,950,979,980,982],arc:[1000,1007],arctan:[1000,1006],area:[1000,1003,1005,1240],arg:[15,16,17,40,41,43,59,63,950,959,972,976,982,994,1043,1058,1059,1060,1080,1246,1247,1269,1270],arg_nam:1043,arg_stateful_idx:[1269,1270],argmax:[217,369,521,674,880,1223],argmin:[189,497,649,837,1183],args_to_ivi:[15,1240],args_to_n:[15,1240],argsort:[220,372,524,677,883,1226],argument:[15,16,17,18,19,40,41,42,43,59,63,905,906,922,942,950,959,960,972,976,982,1043,1045,1049,1057,1075,1080,1167,1171,1183,1185,1246,1247,1269,1270],aris:[1240,1286],arithmet:[43,1228,1231,1234,1236],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,81,243,391,540,703,897,898,899,900,901,902,903,904,908,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,933,937,938,940,941,942,950,968,969,970,973,974,975,976,979,980,981,982,984,986,990,994,995,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1050,1051,1053,1054,1055,1058,1059,1060,1062,1063,1064,1068,1069,1070,1071,1072,1074,1076,1077,1079,1080,1088,1090,1091,1092,1094,1095,1096,1098,1099,1102,1103,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1169,1176,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1257,1265,1266,1268,1273,1277,1282,1283],arrang:[1043,1058],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43],array_api_methods_to_test:43,array_builtin:43,array_equ:[286,774,1043],array_lik:[908,909],array_modul:43,array_oper:[0,3,4],arrays_and_dtyp:[405,410,922,942],arrays_as_list:[40,41],arrays_equ:[40,41,1043],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1240],arraywithgener:[22,1240],arraywithgradi:[24,1240],arraywithimag:[26,1240],arraywithlinalg:[28,1240],arraywithlog:[30,1240],arraywithmath:[32,1240],arraywithmeta:[34,1240],arraywithrandom:[36,1240],arraywithreduct:[38,1240],arriv:[40,41,42],articl:1240,arxiv:1240,as_arrai:[40,41,1183,1196,1208],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[411,497,503,922,930,931,932,933,950,968],as_tensor:497,as_vari:[40,41],as_zero:[40,41],asarrai:[81,243,391,540,703,908],ascend:[1226,1227],asin:[108,413,567,731,1000],asinh:[108,413,567,731,1000],aspect:[1112,1117],assert:[40,41,1043,1048],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1043,associ:[43,1132,1148],assum:[1000,1013,1037,1283,1286],astyp:[497,922],asynchron:[40,41,42],at_dev:[40,42,950,963,964],at_kei:[40,41],at_key_chain:[40,41],atan2:[731,1000],atan:[731,1000],atanh:[731,1000],attent:[43,1119,1130,1131,1257,1268],attribut:[0,6,40,41,922,937,938,1183,1213],audienc:[1240,1283],author:1240,automat:43,avail:[40,41,43,950,985,987,988,997,1043,1059],averag:[1096,1098,1099,1103,1163,1164,1165,1228,1231],average_across_step:[1163,1164,1165],avoid:[43,950,1283],axes:[40,41,43,497,515,950,994,1132,1139,1147,1153,1154,1155,1156,1157,1160,1162,1183,1186,1211,1223,1224,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239],axes_length:[40,41,1043,1058,1059,1060],axi:[40,41,387,389,391,398,399,450,451,458,497,499,502,508,512,514,897,902,908,915,916,950,952,955,962,973,974,975,976,979,980,981,982,994,1043,1054,1055,1094,1132,1135,1146,1147,1149,1151,1152,1153,1154,1155,1156,1158,1159,1160,1161,1162,1183,1186,1189,1190,1194,1199,1209,1210,1216,1222,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239],axis0:[40,41,1153,1160],axis1:[40,41,1132,1135,1153,1160],axis2:[1132,1135],back:[43,1269,1270,1273,1277],backend:[15,17,19,40,41,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,450,451,452,453,454,455,456,457,458,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,922,929,939,949,950,985,988,997,1043,1069,1073,1096,1099,1101,1103,1104,1105,1110,1240,1241,1246,1247,1273,1274,1275,1276,1277,1278,1282,1283,1286],backend_nam:43,background:[1240,1283],backprop:1286,backward:[1237,1238,1239,1282],band:[1043,1063],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,391,399,405,411,412,908,916,922,950,952,953,954,955,956,957,959,960,962,963,964,965,1000,1026,1027,1028,1043,1065,1081,1087,1096,1228,1229,1240,1243,1244,1245,1248,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1286],basi:43,batch:[40,41,950,992,993,1043,1063,1112,1116,1119,1128,1132,1144,1147,1163,1164,1165,1166,1179,1180,1183,1197,1271,1272],batch_shap:[497,510,1112,1113,1114,1115,1116,1117,1118,1119,1129,1130,1131,1132,1148,1183,1197,1205,1216,1217,1257,1266],batch_siz:[1119,1120,1121,1122,1123,1124,1125,1126,1216,1217],bayesian:1286,becaus:[43,1183,1185],becom:[43,1000,1007,1183,1188,1286],been:[1043,1058,1059,1060,1216,1217],befor:[40,41,43,950,994,1119,1130,1131,1163,1164,1165,1167,1176,1228,1231,1233,1234,1235,1236,1286],before_1:[1153,1154,1162],before_n:[1153,1154,1162],begin:[1167,1168,1175,1283],behaviour:[43,1286],behind:[1096,1099,1101,1103,1104,1105,1240],being:[40,41,43,1043,1078,1083,1183,1185],believ:43,belong:[40,41],below:[43,908,919,920,1132,1135,1240,1283,1286],below_depth:[40,41],benefit:1240,bernoul:[1119,1127,1257,1265],best:[43,1043,1075,1240],beta1:[1096,1098,1099,1103,1273,1274,1275],beta2:[1096,1098,1099,1103,1273,1274,1275],beta:[1179,1180],between:[40,41,42,922,937,1149,1151,1152,1167,1171,1183,1185,1216,1218,1273,1275],bia:[1119,1128,1129,1257,1258,1259,1260,1261,1262,1263,1264,1267],bias_initi:[1257,1258,1259,1260,1261,1262,1263,1264,1267],bilinear:[1112,1113],bilinear_resampl:[156,302,464,616,797,1112],bilinearli:[1112,1113],binari:[1000,1009,1011,1149,1150],binary_cross_entropi:1149,bit:[405,922,934,937,938,1000,1010,1112,1114,1118,1228,1233,1235,1240],bitwis:[1000,1009,1011],bitwise_and:[108,264,413,567,731,1000],bitwise_invert:[108,413,567,731,1000],bitwise_oper:[0,7,8],bitwise_or:[108,264,413,567,731,1000],block:[1240,1283],bool:[15,18,19,40,41,42,43,897,898,905,906,922,930,931,932,933,939,940,941,949,950,968,981,985,989,994,997,999,1000,1019,1020,1021,1022,1023,1024,1030,1031,1032,1034,1043,1044,1046,1047,1054,1057,1061,1063,1068,1074,1075,1094,1095,1096,1099,1100,1101,1102,1103,1104,1105,1107,1119,1127,1132,1133,1139,1144,1147,1153,1159,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1183,1191,1196,1208,1212,1216,1217,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1236,1237,1238,1239,1246,1247,1257,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278],both:[43,1132,1138,1183,1190],bottom:1240,boundari:[40,41,1216,1220],branch:[43,905,906],brittl:43,broadcast:[40,41,43,922,926,1000,1007,1009,1011,1015,1019,1023,1024,1029,1032,1034,1132,1138,1139,1147,1153,1158,1183,1187,1191,1201,1202,1203,1223,1224,1228,1230,1231,1233,1234,1236,1237,1238,1239],broadcast_to:[95,336,405,554,717,837,922,1183],build:[1240,1257,1268,1269,1270],build_mod:[1257,1268,1269,1270],builder:[43,1240],built:[950,1183,1185,1257,1268,1269,1270],builtin:43,builtin_pow:43,builtin_some_op:43,busi:43,bypass:1283,cach:[950,966,1043,1049],cache_fn:1043,calcul:[40,41,42,43,1000,1001,1002,1003,1005,1013,1015,1026,1027,1028,1029,1037,1038,1039,1228,1230,1233,1235],call:[43,950,994,1043,1078,1083,1093,1096,1100,1167,1168,1171,1175,1257,1268,1269,1270,1273,1277,1283,1286],callabl:[40,41,905,906,950,959,960,994,1043,1049,1057,1059,1075,1093,1119,1130,1163,1164,1165,1166,1167,1171,1172,1173,1175,1176],can:[43,908,910,950,992,993,994,1112,1114,1183,1207,1240,1282,1283,1286],cannot:43,captur:1240,cast:[40,41,189,336,497,649,837,922,1112,1114,1118,1183,1189,1228,1233,1235],catch_except:[1043,1057],categori:43,caus:43,ceil:[108,264,413,567,731,1000,1183,1185],cell:[1119,1129,1257,1266],certain:[40,41,908,915,916,1183,1185],chain:[40,41,1163,1164,1165,1279,1280],chang:[43,950,1167,1169,1176,1183,1207,1240,1282],channel:[1043,1063,1112,1114,1115,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267],check:[15,16,17,18,19,40,41,43,922,928,939,949,950,989,999,1043,1048,1061,1068,1074,1088,1095,1096,1102,1167,1168,1175,1240,1283],check_nest:[1167,1175],check_shap:[40,41],check_submod_ret:[1269,1270],check_typ:[40,41],choic:[1240,1283],choleski:[168,314,476,624,809,1132],choos:[1000,1007,1031,1032,1183,1212,1228,1230,1240],choose_random_framework:59,chosen:[40,41,1183,1185,1212],chunk:[950,992,993,994],chunk_siz:[950,994],circl:[1000,1004],clark:1240,clear:[43,950,966],clear_framework_stack:59,clear_mem_on_dev:[411,723,950],click:1240,clip:[40,41,336,497,837,1043,1050,1051,1183,1201,1203,1240],clip_matrix_norm:1043,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1043],clone:[40,41,950,969,970,971,972],close:[43,1000,1004,1112,1117,1286],closest:[922,928,1000,1012,1018],closest_valid_dtyp:922,code:[40,41,42,43,1240,1241,1282,1283],codebas:[950,992,993,1240,1283,1286],codomain:[1000,1002,1003,1005,1013,1026,1028,1037,1038,1039],colab:1240,collect:[15,40,41,387,411,450,497,897,905,950,1043,1096,1112,1119,1149,1167,1179,1183,1215,1216,1243,1257,1271,1273],color:[40,41,42,1284,1285],column:[908,913,1132,1142,1183,1197],combin:[40,41,42,1112,1117,1240,1286],come:1283,command:1240,comment:43,commit:1286,common:[40,41,43,1000,1007],common_key_chain:[40,41],commun:[43,1240,1283],communuti:43,compar:[40,41,1043,1044,1046,1047,1226,1227],comparison_oper:[0,9,10],compat:[43,922,926,1000,1009,1011,1015,1019,1023,1024,1029,1030,1032,1034,1132,1147,1183,1191,1207,1228,1230,1233,1237,1238,1239,1240,1286],compil:[336,497,837,1269,1270,1273,1274,1275,1276,1277,1278],compile_on_next_step:[1269,1270,1273,1274,1275,1276,1277,1278],complet:[40,41,43,1132,1142],complex:[1283,1286],compliant:[1000,1031,1032,1228,1230],compon:[1183,1190],composit:43,comput:[40,41,950,994,1000,1004,1006,1007,1009,1011,1016,1017,1019,1023,1024,1025,1030,1031,1032,1033,1034,1041,1043,1050,1051,1054,1055,1096,1098,1099,1100,1101,1103,1104,1105,1107,1109,1112,1115,1119,1120,1121,1122,1123,1124,1125,1126,1128,1130,1132,1133,1136,1137,1138,1139,1141,1142,1143,1146,1147,1149,1150,1151,1152,1167,1171,1183,1191,1200,1228,1229,1230,1231,1232,1233,1234,1235,1236],concat:[40,41,950,979,980,981,982,994,1043,1063],concaten:[40,41,189,336,497,649,837,1043,1063,1183,1240],concatten:[40,41,950,979,980,981,982,994],condit:[497,905,906,1167,1175,1183,1212],conditon:[1167,1175],config:[40,41],configur:[40,41],conflict:43,conform:43,conjunct:1283,connect:[1257,1267,1268],consid:[40,41,1000,1031,1032,1282,1286],consist:[40,41,950,982,1228,1229,1269,1270,1283],constant:[950,959,960,1149,1150,1151,1152,1153,1154,1167,1171,1179,1180,1248,1249,1253,1256,1269,1270,1271,1272,1283],constant_pad:[327,639,826,1153],constitu:[40,41],construct:[1153,1161,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282],constructor:[40,41,42,1043,1045,1279,1280],consum:950,cont_feat_dim:[1119,1130],contaienr:[40,41],contain:[15,18,19,42,43,908,912,917,919,920,921,922,927,950,969,973,994,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1036,1037,1038,1039,1040,1043,1050,1051,1052,1068,1086,1087,1096,1098,1099,1101,1103,1104,1105,1132,1133,1134,1135,1136,1138,1140,1142,1145,1147,1153,1157,1163,1164,1165,1166,1183,1184,1186,1188,1191,1201,1203,1216,1217,1223,1224,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[450,774,1043],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[497,1119,1130,1183,1204,1257,1268],context_dim:[1257,1268],contextmanag:[59,60],continu:[43,1283],contract:[40,41,1228,1229],contribut:[1240,1241],contributor:[43,1240],control:1240,conv1d:[160,306,468,801,1119,1240,1257],conv1d_transpos:[160,306,468,801,1119],conv1dtranspos:[1240,1257],conv2d:[160,306,468,620,801,1119,1240,1257],conv2d_transpos:[160,306,468,801,1119],conv2dtranspos:[1240,1257],conv3d:[160,306,468,620,801,1119,1240,1257],conv3d_transpos:[160,306,468,801,1119],conv3dtranspos:[1240,1257],convent:[40,41,1132,1138,1228,1229],conver:[950,966,977,989,996,999],convers:[16,17,18,19,40,41,1240],convert:[15,16,17,18,19,40,41,43,908,910,922,929,935,936,950,977,978,1043,1085,1091,1092,1112,1114,1118,1132,1148,1167,1169,1176,1240,1247],convert_dtyp:922,convolut:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],cool:43,cooler:43,coordin:[1000,1004,1007,1183,1202],copi:[40,41,43,391,393,1043,1053,1167,1169],copy_arrai:[450,774,1043],copy_nest:1167,core:[950,987,1240],corner:43,correct:[43,1240,1283],correctli:[40,41,43,1000,1007,1132,1139,1223,1224,1228,1231,1234,1236],correspond:[40,41,43,1183,1189,1216,1217,1223,1224,1228,1233,1235],cos:[108,413,567,731,1000,1041,1043,1063,1283],cosh:[108,413,567,731,1000],cosin:[1000,1002,1003,1013,1014],cost:[1096,1098,1099,1101,1103,1104,1105,1163,1164,1165,1166],cost_fn:[1163,1166],could:1286,count:[40,41,1153,1156,1237,1238,1239],cours:43,cprint:1284,cpu:[40,41,43,908,909,915,916,950,987,989,995,996,999,1043,1079,1080,1183,1185,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1282,1283],creat:[40,41,908,909,910,911,912,913,914,915,916,917,918,921,950,959,960,1043,1079,1080,1090,1096,1109,1183,1185,1193,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1240,1241,1246,1247,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1286],create_if_abs:[40,41],create_vari:1248,creation:[40,41,42,43,392,393,394,395,396,397,398,399,400,401,402,403,404,909,910,911,912,913,914,915,916,917,918,919,920,921],crop:[1112,1116],crop_siz:[1112,1116],cross:[336,837,1149,1150,1151,1152,1183],cross_entropi:1149,cuda:[40,41,908,909,915,916,950,959,978,995,1043,1079,1080,1183,1185,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280],cumprod:[144,286,450,774,1043],cumsum:[774,1043],cumul:[1043,1054,1055],current:[40,41,42,43,922,929,939,949,950,959,983,984,986,990,1043,1056,1064,1069,1073,1076,1077,1167,1168,1175,1240,1286],current_framework:59,current_framework_str:[497,837,1043],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1119,1120,1121,1122,1123,1124,1125],d_out:[1119,1120,1121,1122,1123,1124,1125],da_dim_s:950,da_tune_step:950,dai:1286,daniel:1240,data:[40,41,42,43,908,909,910,911,912,913,914,917,918,919,920,921,926,927,928,929,933,934,935,936,937,938,939,940,941,949,950,952,953,954,955,956,957,962,963,964,978,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1022,1023,1024,1026,1028,1029,1030,1031,1032,1034,1037,1038,1039,1043,1074,1088,1096,1102,1110,1119,1128,1132,1133,1134,1135,1136,1138,1140,1142,1147,1153,1156,1157,1183,1185,1191,1193,1197,1206,1207,1209,1213,1223,1224,1226,1227,1228,1230,1233,1235,1237,1238,1239,1240],data_format:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],data_typ:[405,407,408,409,410,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949],dataset:[40,41],datatyp:[40,41,908,910,922,928,940,941],dcdw:[1096,1098,1099,1101,1103,1104],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1096,1103,1104,1273,1275,1276],decay_lambda:[1096,1103,1104,1273,1275,1276],decid:[40,41,1286],decomposit:[1132,1133,1142,1144],decor:43,decrement:[1043,1070],dedic:[1096,1110,1246,1247],deep:[40,41,1240],deep_copi:[40,41],deeper:[950,972,976,982,1167,1176,1240],deepli:[1167,1169],def:[43,60,96,255,406,555,718,923,924,925,951,958,961,1097,1240,1249,1252,1255,1282,1283,1286],default_dev:43,default_devic:950,default_dtyp:[43,922],default_float_dtyp:922,default_int_dtyp:922,default_key_color:[40,41,42],default_v:[1043,1057],defaultdevic:[950,951],defaultdtyp:[922,923],defaultfloatdtyp:[922,924],defaultintdtyp:[922,925],defer:43,defin:[43,1183,1190,1205,1213,1216,1218,1228,1230],definit:[43,1132,1133],degre:[1000,1041],delai:43,delet:43,delta:[1096,1098],demo:1240,denomin:[1043,1062,1066,1082,1086,1087,1179,1180,1271,1272],denot:43,dens:[1257,1267],depend:[43,1000,1001,1002,1003,1005,1013,1026,1027,1028,1037,1038,1132,1142,1144,1183,1212,1226,1227,1240],depth:[40,41,497,513,950,972,976,982,1043,1067,1167,1176,1183,1205,1269,1270],depth_cutoff:[40,41],depthwis:[1119,1126,1257,1264],depthwise_conv2d:[160,306,468,620,801,1119],depthwiseconv2d:[1240,1257],deriv:[908,912,914,918,1096,1098,1099,1101,1103,1104,1105,1167,1169,1176,1240,1269,1273,1277,1279],descend:[1132,1144,1145,1226,1227],descent:[1096,1101,1273,1278],describ:[40,41,1228,1229,1233,1235],descript:[1132,1147],design:[1240,1241],desir:[40,41,908,909,922,927,950,995,1112,1117,1183,1185,1197,1198,1206,1213,1228,1231,1234,1236],desired_aspect_ratio:[1112,1117],det:[168,314,476,624,809,1132],detail:1286,detect:[40,41,1167,1168,1175],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,908,909,922,927,928,934,939,940,941,949,950,985,987,988,997,1000,1002,1003,1005,1009,1011,1013,1015,1020,1021,1022,1026,1028,1029,1037,1038,1039,1043,1044,1046,1047,1068,1069,1073,1074,1088,1095,1096,1102,1119,1130,1132,1133,1134,1135,1138,1143,1147,1163,1164,1165,1166,1183,1185,1237,1238,1239],dev:[40,41,42,43,101,258,391,392,393,395,398,399,401,411,450,456,457,497,498,508,509,510,513,516,560,723,908,909,910,912,915,916,918,950,953,954,956,957,959,960,963,964,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,986,989,990,991,992,993,994,995,996,999,1043,1079,1080,1096,1111,1183,1185,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1246,1247,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280],dev_clon:[40,41,950],dev_clone_arrai:950,dev_clone_it:950,dev_clone_nest:950,dev_dist:[40,41,950],dev_dist_arrai:950,dev_dist_it:950,dev_dist_nest:950,dev_from_str:[43,101,258,411,560,723,950],dev_mapp:950,dev_str:[40,41],dev_to_str:[101,258,411,560,723,950],dev_unifi:950,dev_unify_arrai:950,dev_unify_it:950,dev_unify_nest:950,dev_util:950,devclonedit:950,devcloneditem:950,devclonednest:950,devdistit:950,devdistitem:950,devdistnest:950,develop:[43,1240,1283,1286],deviat:[40,41,1179,1180,1216,1219,1228,1234,1271,1272],devic:[21,40,41,43,391,394,396,397,400,404,412,497,507,908,909,910,911,912,913,914,915,916,917,918,919,920,921,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1043,1079,1080,1096,1111,1183,1185,1193,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1240,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280],devmanag:[950,958],devmapp:[950,960],devmappermultiproc:950,diag:[1132,1144],diagon:[168,314,476,624,809,908,913,919,920,1132,1146,1183,1197],dict:[15,16,17,18,19,40,41,42,950,952,955,959,960,962,972,973,974,975,976,1043,1058,1059,1060,1075,1163,1164,1165,1167,1169,1170,1171,1174,1176,1246,1247],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,922,937,950,969,970,973,974,1119,1128,1228,1233,1235,1240,1283,1286],differenti:[1240,1283],dilat:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],dim:[40,41,43,1112,1113,1117,1132,1144,1183,1205,1257,1268],dim_siz:[40,41,950],dimens:[40,41,42,897,902,908,919,920,950,981,1043,1058,1059,1060,1063,1094,1112,1116,1119,1120,1121,1122,1123,1124,1125,1126,1129,1132,1133,1134,1135,1136,1138,1139,1140,1142,1144,1145,1147,1149,1151,1152,1153,1155,1156,1157,1158,1159,1163,1164,1165,1166,1183,1187,1189,1190,1196,1199,1205,1207,1209,1210,1211,1216,1222,1223,1224,1228,1229,1230,1231,1233,1234,1236,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264,1267,1268],dimension:[40,41,908,913,1132,1134,1138,1144,1147,1153,1159,1183,1209,1223,1224,1228,1230,1233,1235,1237,1238,1239],directli:[43,1167,1176,1283,1286],directori:[1043,1084,1089],discord:43,discret:[1149,1151],discuss:43,disk:[40,41,1112,1114],distanc:[1183,1185],distribut:[40,41,950,969,973,974,975,976,1119,1127,1216,1217,1218,1219,1220,1257,1265,1269,1270],distributedarrai:[40,41],distrubt:[1149,1151],dive:[1240,1283],divid:[40,41,1000,1043,1086,1153,1159],dividend:[1000,1015],divis:[1000,1015,1043,1062,1066,1082,1086,1087,1096,1098,1099,1103,1273,1274,1275],divisor:[1000,1015,1096,1098,1099,1103,1273,1274,1275],doc:1240,docstr:43,document:43,doe:[40,41,43,1153,1159,1183,1185,1282],doesn:1240,doing:43,domain:[1000,1002,1003,1005,1013,1026,1028,1037,1038,1039],don:[43,1240],done:43,door:1286,dot:[1119,1130,1131,1132,1137,1257,1268],down:1282,downscal:[1043,1050,1051],drag:[1240,1286],draw:[1216,1217,1219,1220],drawn:[1216,1217,1218,1219,1220],drop:[1240,1286],dropout:[1119,1240,1257,1268],dropout_r:[1257,1268],ds_tune_step:950,dtype:[40,41,43,189,336,391,392,393,394,395,396,397,400,401,404,405,408,409,410,497,498,500,507,510,516,649,837,908,909,910,911,912,913,914,917,918,921,922,927,928,929,930,931,932,934,935,936,937,938,939,940,941,942,943,944,945,949,1183,1185,1193,1197,1205,1206,1213,1223,1224,1228,1233,1235],dtype_bit:[189,336,497,649,837,922],dtype_from_str:[43,189,336,497,649,837,922],dtype_in:[497,504,505,506,922,929,934,935,936,939,940,941,949],dtype_to_str:[189,336,497,649,837,922],duplic:[40,41,43],dure:[40,41,43,905,906,1043,1093,1096,1098,1099,1103,1132,1138,1163,1164,1165,1166,1269,1270,1273,1274,1275,1277],dynam:[43,497,501,905,906],each:[40,41,42,43,950,959,960,969,970,971,972,973,974,975,981,993,994,1000,1001,1002,1003,1004,1005,1009,1010,1011,1012,1013,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1043,1044,1096,1099,1101,1103,1104,1105,1112,1115,1119,1120,1121,1122,1123,1124,1125,1126,1127,1132,1133,1134,1138,1140,1144,1153,1154,1158,1159,1161,1162,1167,1171,1183,1184,1191,1210,1216,1217,1228,1229,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1283],eager:1283,easi:1286,easili:1240,econom:1286,ecosystem:1240,edg:[1153,1154,1162,1183,1188],effect:[1096,1105],effective_grad:[1096,1105],effici:1286,eigenvalu:[1132,1136],eigvalsh:[168,314,476,624,809,1132],einop:[40,41,1043,1058,1059,1060],einops_rearrang:[40,41,1043],einops_reduc:[40,41,1043],einops_repeat:[40,41,1043],einstein:[40,41,1228,1229],einsum:[40,41,222,374,526,679,885,1228],either:[40,41,43,1000,1021,1026,1028,1029,1037,1043,1057,1075,1132,1138,1163,1164,1165,1166,1183,1202,1204,1228,1233,1235,1257,1268,1269,1270,1283],element:[40,41,43,897,898,899,900,901,902,903,904,908,913,914,919,920,922,927,950,971,975,981,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1046,1047,1050,1051,1054,1055,1062,1092,1119,1127,1132,1138,1142,1153,1156,1158,1159,1183,1184,1185,1186,1188,1191,1192,1197,1198,1201,1203,1212,1228,1229,1230,1231,1232,1233,1237,1238,1239,1257,1265],elementwis:[40,41,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042],elementwise_affin:[1271,1272],elemtn:[1216,1217],els:[43,1043,1048,1057,1061],elsewher:[908,913,1183,1212],emphas:1240,empti:[40,41,81,243,391,540,703,908,1237,1238,1239],empty_lik:[81,391,540,703,908],enabl:[40,41,42,43,1240],encapsul:[922,938],encod:[1043,1063,1112,1114],end:[1183,1185,1240,1283],engag:43,ensur:43,entir:[40,41,950,994,1228,1230,1233,1235,1237,1238,1239,1240,1257,1266],entri:[40,41,908,915,916,1153,1159,1183,1209],entropi:[1149,1150,1151,1152],environ:1240,eps:[405,922,937],epsilon:[1096,1098,1099,1103,1149,1150,1151,1152,1179,1180,1271,1272,1273,1274,1275],equal:[40,41,108,413,567,731,908,913,914,1000,1020,1021,1041,1043,1044,1046,1047,1132,1135,1153,1154,1159,1162,1183,1216,1220,1226,1227],equality_matrix:[1043,1044],equat:[40,41,1228,1229],equival:[1000,1031,1032,1041,1132,1147,1183,1185],erf:[413,731,1000],error:[40,41,43,897,898,950,1000,1016,1183,1209,1228,1230,1269,1270,1273,1277],essenti:43,etc:[40,41,43,908,909,915,916,950,995,1043,1079,1080,1183,1185,1194,1195,1197,1205,1206,1213,1216,1217,1218,1219,1220,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1286],euclidean:[1132,1147],euler:907,evalu:[40,41,1000,1026,1027,1028,1033,1040,1167,1168,1175,1183,1202,1237,1238,1239],even:[43,1286],evenli:[40,41,908,915,916,1153,1159,1183,1185],everi:[43,908,914,1043,1044,1286],exact:[40,41],exampl:[43,905,906,1183,1188,1210,1240,1282,1283,1286],example_input:[497,501,905,906],exce:[1183,1203],except:[40,41,44,47,908,913,922,926,1043,1048,1057,1093,1183,1185,1189,1237,1238,1239],excit:[1240,1283],exclud:[59,61,1183,1185,1216,1220],exclus:[40,41,450,451,455,1043,1054,1074,1096,1102,1216,1218],execut:[43,1043,1093,1283],execute_with_gradi:[153,297,459,611,791,1096,1240,1282],exist:[40,41,1043,1057,1240,1273,1277,1286],exp:[731,1000,1029],expand:[40,41,1043,1063,1153,1155],expand_dim:[40,41,183,327,491,639,826,1153],expect:[1043,1045],explain:[43,1283],explicitli:[43,1257,1266,1268,1269,1270,1283],expon:[43,1043,1087],exponenti:[43,1000,1016,1017,1029],expos:[908,909,1043,1052],express:[1000,1002,1013,1037,1183,1202],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1096,1100],eye:[81,243,391,540,703,908,1132,1137],fabian:1240,fabio:1240,factor:[950,959,992,993,994,1096,1098,1099,1103,1104,1119,1120,1121,1122,1123,1124,1125,1126,1132,1133,1144,1257,1258,1259,1260,1261,1262,1263,1264,1273,1274,1275,1276],fail:43,falck:1240,fall:[1269,1270,1273,1277],fallback_to_non_compil:[1269,1270,1273,1277],fals:[15,18,19,40,41,42,59,66,67,68,69,70,411,450,451,455,458,497,503,922,930,931,932,933,950,968,981,989,994,999,1000,1020,1021,1022,1031,1032,1043,1044,1054,1057,1061,1063,1074,1075,1094,1096,1099,1100,1101,1102,1103,1104,1105,1132,1133,1139,1147,1153,1159,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1183,1196,1208,1212,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1269,1270,1273,1274,1275,1276,1277,1278],fan_in:1248,fan_mod:1248,fan_out:1248,far:[1167,1168,1175,1282],faster:[905,906],favourit:[1240,1282],feasibl:1286,feat_dim:[1119,1130,1131],fed:[950,994],feed:[950,994],few:43,field:[1132,1142,1286],file:[40,41,43,1043,1084,1089,1269,1270],filepath:[40,41],fill:[40,41,908,911,914,917,918,921,1183,1193,1206,1216,1218],fill_valu:[391,397,497,507,908,914,1183,1193],filter:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264,1286],filter_s:[1257,1258,1259],filter_shap:[1257,1260,1261,1262,1263,1264],find:[40,41,43,1286],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[95,96,254,255,405,406,554,555,717,718,922],finish:[1240,1286],finit:[1000,1020],first:[40,41,43,905,906,908,915,916,950,981,1000,1009,1011,1019,1023,1024,1029,1030,1032,1034,1043,1046,1096,1100,1132,1135,1138,1142,1144,1153,1160,1163,1164,1165,1166,1167,1168,1175,1183,1189,1190,1191,1210,1216,1222,1223,1224,1257,1268,1269,1270,1273,1277,1283,1286],firstlayersiren:[1240,1248],firstli:[1283,1286],fist:[950,994],fit:[40,41,387,411,450,497,1112,1117,1153,1158],fix:43,fkt:1286,flag:[40,41,43,1096,1102],flat:[40,41,43,1043,1079,1153,1158],flat_list:[40,41],flatten:[40,41,1043,1063,1132,1147,1153,1158,1223,1224,1228,1231,1234,1236],flatten_key_chain:[40,41,1269,1270],flexibl:[1240,1283],flip:[40,41,183,327,491,639,826,1000,1010,1153],float32:[43,497,510,908,909,922,927,935,936,1183,1185,1197,1206,1213],float_dtyp:[922,931,944],float_img_to_uint8_img:1112,floor:[108,264,413,567,731,1000,1043,1062,1183],floormod:[286,450,774,1043],fluid:1286,folder:[43,1240],follow:[40,41,43,922,938,950,994,1043,1070,1071,1072,1086,1087,1096,1099,1101,1103,1104,1105,1119,1130,1131,1132,1142,1147,1167,1171,1176,1240,1257,1267,1273,1277],followng:[922,937],fomaml_step:1163,forget:[1096,1098,1099,1103,1273,1274,1275],fork:[1183,1204,1240,1241],forkserv:[1183,1204],form:[15,16,17,18,19,40,41,908,909,910,919,920,1096,1099,1101,1103,1104,1105,1119,1132,1133,1134,1135,1136,1140,1142,1145,1167,1169,1176],format:[40,41,43,908,909,922,927,929,933,950,968,1183,1185,1197,1206,1213,1228,1229,1240,1282,1283],format_fn:[40,41],format_key_chain:[40,41],forward:[1269,1270,1273,1277,1282],found:[40,41,42],fourier:[1043,1063],fourier_encod:1043,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,76,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,154,155,157,158,159,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,215,216,218,221,223,224,225,226,227,228,229,231,232,235,244,245,246,247,248,249,250,251,252,253,255,256,257,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,298,299,300,301,303,304,305,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,366,367,368,370,373,375,376,377,378,379,380,381,382,384,385,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,406,407,408,409,410,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,455,456,457,458,460,461,462,463,465,466,467,469,470,471,472,473,474,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,520,522,525,527,528,529,530,531,532,533,535,536,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,559,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,625,626,627,628,629,630,631,632,633,634,635,636,637,638,640,641,642,643,644,645,646,647,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,670,671,672,673,675,678,680,681,682,683,684,685,686,688,689,692,693,694,695,696,697,698,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,718,719,720,721,722,724,725,726,727,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,798,799,800,802,803,804,805,806,807,808,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,881,884,886,887,888,889,890,891,892,894,895,898,899,900,901,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1224,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1283,1285,1286],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framewrk:[1183,1204],free:43,freed:43,freeli:43,frequenc:[1043,1063],from:[40,41,42,43,908,910,912,914,918,922,929,942,950,959,960,994,1000,1039,1043,1057,1090,1096,1099,1103,1112,1116,1119,1127,1130,1132,1135,1153,1156,1163,1164,1165,1166,1167,1169,1176,1183,1194,1195,1197,1207,1209,1212,1216,1217,1218,1219,1220,1228,1232,1233,1235,1237,1238,1239,1240,1246,1247,1257,1265,1268,1273,1277,1282,1283],from_cal:[1269,1270],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,189,336,497,649,837,922,937,1132,1142,1183,1240],full_lik:[81,391,540,703,908],full_matric:[1132,1144],fulli:[43,1240,1257,1267,1268,1282],func:[40,41,497,501,905,906,950,994,1043,1049,1096,1100],further:[43,1286],furthermor:1286,futur:1286,gain:1248,gamma:[1179,1180],gather:[40,41,189,336,497,649,837,1183,1195],gather_nd:[40,41,189,336,497,649,837,1183],gauss:[1000,1016],gaussian:[897,898],geglu:[1240,1243],gelu:[234,387,691,897,1240,1243],gener:[23,40,41,43,411,451,452,453,454,455,456,457,458,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,905,908,915,916,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1102,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1218,1220,1221,1240,1273,1277],geometr:[1043,1063],get:[40,41,43,922,933,934,937,938,950,959,960,968,983,984,989,993,996,999,1043,1045,1064,1065,1066,1078,1240,1257,1266,1286],get_all_arrays_in_memori:1043,get_all_arrays_on_dev:950,get_framework:59,get_initial_st:[1257,1266],get_min_bas:1043,get_min_denomin:1043,get_mod_kei:[1269,1270],get_num_dim:[497,837,1183],get_referrers_recurs:1043,gist:1240,give:[43,1183,1207,1283],given:[40,41,43,908,909,911,915,916,922,927,950,983,989,992,993,994,996,999,1043,1054,1055,1079,1080,1094,1096,1098,1099,1101,1103,1104,1105,1119,1120,1121,1122,1123,1124,1125,1126,1132,1137,1148,1153,1156,1158,1159,1161,1167,1172,1173,1183,1185,1188,1195,1206,1211,1213,1216,1219,1220,1222,1228,1231,1234,1236,1246,1247,1286],global:[40,41,42,922,930,931,932,950,959,960,967,992,993,994,1043,1056,1065,1066,1078,1081,1082,1083,1086,1087,1096,1111,1179,1180,1271,1272],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1240,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267],good:43,googl:1240,got:[43,1240],gpu0:43,gpu2:43,gpu:[950,985,988],gpu_is_avail:[411,950],grad:[1240,1273,1277,1282],gradient:[25,40,41,950,994,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1115,1163,1164,1165,1166,1240,1273,1274,1275,1276,1277,1278,1282,1286],gradient_descent_upd:[1096,1163,1164,1165,1166],gradient_imag:[156,302,464,616,797,1112],gradienttrack:[1096,1097],graph:[1096,1099,1101,1103,1104,1105,1269,1270],greater:[40,41,1000,1002,1018,1183,1185,1192,1209,1216,1220],greater_equ:[108,264,413,567,731,1000],greatest:[1000,1018],green:[40,41,42,1284,1285],grid:[1183,1202],group:[1112,1117],guid:[43,1240,1241,1286],gym:1240,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1286,half:[1183,1185,1216,1220],hand:1240,handl:[40,41,42,43,905,906,950,966,968,977,978,989,996,999,1096,1099,1101,1103,1104,1105,1273,1274,1275,1276,1277,1278],happen:43,has:[40,41,43,1000,1001,1006,1132,1138,1143,1183,1210,1228,1233,1235],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1043],have:[40,41,43,908,911,912,914,917,918,919,920,921,922,926,937,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1022,1023,1024,1026,1028,1029,1030,1031,1032,1034,1037,1038,1039,1043,1058,1059,1060,1096,1102,1110,1132,1133,1134,1135,1136,1138,1140,1142,1144,1145,1147,1153,1156,1157,1183,1189,1190,1191,1193,1210,1223,1224,1226,1227,1228,1230,1233,1235,1237,1238,1239,1240,1282,1283],haven:43,hdf5:[40,41,1269,1270],head:[1119,1130,1257,1268],head_dim:[1257,1268],height:[1112,1117],height_cutoff:[40,41],help:[43,59,405,411,412,922,950,962,963,964,965,1096,1240,1248,1250,1251,1253,1254,1256],here:[43,1240],hidden:[1119,1129,1257,1266],hierarch:[1043,1052],hierarchi:[40,41],high:[40,41,1216,1218,1220],higher:[1096,1099,1101,1103,1104,1105,1132,1144],highest:[1216,1218],highli:1240,highlight:1286,hint:43,hkt:1286,hold:[908,909,922,927,1043,1079,1080,1183,1185],host:1240,hot:[1183,1205],hour:43,how:[1240,1257,1268,1269,1270,1283,1286],howev:[43,1283],http:1286,hyperbol:[897,904,1000,1003,1005,1008,1014,1038,1042],hypothet:[43,1286],icon:1240,idea:1240,ident:[40,41,43,189,336,497,649,837,1183],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[907,922,937,1000,1039],if_exist:[40,41],ignor:[40,41,1273,1277],ignore_key_error:[40,41],ignore_miss:[1273,1277],ignore_non:[40,41],iii:43,iinfo:[95,254,405,554,717,922],imag:[27,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1183,1199,1240,1286],image_dim:[1112,1116],imkkhk:1286,immedi:[1240,1283,1286],implement:[43,922,942,1000,1001,1002,1003,1005,1013,1026,1027,1028,1037,1038,1226,1227,1228,1230,1240,1283,1286],in_featur:[1119,1128],inadvert:43,includ:[40,41,43,908,910,1043,1068,1086,1087,1095,1132,1147,1167,1168,1183,1185,1216,1220,1228,1230,1233,1237,1238,1239,1257,1267,1268,1271,1272,1282],include_deriv:[1167,1169,1176],include_empti:[40,41],include_inf:[40,41,1043,1068,1095],include_nest:[1167,1168],include_self:[40,41],inclus:[43,1216,1218],incom:[1119,1128],incompat:[922,926],increas:[950,972,976,982,1153,1154,1155,1162,1167,1176],increasingli:1286,increment:[1043,1071],inde:1240,indent:[40,41,42],independ:[1216,1217],index:[40,41,497,908,913,1167,1170,1172,1173,1174,1177,1183,1186,1194,1195,1202,1209,1210,1223,1224,1226,1227],index_nest:1167,indic:[40,41,450,456,457,497,508,509,513,897,902,1043,1079,1080,1119,1120,1121,1122,1123,1124,1125,1126,1132,1147,1167,1168,1170,1172,1173,1174,1175,1177,1178,1179,1180,1183,1186,1194,1195,1198,1205,1216,1217,1223,1224,1226,1227,1257,1258,1259,1260,1261,1262,1263,1264,1269,1270],indices_wher:[189,336,497,837,1183],indistinguish:[1000,1039],inevit:1286,inf:[40,41,1000,1006,1043,1068,1095,1132,1147],infer:[905,906,908,910,912,914,918,1112,1116,1183,1196,1197,1207,1208,1228,1232,1283,1286],infin:[1000,1001,1003,1005,1012,1013,1018,1020,1021,1026,1028,1029,1037,1038,1039,1132,1147,1228,1230,1237,1238,1239],infinit:[1000,1039],inform:[922,937,938,1096,1107],init_c:[1119,1129],init_h:[1119,1129],init_on_first_step:[1273,1277],initi:[40,41,42,43,59,405,411,412,922,950,962,963,964,965,1096,1119,1129,1240,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1273,1277],initialz:[1269,1270],inner:[1132,1138,1163,1164,1165,1166],inner_batch_fn:[1163,1164,1165],inner_batch_shap:[1119,1128],inner_cost_fn:[1163,1164,1165],inner_grad_step:[1163,1164,1165,1166],inner_learning_r:[1163,1164,1165,1166],inner_optimization_step:[1163,1164,1165,1166],inner_v:[1163,1164,1165],innermost:[908,919,920,1132,1133,1134,1135,1136,1140,1142,1145],inplac:[40,41,1043,1048,1069,1073,1088,1096,1099,1101,1103,1104,1105,1246,1247,1273,1274,1275,1276,1277,1278],inplace_arrays_support:[450,1043],inplace_decr:[144,286,450,603,774,1043],inplace_incr:[144,286,450,603,774,1043],inplace_oper:[0,11,12],inplace_upd:[40,41,144,286,450,603,774,1043,1246,1247],inplace_variables_support:[450,1043],input:[15,18,19,40,41,42,43,897,898,899,900,901,902,903,904,905,906,908,910,912,914,918,919,920,922,927,928,930,931,932,933,934,940,941,942,950,959,960,967,968,969,972,973,976,982,994,995,1000,1001,1002,1003,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1050,1051,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1068,1070,1071,1072,1074,1085,1088,1090,1091,1092,1094,1095,1096,1100,1102,1107,1111,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1142,1144,1145,1147,1153,1154,1155,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1179,1180,1183,1184,1186,1187,1188,1189,1191,1192,1196,1197,1198,1199,1200,1201,1202,1203,1208,1209,1210,1211,1216,1217,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1271,1272,1283],input_ax:[950,994],input_channel:[1257,1258,1259,1260,1261,1262,1263,1266,1267],insert:[1153,1155,1223,1224],insid:43,inspir:1286,instal:1240,instanc:[15,16,17,18,19,40,41,43,950,959,1246,1247,1279,1280],instead:[40,41,43,1228,1231,1234,1236,1286],int16:[1228,1233,1235],int32:[43,1228,1233,1235],int64:[908,909,922,927,1183,1185,1197,1206,1213,1228,1233,1235],int_dtyp:[922,932,945],integ:[40,41,922,938,941,942,1000,1001,1009,1010,1011,1012,1018,1036,1132,1147,1153,1159,1183,1185,1192,1216,1218,1221,1228,1230,1233,1235,1237,1238,1239],integr:1240,intend:43,inter:1240,interact:1240,interchang:[40,41,1153,1160],interest:1240,interfac:[908,909,1283],intermedi:[40,41],intern:[40,41,950,1096,1110,1167,1168,1175,1176,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1279,1280],interpol:[1183,1199],interpret:[908,910],interv:[40,41,908,915,916,1000,1004,1183,1185,1188,1216,1220,1237,1238,1239],introduc:1286,inv:[809,1132,1286],invalid:[1237,1238,1239],invalid_dtyp:922,invers:[1000,1002,1003,1004,1005,1006,1008,1132,1137,1141,1286],invert:[1000,1010,1132,1137,1141],invest:1286,investig:43,invoc:[905,906],involv:[922,942],irrespect:1240,is_arrai:[144,286,450,603,774,1043],is_float_dtyp:922,is_int_dtyp:922,is_vari:[153,297,459,611,791,1096],isfinit:[108,264,413,567,731,1000],isinf:[108,264,413,567,731,1000],isnan:[108,264,413,567,731,1000],issu:[1240,1241],issue_numb:43,item:[15,19,40,41,922,930,950,959,960,962,969,971,973,975,981,1043,1052,1067,1086,1087,1167,1171,1172,1173,1176,1177,1178,1240,1269,1270,1282],iter:[15,16,17,18,19,40,41,42,905,906,950,953,954,956,957,959,960,963,964,971,973,974,975,976,981,994,1043,1044,1080,1153,1154,1158,1159,1161,1162,1167,1168,1169,1171,1175,1176,1183,1187,1189,1197,1202,1206,1207,1208,1210,1211],iterbal:[950,971,975,981],its:[950,994,1132,1138,1153,1160,1183,1197,1207,1211,1240],itself:[43,1167,1176],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,450,451,452,453,454,455,456,457,458,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1243,1244,1245,1246,1247,1248,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1284,1285],ivy_backend:[40,41],ivy_bay:1286,ivy_test:43,ivyfcmodel:1282,ivyh:[40,41,42],ivymodul:[78,700],jame:1240,jax:[43,1096,1102,1240,1286],jax_concat:1240,jnp:1240,join:[40,41,1183,1189,1210],journal:1240,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1240,1257,1266,1286],kaimingnorm:[1248,1252],kalman:1286,kalman_filt:1286,kalman_filter_step:1286,kalman_filter_upd:1286,keep:[40,41,950,995,1043,1094,1240,1241,1286],keep_inner_v:[1163,1164,1165],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1163,1164,1165],keepdim:[40,41,450,458,1043,1094,1132,1139,1147,1223,1224,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239],kei:[15,16,17,40,41,42,43,950,962,1043,1052,1119,1130,1131,1163,1164,1165,1167,1170,1174,1240,1246,1247,1257,1268,1273,1277],kept:[40,41,42,1163,1164,1165],kera:1286,kernel:[1119,1129],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,950,959,960,972,976,982,1043,1045,1058,1059,1060,1075,1167,1171,1269,1270],keyword_color_dict:[40,41,42],kind:[922,937,938,1228,1233,1235,1286],kwarg:[15,16,17,40,41,42,59,63,950,959,972,976,982,1043,1075,1246,1247,1269,1270],kwarg_stateful_idx:[1269,1270],label:[43,1149,1150,1151,1152],lamb:[1096,1103,1240,1273],lamb_upd:1096,lambda:[1273,1276,1278,1282],lar:[1096,1103,1104,1240,1273],larger:[922,937,1183,1188],largest:[40,41,922,937,938,1183,1192],lars_upd:1096,last:[40,41,897,902,1119,1129,1132,1135,1139,1144,1153,1156,1159,1183,1185,1190,1199,1210,1226,1227,1237,1238,1239,1257,1267],later:[40,41,1043,1049],latest:[1257,1266],layer:[1096,1099,1101,1103,1105,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1179,1180,1240,1248,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1286],layer_norm:1179,layernorm:[1240,1271],layerwis:[1096,1104,1273,1276],lead:[40,41,42,1132,1142],leading_shap:[40,41],leaf:[15,18,19,40,41,1167,1168,1175],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[897,898,899],leaky_relu:[387,691,897],learn:[1096,1099,1101,1103,1104,1105,1163,1164,1165,1166,1216,1222,1228,1232,1240,1273,1274,1275,1276,1277,1278,1283,1286],learnabl:[1179,1180,1271,1272],least:[43,1132,1138],leav:[15,18,19,40,41,1167,1168,1169,1175,1176],left:[40,41,43,1132,1139,1223,1224,1228,1231,1234,1236,1240],leftmost:[40,41],length:[40,41,42,1132,1145,1183,1185,1207,1209,1211],lenton2021ivi:1240,lenton:1240,less:[40,41,43,108,264,413,567,731,1000,1002,1003,1012,1026,1028,1039,1132,1147,1216,1220],less_equ:[108,413,567,731,1000],let:[1283,1286],level:1240,librari:[1000,1031,1032,1228,1230,1240,1282,1286],lightweight:1240,like:[43,1096,1102,1216,1220,1240,1282,1283,1286],likewis:43,limit:[40,41,42,43,922,937,938,1043,1050,1051,1183,1188],linalg:[29,1240],line:43,linear0:[1240,1282],linear1:1240,linear2:1282,linear:[897,898,899,900,1043,1063,1119,1127,1183,1199,1240,1257,1258,1259,1260,1261,1262,1263,1264,1282],linear_algebra:[1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148],linear_resampl:[189,336,497,649,837,1183],linearli:[1043,1063],link:[43,1240],linspac:[81,243,391,540,703,908,1183,1185],list:[15,18,19,40,41,391,394,400,404,908,909,910,911,917,921,950,959,960,969,970,972,973,974,976,979,980,994,1043,1047,1085,1090,1094,1119,1120,1121,1122,1123,1124,1125,1126,1153,1155,1156,1159,1163,1164,1165,1167,1168,1169,1171,1175,1176,1183,1185,1202,1237,1238,1239,1240,1241,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264],list_join:[40,41,42],list_stack:[40,41],liter:[1132,1147],littl:1283,load:[40,41],loader:1240,local:43,local_set:[1043,1067],locat:[43,1216,1217],log10:[108,413,567,731,1000],log1p:[108,413,567,731,1000],log2:[108,413,567,731,1000],log:[731,908,916,1000,1027,1029,1132,1143,1149,1150,1151,1152],logaddexp:[108,413,567,731,1000],logarithm:[1000,1025,1026,1027,1028,1029,1132,1143],logdet:[1132,1143],logic:[31,1000,1030,1031,1032,1237,1238,1239,1240],logical_and:[108,264,413,567,731,1000],logical_not:[108,264,413,567,731,1000],logical_or:[108,264,413,567,731,1000],logit:[1149,1152],logspac:[81,243,391,540,703,908],look:[43,1283,1286],loop:[1163,1164,1165,1166],loss:[1150,1151,1152,1240,1282],loss_fn:[1240,1282],lot:1283,low:[40,41,1216,1218,1220],lower:[40,41,43,908,913,919,1132,1133,1183,1201,1216,1220],lower_depth:[1269,1270],lowest:[15,18,19,40,41,1167,1176,1216,1218],lstm:[1119,1129,1240,1257],lstm_updat:[43,1119],machin:[922,937,938,1216,1222,1228,1232,1240,1283,1286],made:43,magnitud:[1000,1001,1132,1145],mai:[1000,1019,1024,1031,1032,1043,1057,1183,1185,1191,1226,1227,1228,1230,1240,1283,1286],main:[908,913,919,920,1132,1135,1183,1197,1240],mainli:1240,maintain:[43,1226,1227],make:[43,950,1240,1283],maml:[1163,1164,1165],maml_step:1163,manag:950,manhattan:[1132,1147],mani:[40,41,43,1153,1159,1240],manipul:[1154,1155,1156,1157,1158,1159,1160,1161,1162],manner:[15,18,19,40,41,43,1167,1176],manual:[1167,1168,1175,1286],map:[40,41,42,950,959,1167,1172,1173,1176,1257,1268,1282],map_cont:[40,41],map_nest_at_index:1167,map_nest_at_indic:1167,map_sequ:[40,41],mapper:[950,959,960],mark:43,mask:[1119,1130,1131],master:43,match:[40,41,1043,1075],match_kwarg:1043,math:[33,1240],mathbb:[1132,1148],mathbf:[1132,1148],mathemat:[907,1132,1147],matmul:[43,168,336,476,624,809,1132,1183,1286],matplotlib:1283,matric:[908,919,920,1119,1128,1132,1133,1134,1135,1136,1140,1142,1145],matrix:[40,41,908,919,920,1043,1044,1050,1119,1128,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1145,1148,1183,1200,1257,1267],matrix_norm:[40,41,168,314,476,624,809,1132],matrix_transpos:[168,476,624,809,1132],matter:1240,max:[40,41,222,374,405,526,679,885,922,937,938,1043,1050,1051,1059,1079,1080,1183,1201,1228,1273,1275],max_batch_s:[40,41],max_chunk_s:[950,994],max_depth:[40,41,950,954,957,964,972,976,982,1043,1067,1167,1176],max_dev_dim_step_ratio:950,max_freq:[1043,1063],max_length:[40,41],max_norm:[40,41,1043,1050,1051],max_split_factor_step_s:950,max_trust_ratio:[1096,1103,1273,1275],maxim:[1240,1283,1286],maximis:1240,maximum:[40,41,42,837,950,972,976,982,994,1043,1050,1051,1063,1096,1103,1167,1176,1183,1188,1223,1224,1228,1230],mayb:[15,18,19],mean:[40,41,222,374,526,679,885,950,979,980,981,982,994,1043,1059,1163,1164,1165,1166,1167,1171,1216,1219,1228,1234,1236,1248,1282,1286],measur:[1119,1130,1257,1268],mech:1240,mechan:[1240,1286],medic:1286,member:43,memori:[950,966,989,994,996,999,1119,1129,1240],mention:43,merg:43,merge_with_upstream:43,meshgrid:[336,497,837,1183],messag:[1284,1285],meta:[35,1164,1165,1166,1240],method:[40,41,42,43,908,909,1043,1052,1079,1080,1096,1103,1104,1167,1168,1175,1176,1183,1202,1240,1257,1268,1269,1270,1283],might:[1043,1057,1286],min:[40,41,222,374,405,526,679,885,922,937,938,1043,1059,1079,1080,1086,1132,1142,1145,1147,1183,1203,1228],min_bas:[1043,1087],min_denomin:[1043,1086],min_dev_dim_s:950,min_sf_tune_step:950,min_unit_dev_tune_step:950,mind:1240,mini:[1179,1180,1271,1272],minimum:[40,41,837,908,909,922,927,950,1000,1001,1043,1065,1066,1081,1082,1086,1087,1183,1185,1186,1188,1228,1230,1232],miss:[1273,1277],mix:[922,942],ml_framework:[1183,1185],mod:[1043,1062],mod_depth:[1269,1270],mod_height:[1269,1270],mod_with_top_mod_key_chain:[1269,1270],mode:[40,41,905,906,950,979,980,981,982,994,1132,1142,1144,1283],model:[1240,1282],modul:[40,41,42,59,1183,1204,1240,1241,1243,1244,1245,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1271,1272,1279,1280,1286],moment:[1096,1098,1099,1103,1273,1274,1275],more:[43,1132,1138,1153,1156,1183,1210,1240,1283,1286],most:[40,41,43,1240,1286],move:[40,41,43,950,995],much:[43,1240,1286],multi:[1119,1130,1183,1204,1257,1268],multi_head_attent:1119,multi_index_nest:1167,multi_map:[40,41],multidev:[950,961,962,963,982],multidevcontain:[40,41],multidevic:[950,959],multidevit:[950,953,956,959,960,964],multidevitem:[950,952,955],multidevnest:[950,954,957],multiheadattent:[1240,1257],multinomi:[210,364,519,669,873,1216],multipl:[40,41,1043,1075,1132,1137,1153,1159,1179,1180,1223,1224,1228,1230,1231,1233,1234,1235,1236,1237,1238,1239,1257,1267,1283],multipli:[40,41,1043,1054],multiprocess:[40,41,42,497,837,950,959,1183],must:[40,41,42,43,908,911,912,913,914,917,918,919,920,921,922,926,950,979,980,981,982,994,1000,1001,1002,1003,1005,1007,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1023,1024,1026,1028,1029,1030,1031,1032,1034,1037,1038,1039,1043,1052,1080,1132,1133,1134,1135,1136,1138,1140,1142,1147,1153,1156,1157,1183,1185,1189,1190,1191,1201,1203,1210,1216,1221,1223,1224,1226,1227,1228,1230,1232,1233,1235,1237,1238,1239,1273,1277],mutabl:[1167,1169,1176],mutlidevic:[950,959],mw_tm1:[1096,1099,1103],mx_concat:1240,mxn:[908,919,920,1132,1135,1140,1142,1145],mxnet:[43,1240,1286],my_func:43,mymodel:1240,n_col:[391,396,908,913],n_row:[391,396,908,913],name:[43,905,906,1132,1142,1282],name_of_your_branch:43,name_of_your_pr_branch:43,namedtupl:[1132,1142],namespac:[43,1283],nan:[40,41,43,907,1000,1001,1002,1003,1005,1012,1013,1018,1020,1022,1026,1028,1029,1037,1038,1039,1043,1068,1095,1228,1230,1237,1238,1239],nativ:[15,17,18,19,40,41,43,922,928,935,936,950,966,968,977,978,989,996,999,1240,1241,1246,1247],native_modul:[1246,1247],native_module_class:[1246,1247],nativearrai:[15,18,19,43,908,909,910,912,914,915,916,918,919,920,922,926,927,933,937,938,940,941,942,950,968,994,995,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1050,1051,1053,1054,1055,1058,1059,1060,1062,1063,1068,1079,1080,1090,1091,1092,1094,1095,1132,1133,1136,1138,1140,1143,1144,1145,1147,1148,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1169,1176,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1223,1224,1226,1227,1228,1230,1232,1233,1237,1238,1239],natur:[1000,1025,1027,1132,1143,1286],ncdhw:[1119,1124,1125,1257,1262,1263],nchw:[1119,1122,1123,1126,1257,1260,1261,1264],ncw:[1119,1120,1121,1257,1258,1259],ndarrai:[43,391,394,395,396,397,400,401,402,403,404,405,407,408,409,410,908,910,1043,1091],ndhwc:[1119,1124,1125,1257,1262,1263],ndim:[1132,1142],nearest:[1000,1036],need:[43,1043,1050,1051,1119,1121,1123,1125,1240,1257,1259,1261,1263,1286],neg:[40,41,108,264,413,567,731,897,899,908,913,1000,1020,1021,1132,1147,1153,1156,1237,1238,1239],negative_slop:1248,nest:[15,16,17,18,19,40,41,42,908,909,950,972,976,982,1043,1090,1163,1164,1165,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1269,1270,1273,1274,1275,1276,1277,1278],nested_indices_wher:1167,nested_map:1167,network:[1119,1128,1240,1241,1243,1257,1269,1270,1286],neural:[1119,1240,1243,1257,1282],never:43,new_std:[1179,1180,1271,1272],newli:[43,905,906,1043,1049,1183,1187],newlin:[40,41,42],newshap:[1183,1187,1207],next:[922,937,1269,1270,1273,1274,1275,1276,1277,1278],nhwc:[1119,1122,1123,1126,1257,1260,1261,1264],node:[40,41,1167,1168,1175],noinspect:[43,923,924,925,951,1097],non:[40,41,905,906,922,939,1000,1031,1032,1132,1134,1147,1223,1224,1228,1230,1233,1237,1238,1239,1269,1270,1273,1277,1283],none:[40,41,42,43,59,61,64,391,392,393,394,395,396,397,398,399,400,401,404,411,450,456,457,497,498,501,507,508,509,510,513,514,515,516,905,906,908,909,910,911,912,913,914,915,916,917,918,921,922,930,931,932,937,938,950,959,960,966,967,992,993,994,995,1043,1056,1057,1061,1067,1069,1070,1071,1072,1073,1079,1080,1081,1082,1086,1087,1093,1096,1099,1101,1103,1104,1105,1111,1112,1116,1119,1121,1123,1125,1128,1129,1130,1131,1132,1139,1147,1153,1155,1156,1158,1159,1163,1164,1165,1166,1167,1168,1171,1175,1176,1179,1180,1183,1185,1193,1194,1195,1197,1204,1205,1206,1209,1211,1213,1216,1217,1218,1219,1220,1223,1224,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1246,1247,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],norm:[40,41,1043,1050,1051,1132,1139,1147,1180,1240,1272,1273,1275],normal:[1179,1180,1216,1219,1271,1272],normalized_idx:[1179,1180],normalized_shap:[1271,1272],not_equ:[108,413,567,731,1000],notat:[40,41,1228,1229],note:[43,922,942,1228,1230],noth:[40,41,1283],now:[40,41,43,950,995,1183,1184,1240,1257,1268,1269,1270,1282,1283,1286],np_concat:1240,np_finfo:405,num:[391,398,399,908,915,916],num_arrai:[40,41],num_arrays_in_memori:1043,num_arrays_on_dev:950,num_band:[1043,1063],num_channel:[1257,1264],num_class:[1216,1217],num_cpu_cor:950,num_gpu:[101,411,950],num_head:[1119,1130,1257,1268],num_kei:[1119,1130,1131],num_lay:[1257,1266],num_or_size_split:[40,41,1153,1159],num_queri:[1119,1130,1131],num_sampl:[497,512,1112,1113,1183,1199,1216,1217],num_task:[1163,1164,1165,1166],number:[40,41,42,905,906,907,908,913,915,916,922,934,937,938,940,941,942,950,986,987,988,1000,1012,1018,1043,1063,1076,1092,1095,1119,1130,1132,1143,1144,1153,1154,1155,1157,1158,1159,1161,1162,1163,1164,1165,1166,1183,1185,1188,1196,1197,1199,1201,1216,1217,1221,1228,1230,1231,1233,1234,1235,1236,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1283,1286],numer:[43,1000,1001,1012,1015,1018,1020,1021,1022,1023,1031,1032,1033,1034,1043,1065,1066,1081,1082,1086,1087,1132,1138,1223,1224,1228,1230,1233,1235,1248],numhead:[1119,1130],numpi:[40,41,43,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,450,451,452,453,454,455,456,457,458,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,1043,1091,1132,1144,1228,1229,1240,1282,1283,1286],nwc:[1119,1120,1121,1257,1258,1259],obj:[40,41],object:[40,41,42,59,405,908,909,922,927,937,950,1096,1167,1170,1172,1173,1174,1177,1178,1183,1185,1216,1222,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270],object_in:[391,392,393,908,909],obvious:43,occupi:[922,937,938,1043,1079,1080],occur:[1223,1224],occurr:[1223,1224],off:[1132,1135,1183,1185],offer:1240,offset:[1132,1135,1146,1179,1180],often:1283,old:[40,41,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213],on_init:[1257,1268,1269,1270],onc:[43,950,994,1216,1217,1240],one:[40,41,43,908,913,922,929,950,979,980,981,982,994,1043,1075,1079,1080,1132,1138,1139,1142,1147,1153,1156,1183,1197,1205,1209,1210,1223,1224,1228,1229,1231,1234,1236,1240,1283,1286],one_hot:[189,497,649,837,1183],onearrai:[1153,1155],ones:[40,41,81,243,391,540,703,908,913,918,1183,1197,1205,1240],ones_lik:[81,243,391,540,703,908],ongo:43,onli:[40,41,43,950,1000,1031,1032,1132,1138,1142,1153,1156,1167,1168,1169,1175,1223,1224,1273,1274,1275,1276,1277,1278,1282,1283],onlin:[43,1240],onto:[950,979,980,995,1167,1171,1176],oom:950,open:[1183,1185,1216,1220,1240,1286],opencv:1283,oper:[40,41,908,915,916,922,942,1043,1048,1058,1059,1060,1088,1096,1099,1101,1103,1104,1105,1119,1120,1121,1122,1123,1124,1125,1126,1128,1240,1241],operand:[40,41,1000,1002,1003,1005,1012,1013,1018,1026,1028,1029,1037,1038,1039,1228,1229,1230],oppos:[1043,1063],optim:[950,1096,1099,1101,1103,1104,1105,1163,1164,1165,1166,1240,1274,1275,1276,1278,1282,1286],optimizer_upd:1096,option:[15,18,19,40,41,42,43,391,394,395,396,397,400,401,404,897,898,902,905,906,908,909,910,911,912,913,914,915,916,917,918,921,922,928,930,931,932,933,939,949,950,959,960,968,972,973,974,975,976,979,980,981,982,989,992,993,994,995,999,1043,1044,1050,1051,1054,1056,1057,1063,1068,1074,1075,1079,1080,1083,1086,1087,1094,1095,1096,1099,1101,1102,1103,1104,1105,1107,1112,1116,1119,1127,1128,1130,1131,1132,1139,1147,1149,1150,1151,1152,1153,1155,1156,1158,1159,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1179,1180,1183,1185,1186,1189,1193,1194,1195,1196,1197,1199,1202,1204,1205,1206,1208,1209,1210,1211,1213,1216,1217,1223,1224,1228,1230,1231,1232,1233,1234,1236,1237,1238,1239,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1283],ord:[1132,1144,1147],order:[40,41,42,43,1096,1099,1101,1103,1104,1105,1132,1139,1145,1147,1153,1156,1163,1164,1165,1226,1227,1279,1280],org:1286,organ:43,origin:[40,41,42,1132,1139,1183,1207,1213],orthonorm:[1132,1142],other:[40,41,43,905,906,1043,1044,1096,1100,1183,1185,1197,1216,1220,1240,1282,1283,1286],other_i:43,otherwis:[15,16,17,18,19,40,41,922,930,931,932,950,967,1000,1020,1021,1022,1043,1048,1093,1096,1102,1107,1111,1132,1133,1134,1147,1163,1164,1165,1183,1211,1212,1223,1224,1228,1230,1231,1233,1234,1235,1236,1237,1238,1239],our:[43,1240,1286],out:[43,908,914,917,919,920,921,922,926,937,938,942,1000,1001,1002,1003,1005,1006,1009,1010,1011,1012,1013,1018,1020,1021,1022,1023,1026,1027,1028,1029,1030,1031,1032,1034,1037,1038,1039,1119,1127,1129,1132,1133,1135,1138,1140,1142,1143,1145,1146,1147,1153,1156,1157,1183,1185,1223,1224,1226,1227,1228,1230,1233,1235,1237,1238,1239,1240,1257,1265],out_feat_dim:[1119,1130],out_featur:[1119,1127,1128],out_i:[1000,1020,1021,1022],outdat:1286,outer:[1163,1164,1165,1166],outer_batch_fn:[1163,1164,1165],outer_batch_shap:[1119,1128],outer_cost_fn:[1163,1164,1165],outer_v:[1163,1164,1165],outlin:1283,output:[40,41,43,908,911,912,913,914,917,918,921,950,959,960,994,1000,1007,1043,1049,1096,1100,1119,1121,1123,1125,1127,1129,1130,1131,1153,1156,1158,1161,1183,1185,1193,1197,1216,1218,1219,1220,1240,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268],output_ax:[950,994],output_channel:[1257,1258,1259,1260,1261,1262,1263,1266,1267],output_shap:[1119,1121,1123,1125,1257,1259,1261,1263],outsid:[1183,1188],over:[40,41,1132,1139,1147,1179,1180,1216,1220,1228,1230,1231,1233,1234,1235,1236,1237,1238,1239,1271,1272],overal:1283,overflow:[1183,1185],overhead:1283,overrid:[1183,1205,1213],overriden:[1273,1277],overwrit:[40,41,950,994],overwrite_at_key_chain:[40,41],own:[1240,1283,1286],packag:[43,1283],pad:[1043,1063,1119,1120,1121,1122,1123,1124,1125,1126,1153,1154,1162,1257,1258,1259,1260,1261,1262,1263,1264],pad_width:[1153,1154,1162],page:1240,pair:[1119,1131],parallel:[950,959,960],parallelis:[950,959,960],param:[40,41,42,497,508,509,908,911,913,918,950,994,1000,1040,1043,1057,1132,1136,1183,1184,1194,1195,1205,1206,1228,1232,1269,1270,1282],paramet:[15,16,17,18,19,40,41,42,43,897,898,899,900,901,902,903,904,905,906,908,909,911,912,913,914,915,916,918,922,926,927,928,929,933,934,935,936,939,940,941,949,950,959,960,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,989,992,993,994,995,996,999,1000,1004,1006,1007,1008,1014,1015,1016,1017,1019,1021,1024,1025,1033,1035,1036,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1053,1054,1055,1058,1059,1060,1061,1062,1063,1068,1070,1071,1072,1074,1075,1079,1080,1081,1082,1083,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1139,1140,1141,1142,1144,1148,1149,1150,1151,1152,1153,1154,1155,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1183,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1228,1229,1231,1232,1233,1234,1235,1236,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282],parameter:[1216,1219,1220],pardo:1240,pars:[1043,1052],part:[908,919,920,1000,1006,1096,1099,1101,1103,1104,1105,1240,1269,1270,1283],partial:[40,41,43,1269,1270],particl:1286,particular:[43,1000,1001,1286],pass:[40,41,42,43,922,928,950,959,994,1043,1049,1096,1110,1163,1164,1165,1246,1247,1269,1270,1273,1277,1279,1280],pattern:[40,41,1043,1058,1059,1060],peopl:43,per:[950,1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],percent_used_mem_on_dev:950,percentag:[950,989],perform:[40,41,43,897,902,908,915,916,950,1043,1054,1058,1059,1060,1070,1071,1072,1096,1099,1101,1103,1104,1105,1112,1113,1119,1127,1129,1163,1164,1165,1166,1167,1172,1173,1183,1186,1199,1228,1231,1234,1236,1237,1238,1239],period:43,permit:43,permut:[1153,1157,1160,1183,1211],permute_dim:[183,491,639,826,1153],perpendicular:[1183,1190],person:[43,1240],physci:1286,pickl:[40,41],pickle_filepath:[40,41],pinv:[314,809,1132],pip:1240,pipelin:1282,pkk:1286,pkkm1:1286,pkm1km1:1286,place:[40,41,43,908,910,911,912,913,914,917,918,921,950,995,1043,1070,1071,1072,1153,1155,1183,1193,1273,1274,1275,1276,1277,1278],placehold:[43,1167,1176],pleas:43,point:[43,907,908,911,913,917,921,922,937,940,942,1000,1002,1003,1005,1012,1013,1015,1018,1026,1028,1029,1037,1038,1039,1132,1133,1134,1136,1142,1147,1183,1185,1228,1230,1233,1235],popul:[40,41,1216,1217],popular:1286,population_s:[1216,1217],portabl:[1240,1241],posit:[15,16,17,108,413,567,731,908,913,922,937,950,972,976,982,1000,1001,1020,1021,1043,1063,1132,1133,1153,1155,1183,1184,1185,1216,1221,1237,1238,1239,1246,1247],possibi:[40,41],possibl:[43,1043,1075,1090,1112,1117,1228,1230,1286],post:[1179,1180],post_shap:[40,41],power:[43,1043,1065,1081,1087,1248],practic:1240,pre:[950,1240],pre_shap:[40,41],precis:[922,937,1000,1039],pred:[1149,1150,1151,1152],predict:[1149,1150,1151,1152,1286],prepend:[1132,1138],preprint:1240,present:[40,41],preserv:[40,41,42,1096,1107,1153,1156],preserve_typ:[40,41,1096,1107],press:1240,prevent:[43,1096,1098,1099,1103,1273,1274,1275],prevet:43,previou:[1096,1099,1103],previous:[1043,1049],prime:1240,princip:[1000,1002],print:[40,41,42,950,990,1043,1077,1240,1282],print_all_arrays_in_memori:1043,print_all_arrays_on_dev:950,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1273,1277],prob:[1119,1127,1216,1217,1257,1265],probabl:[1119,1127,1216,1217,1257,1265],problem:[43,1286],process:[43,950,959,960,989,999,1183,1204],process_specif:[950,989,999],prod:[40,41,222,374,526,679,885,1043,1059,1228],produc:[950,959,960],product:[40,41,1043,1054,1119,1130,1131,1132,1138,1183,1190,1200,1228,1229,1233,1257,1268],profil:[101,258,411,560,723,950],progress:43,project:[1240,1282,1283,1286],promot:[43,922,942,1000,1002,1003,1005,1009,1011,1013,1015,1026,1028,1029,1037,1038,1039,1132,1133,1138,1147],prompt:1240,propag:[1228,1230],properli:43,properti:[40,41,405,950,962,1269,1270,1273,1274,1275,1276,1278],provid:[40,41,43,905,906,922,930,931,932,939,942,949,950,967,1043,1057,1080,1096,1099,1101,1103,1104,1105,1111,1153,1156,1183,1205,1213,1223,1224,1237,1238,1239,1240,1257,1266,1273,1274,1275,1276,1277,1278,1283],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1132,1141],pull:[1240,1241],pure:[40,41,1240,1286],purpos:[43,1286],pyshadowingbuiltin:43,pyshadowingnam:[923,924,925,951,1097],python:[40,41,950,989,999,1183,1185,1240],pytorch:[1096,1099,1101,1103,1104,1105,1240,1273,1274,1275,1276,1277,1278,1282,1283,1286],quadrant:[1000,1007],qualiti:43,queri:[40,41,950,983,993,1119,1130,1131,1257,1268],query_dim:[1257,1268],query_kei:[40,41],queue:[40,41,42,950,959,960,1043,1078,1083],queue_class:[950,959,960],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1043],quick:1240,quickli:[43,1282],radian:[1000,1002,1004,1007,1013,1037,1041],rais:[40,41,43,922,926,1043,1048,1065,1081,1087,1093,1183,1209,1228,1230,1237,1238,1239,1269,1270,1273,1277],ram:[950,989,996,999],randint:[210,364,669,873,1216],random:[37,40,41,1217,1218,1219,1220,1221,1222,1240],random_crop:1112,random_norm:[210,364,669,873,1216],random_uniform:[210,364,669,873,1216],randomli:[1112,1116,1119,1127,1257,1265],rang:[908,915,916,1000,1007,1183,1185,1228,1233,1235,1240,1282,1286],rank:[1043,1094,1132,1142,1147,1153,1154,1162,1237,1238,1239],rate:[1096,1099,1101,1103,1104,1105,1163,1164,1165,1166,1257,1268,1273,1274,1275,1276,1277,1278],rather:[40,41,43,950,994,1043,1074,1096,1102,1183,1185],ratio:[950,1096,1103,1112,1117,1273,1275],raw:[40,41],reach:[43,950,972,976,982,1167,1176],read:[40,41],readi:1282,real:[1000,1006],realiti:1283,rearrang:[40,41,1043,1058,1060],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1163,1165],receiv:[43,950,959,960,1043,1045,1075,1257,1267],receivess:950,receivng:[1163,1166],recev:[1163,1164,1165],recognit:1286,recommend:[1000,1031,1032,1240],rectifi:[897,899,900],recurr:[1119,1129],recurrent_bia:[1119,1129],recurrent_kernel:[1119,1129],recurs:[40,41,1167,1168,1169,1175,1176],redefin:43,reduc:[40,41,950,994,1043,1059,1132,1142,1223,1224,1228,1230,1231,1233,1234,1236,1237,1238,1239],reduce_max:[40,41],reduce_mean:[1240,1282],reduce_min:[40,41],reduct:[39,40,41,450,456,457,1043,1059,1079,1080,1237,1238,1239,1240],refactor:43,refer:[43,908,913,1000,1027,1096,1098,1099,1132,1148,1237,1238,1239,1257,1267,1286],reflect:43,reflected_oper:[0,13,14],regard:950,regardless:[40,41,905,906],register_paramet:1282,reimplement:1286,rel:[1096,1099,1101,1103,1104,1105,1132,1135,1153,1156,1226,1227],relat:43,relev:[1273,1274,1275,1276,1277,1278],relu:[387,691,897,898,899,1240,1282],remain:[43,1167,1171,1183,1207],remaind:[40,41,1043,1062,1153,1159],remov:[40,41,43,1132,1135,1138,1163,1164,1165,1183,1209],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,1153,1156],rep:[1153,1161],repeat:[40,41,43,327,826,1043,1060,1153,1161,1283],repeated_config_check:950,repeatedli:[1167,1174],repetit:[40,41,1153,1158,1161],replac:[40,41,43,1043,1079,1080,1183,1188,1216,1217],repo:[43,1240],repositori:43,repres:[43,922,929,934,1000,1003,1005,1038,1119,1128,1132,1143],represent:[40,41,42,43,907,922,929,935,936,937,938,950,977,978,1000,1001,1009,1011,1043,1085,1090],reptil:[1163,1166],reptile_step:1163,request:[1240,1241],requir:[43,905,906,908,909,922,927,1000,1039,1183,1185,1246,1247],resampl:[1183,1199],reserv:43,reshap:[40,41,43,837,1183],reshape_lik:[40,41],resolv:[1228,1233,1235],respect:[1000,1001,1009,1011,1015,1019,1023,1024,1029,1030,1032,1034,1096,1098,1099,1100,1101,1103,1104,1105,1132,1142,1163,1164,1165,1166,1183,1191],respond:43,respons:43,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,922,942,950,959,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1037,1038,1039,1040,1043,1079,1080,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1132,1133,1135,1139,1147,1183,1185,1191,1210,1223,1224,1228,1230,1231,1233,1234,1236,1237,1238,1239,1240],result_typ:[95,405,554,717,922],ret_fn:[950,959,960],retain:[1096,1100],retain_grad:[1096,1100],retrn:[1043,1085],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1163,1164,1165,1166],return_sequ:[1257,1266],return_st:[1257,1266],rev:[1043,1057],revers:[40,41,1043,1057,1153,1156,1183,1211],review:43,right:[40,41,43],rk_e:1286,robot:1240,ronald:1240,root:[43,1000,1039],round:[108,264,413,567,731,1000,1012,1018,1039,1183,1185],row:[908,913,1183,1197,1216,1217],rule:[43,922,942,1000,1015,1132,1133,1183,1185],run:[43,950,959,1096,1098,1099,1103,1163,1164,1165,1166,1240,1241,1257,1268,1269,1270],safe:[950,959],safety_factor:950,same:[15,16,17,40,41,43,908,912,914,918,919,920,922,926,927,950,959,960,994,995,1000,1001,1006,1010,1012,1018,1036,1043,1062,1079,1080,1096,1102,1107,1119,1120,1121,1122,1123,1124,1125,1126,1132,1133,1134,1135,1136,1140,1142,1144,1153,1156,1157,1163,1164,1165,1183,1184,1189,1192,1194,1195,1205,1210,1213,1226,1227,1228,1229,1230,1233,1235,1240,1257,1258,1259,1260,1261,1262,1263,1264,1282,1286],same_arrai:[40,41],sampl:[1112,1113,1119,1127,1183,1199,1216,1217,1219,1220,1240,1257,1265],satisfi:[908,909,1132,1137,1148],save:[40,41,1043,1084,1089,1112,1114,1269,1270],save_dir:[411,412,950,965],save_weight:[1269,1270],scalar:[908,914,1043,1092,1095,1132,1147,1183,1188,1205],scale:[950,992,993,1096,1104,1119,1127,1130,1131,1179,1180,1257,1265,1268,1273,1276],scaled_dot_product_attent:1119,scatter:[1043,1079,1080,1183,1205],scatter_flat:[144,286,450,603,774,1043],scatter_nd:[144,286,450,603,774,1043],scene:[1096,1099,1101,1103,1104,1105],schemat:1240,screen:[40,41],script:43,search:[15,18,19,40,41,1224],second:[40,41,950,981,1000,1009,1011,1019,1023,1024,1029,1030,1032,1034,1043,1046,1078,1083,1096,1098,1099,1103,1132,1135,1138,1142,1153,1160,1163,1165,1183,1190,1191,1273,1274,1275],secondli:1286,sector:[1000,1003,1005],see:[43,59,405,411,412,908,915,916,922,926,942,950,962,963,964,965,1000,1009,1011,1015,1023,1029,1032,1034,1096,1132,1147,1183,1185,1228,1230,1233,1237,1238,1239,1240,1248,1250,1251,1253,1254,1256],seed:[40,41,210,873,1216],seed_valu:[40,41,1216,1221],seem:1240,seen_set:[1043,1067],select:[908,909,1183,1209,1283,1286],self:[40,41,43,59,405,411,412,922,950,962,963,964,965,1096,1240,1248,1250,1251,1253,1254,1256,1273,1277,1282,1286],sentinel:[1228,1230],seper:[43,1043,1063],seq:[40,41,42,1228,1229,1269,1270],sequenc:[15,16,17,40,41,42,43,905,906,908,909,922,927,950,959,960,969,970,971,972,973,974,975,976,979,980,994,1043,1047,1075,1080,1096,1100,1112,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1132,1139,1153,1154,1158,1159,1161,1162,1167,1178,1179,1180,1183,1185,1187,1189,1197,1202,1206,1207,1210,1211,1216,1218,1220,1228,1231,1234,1236,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1266,1269,1270,1271,1272,1273,1277,1279,1280],sequenti:1240,seri:43,set:[15,18,19,40,41,950,979,980,992,993,994,1043,1044,1056,1081,1082,1083,1084,1096,1099,1101,1102,1103,1104,1105,1132,1139,1167,1168,1175,1177,1178,1183,1197,1216,1217,1221,1223,1224,1226,1227,1228,1231,1234,1236,1240,1257,1266,1273,1274,1275,1276,1277,1278,1283,1286],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:950,set_default_dtyp:922,set_default_float_dtyp:922,set_default_int_dtyp:922,set_exception_debug_mod:44,set_framework:[40,41,43,59,1240,1282,1283,1286],set_ivy_backend:[40,41],set_min_bas:1043,set_min_denomin:1043,set_nest_at_index:1167,set_nest_at_indic:1167,set_queue_timeout:1043,set_split_factor:950,set_stat:[1273,1274,1275,1276,1277,1278],set_tmp_dir:1043,set_with_grad:1096,sever:1286,sgd:[1240,1273],shape:[40,41,43,391,394,400,404,405,407,450,457,497,507,837,908,911,912,914,917,918,919,920,921,922,926,927,950,962,1000,1006,1007,1036,1043,1062,1079,1080,1085,1112,1116,1119,1121,1123,1125,1132,1133,1134,1135,1136,1137,1138,1140,1142,1145,1153,1154,1155,1156,1158,1162,1183,1184,1187,1189,1192,1193,1195,1196,1197,1205,1206,1207,1209,1210,1213,1216,1218,1219,1220,1223,1224,1226,1227,1228,1229,1257,1259,1260,1261,1262,1263,1264,1271,1272],shape_slic:[40,41],shape_to_tupl:1043,share:[40,41,1240,1283],should:[40,41,42,43,905,906,908,919,920,922,926,950,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1020,1021,1022,1023,1026,1028,1029,1030,1031,1032,1034,1037,1038,1039,1043,1049,1052,1096,1099,1101,1103,1104,1105,1132,1133,1134,1135,1138,1142,1147,1183,1187,1205,1207,1223,1224,1228,1229,1230,1233,1235,1240],show:[40,41,1240,1286],show_mod_in_top_mod:[1269,1270],show_structur:[1269,1270],show_sub_contain:[40,41],show_v:[1269,1270],show_v_in_top_v:[1269,1270],shown:[40,41],shuffl:[40,41,210,873,1216],shuffle_h5_fil:[40,41],side:43,sigmoid:[387,691,897,1240,1282],sign:[1000,1001,1132,1143,1228,1233,1235],signatur:[43,59,387,405,411,412,450,497,922,950,962,963,964,965,1096,1248,1250,1251,1253,1254,1256],signific:1286,similar:[43,1119,1130,1257,1268],simpl:[43,1043,1061,1240,1283,1286],simpler:43,simplest:1283,simpli:[40,41,43,1240,1283,1286],simultan:1240,sin:[108,264,413,567,731,1000,1041,1043,1063,1283],sinco:1283,sine:[1000,1004,1005,1037,1038],singl:[40,41,905,906,950,959,960,979,980,981,982,1043,1092,1095,1112,1117,1183,1209,1216,1219,1220,1228,1231,1234,1236,1240,1283,1286],singleton:[1132,1147,1228,1230,1233,1237,1238,1239],singular:[1132,1144,1145],sinh:[108,264,413,567,731,1000],siren:[1240,1248],situat:43,size:[40,41,42,450,456,908,915,916,950,973,974,975,976,992,993,994,1043,1079,1112,1116,1132,1135,1139,1142,1144,1153,1159,1183,1185,1187,1216,1217,1219,1220,1223,1224,1228,1231,1234,1236,1237,1238,1239,1257,1258,1259],size_ordered_arrai:[40,41],skew:[1132,1148],skinv:1286,skip:[40,41],slice:[40,41,1167,1174,1183,1194,1195],slice_kei:[40,41],slice_obj:[40,41],slice_via_kei:[40,41],slide:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],slodget:1132,slogdet:[168,314,476,624,809],slope:[897,899],small:[1149,1150,1151,1152,1179,1180,1240,1271,1272,1283],smaller:[1183,1188,1228,1233,1235],smallest:[40,41,922,937,938,1000,1012,1183,1186],smallest_norm:[405,922,937],softmax:[75,387,691,897,1119,1130,1131],softplu:[387,691,897],solut:43,solv:1286,some:[40,41,43,1096,1098,1099,1101,1103,1104,1105,1110,1119,1127,1183,1185,1240,1257,1265,1283,1286],some_backend:43,some_namespac:43,someth:[43,1286],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,1132,1144,1145,1227],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,450,451,452,453,454,455,456,457,458,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,897,898,899,900,901,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1243,1244,1245,1246,1247,1248,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1284,1285,1286],space:[908,915,916,1043,1063,1183,1185],spars:[1149,1152],sparse_cross_entropi:1149,spawn:[1183,1204],special:[43,1000,1001,1002,1003,1005,1012,1013,1018,1026,1028,1029,1037,1038,1039,1228,1230],specif:[40,41,43,922,942,950,992,1000,1031,1032,1043,1052,1058,1059,1060,1163,1164,1165,1166,1183,1204,1216,1222,1228,1230,1240,1269,1270,1282,1283],specifc:[1216,1217],specifi:[40,41,43,908,909,911,915,916,917,919,920,921,922,926,927,929,950,969,970,971,972,973,974,975,976,979,980,984,986,990,993,994,995,1043,1068,1094,1132,1135,1139,1147,1153,1154,1156,1162,1167,1172,1173,1177,1178,1183,1185,1186,1188,1189,1193,1194,1195,1210,1223,1224,1226,1227,1228,1229,1231,1233,1234,1235,1236,1237,1238,1239],sphinx:43,split:[40,41,183,327,491,639,826,950,959,973,974,975,976,992,993,994,1043,1075,1153],split_factor:[950,959],split_func_cal:950,spread:[950,982],sqrt:[108,264,413,567,731,1000,1132,1147],squar:[108,264,413,567,731,1000,1039,1132,1133,1134,1136,1137,1143,1183,1197],squeez:[189,336,497,649,837,1183],stabil:[1043,1086,1087,1226,1227],stabl:[1043,1065,1066,1081,1082,1086,1087,1226,1227],stable_divid:1043,stable_pow:1043,stack:[40,41,336,837,908,919,920,1112,1117,1132,1134,1135,1136,1138,1140,1142,1145,1167,1168,1175,1183,1257,1266],stack_imag:[156,302,464,616,797,1112],stage:43,standard:[40,41,922,937,1179,1180,1216,1219,1228,1234,1240,1241,1271,1272],start:[40,41,43,391,398,399,411,412,497,498,908,915,916,950,965,1183,1185,1240,1283],starting_index:[40,41],starting_split_factor:950,state:[1119,1129,1240,1243,1244,1245,1246,1247,1248,1250,1251,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282],statement:1283,static_argnam:[497,501,905,906],static_argnum:[497,501,905,906],statist:[1229,1230,1231,1232,1233,1234,1235,1236],std:[40,41,374,1216,1219,1228],step:[40,41,497,498,908,915,916,950,1096,1098,1099,1101,1103,1104,1105,1163,1164,1165,1166,1183,1185,1240,1273,1274,1275,1276,1277,1278,1282,1286],stephen:1240,stick:1240,still:[40,41,43],stochast:[1273,1278],stop:[40,41,391,398,399,411,412,497,498,908,915,916,950,965,994,1096,1099,1101,1103,1104,1105,1107,1163,1164,1165,1166,1183,1185,1273,1274,1275,1276,1277,1278],stop_gradi:[40,41,297,459,611,791,950,994,1096,1099,1101,1103,1104,1105,1163,1164,1165,1166,1273,1274,1275,1276,1277,1278],store:[40,41,1043,1063,1096,1110,1153,1159,1269,1270],store_var:[1269,1270],str:[15,16,17,40,41,42,43,391,394,395,396,397,400,401,404,405,408,409,905,906,908,909,910,912,914,918,922,928,929,930,931,932,934,935,936,937,938,939,940,941,943,944,945,949,950,959,960,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,994,1043,1056,1058,1059,1060,1079,1080,1132,1139,1142,1163,1164,1165,1166,1167,1171,1183,1202,1204,1206,1228,1229,1233,1246,1247,1257,1268,1269,1270],straight:1283,strength:[1240,1286],stride:[1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],string:[40,41,43,908,909,922,927,933,935,936,939,949,950,966,968,977,978,983,989,995,996,999,1043,1056,1119,1120,1121,1122,1123,1124,1125,1126,1183,1185,1197,1206,1213,1257,1258,1259,1260,1261,1262,1263,1264,1269,1270],structur:[40,41,42,43,1043,1052],structural_diff:[40,41],style:43,sub:[40,41,43,950,973,974,979,980,981,982,1132,1135,1153,1159,1163,1164,1165,1166],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_mod:[1269,1270],sub_modul:[1279,1280],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1240,1241,1271,1272,1279,1280],subsequ:43,subset:43,substr:[40,41],suggest:1240,suitabl:[1112,1117],sum:[40,41,222,374,450,456,457,526,679,885,950,979,980,981,982,994,1000,1029,1043,1055,1059,1079,1080,1132,1146,1147,1228,1229],summat:[40,41,1228,1229],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,76,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,154,155,157,158,159,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,215,216,218,221,223,224,225,226,227,228,229,231,232,235,244,245,246,247,248,249,250,251,252,253,255,256,257,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,298,299,300,301,303,304,305,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,366,367,368,370,373,375,376,377,378,379,380,381,382,384,385,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,406,407,408,409,410,412,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,455,456,457,458,460,461,462,463,465,466,467,469,470,471,472,473,474,475,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,520,522,525,527,528,529,530,531,532,533,535,536,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,559,561,562,563,564,565,566,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,625,626,627,628,629,630,631,632,633,634,635,636,637,638,640,641,642,643,644,645,646,647,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,670,671,672,673,675,678,680,681,682,683,684,685,686,688,689,692,693,694,695,696,697,698,701,702,704,705,706,707,708,709,710,711,712,713,714,715,716,718,719,720,721,722,724,725,726,727,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,798,799,800,802,803,804,805,806,807,808,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,827,828,829,830,831,832,833,834,835,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,874,875,876,877,878,879,881,884,886,887,888,889,890,891,892,894,895,898,899,900,901,902,903,904,906,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1180,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1217,1218,1219,1220,1221,1222,1224,1227,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1244,1245,1247,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1283,1285,1286],supports_inplac:1043,suppos:1286,sure:43,svd:[168,314,476,624,809,1132],svdval:[168,476,624,809,1132],swap:[40,41,1153,1160],swapax:[40,41,639,826,1153,1286],symmetr:[1132,1133,1136,1148],syntax:[387,411,450,497],tab:1240,take:[43,1183,1199],taken:[43,1132,1135,1228,1231,1234,1236],tan:[731,1000,1006],tangent:[897,904,1000,1006,1007,1008,1041,1042],tanh:[108,264,413,567,691,731,897,1000],target:[40,41,950,966,969,970,971,972,973,974,975,976,979,980,981,982,995,1240],target_dict:[40,41],task:[43,1163,1164,1165,1166],team:[43,1286],templat:1240,temporari:[1043,1084,1089],tensor:[40,41,43,450,456,457,908,915,916,922,933,950,968,1043,1079,1080,1119,1127,1129,1153,1159,1183,1185,1186,1187,1201,1203,1205,1206,1207,1213,1216,1217,1218,1240,1257,1265,1267,1273,1274,1275,1276,1277,1278,1282,1283],tensorflow:[43,1119,1121,1123,1125,1240,1257,1259,1261,1263,1283,1286],term:[40,41,43,1119,1129,1240,1257,1267],termcolor:[40,41,42],termin:[40,41,42],test:[43,922,940,941,1000,1020,1021,1022,1237,1238,1239],test_array_api:43,tf_concat:1240,than:[40,41,43,922,937,950,994,1000,1002,1003,1012,1018,1026,1028,1039,1043,1074,1096,1102,1132,1138,1147,1153,1156,1183,1185,1188,1192,1201,1209,1210,1216,1220,1228,1233,1235,1240,1283],thei:[40,41,43,1000,1007,1163,1164,1165,1216,1217,1240,1279,1280,1283],them:[1240,1286],themselv:[1167,1168],therefor:43,thi:[40,41,42,43,908,910,950,972,976,982,989,994,999,1000,1001,1031,1032,1043,1063,1078,1083,1096,1099,1101,1102,1103,1104,1105,1110,1119,1128,1132,1139,1143,1146,1167,1171,1176,1183,1185,1207,1223,1224,1228,1231,1234,1236,1240,1269,1270,1273,1274,1275,1276,1277,1278,1282,1283,1286],thing:[43,1240],those:[40,41,43,1096,1110,1132,1142,1144,1183,1188],though:43,thought:43,threshold:[1183,1201,1203],through:[40,41,43],tick:43,tickbox:43,tile:[327,639,826,1153],time:[43,1096,1099,1103,1119,1129,1153,1161,1163,1164,1165,1166,1216,1217,1223,1224,1257,1268,1269,1270,1286],timeout:[40,41,42,950,959,960,1043,1078,1083],timestep:[1119,1129,1257,1266],titl:[43,1240],tmp_dir:1043,tmp_dr:[1043,1084],to_appli:[40,41],to_clon:950,to_dev:[40,41,101,258,411,560,723,950],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:950,to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1240],to_ivy_modul:[78,700,1240,1246],to_json:[40,41],to_kv_fn:[1119,1130],to_kv_v:[1119,1130],to_list:[40,41,450,774,1043],to_multi_dev:[40,41],to_mut:[1167,1169,1176],to_n:[15,40,41,1240],to_numpi:[40,41,450,774,1043,1240,1282],to_out_fn:[1119,1130],to_out_v:[1119,1130],to_q_fn:[1119,1130],to_q_v:[1119,1130],to_raw:[40,41],to_scalar:[450,774,1043],todo:[1240,1241],togeth:[40,41,1279,1280],tool:[1240,1283],top_mod:[1269,1270],topic:1286,torch:[43,905,906,1240,1282,1283,1286],torch_concat:1240,torchfcmodel:1282,total:[40,41,42,950,996],total_mem_on_dev:950,tpu:[950,997],tpu_is_avail:[411,560,723,950],trace:[40,41,168,314,476,624,809,1043,1074,1132],track:[43,950,1167,1176,1269,1270],track_submod_call_ord:[1269,1270],track_submod_ret:[1269,1270],trail:[1271,1272],train:[1096,1098,1099,1103,1240,1241],trainabl:[1096,1102,1240,1241,1246,1247,1269,1270,1279],trainer:1240,tran:1286,transform:[1119,1127,1128],transpos:[40,41,189,336,497,837,950,981,1119,1121,1123,1125,1132,1140,1183,1257,1259,1261,1263],travers:[15,18,19,40,41,1167,1176],treat:[40,41,905,906],tri:[40,41],triangular:[908,919,920,1132,1133,1142],trigonometr:[1000,1006],tril:[81,243,391,540,703,908],trim_kei:[40,41],triu:[81,391,540,703,908],trust:[1096,1103,1273,1275],truth:[1000,1019,1023,1024,1034,1183,1191],try_else_non:1043,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:950,tune_dev_alloc:950,tune_dev_split:950,tune_step:950,tupl:[15,16,17,18,19,40,41,43,391,394,400,404,405,407,905,906,908,910,911,917,921,922,926,1043,1063,1085,1132,1144,1147,1153,1154,1155,1156,1157,1162,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1183,1193,1216,1218,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239],tutori:43,two:[40,41,908,913,919,920,1043,1046,1132,1133,1134,1135,1136,1138,1139,1140,1142,1143,1144,1145,1146,1153,1160,1183,1185,1190,1200],type:[15,18,40,41,42,43,59,408,409,411,412,908,909,911,912,913,914,917,918,919,920,921,926,927,928,929,933,934,935,936,937,938,939,940,941,942,949,950,962,963,964,965,977,978,982,994,1000,1001,1002,1003,1005,1009,1010,1011,1012,1013,1015,1018,1019,1020,1021,1022,1023,1024,1026,1028,1029,1030,1031,1032,1034,1036,1037,1038,1039,1043,1052,1057,1062,1074,1088,1095,1096,1102,1107,1132,1133,1134,1135,1136,1138,1140,1142,1147,1153,1156,1157,1183,1184,1185,1189,1191,1192,1193,1197,1205,1206,1213,1223,1224,1226,1227,1228,1230,1233,1235,1237,1238,1239,1240,1248,1250,1251,1253,1254,1256,1269,1270,1283],types_to_iteratively_nest:[40,41,42],uint16:[1228,1233,1235],uint32:[1228,1233,1235],uint64:[1228,1233,1235],uint8:[1112,1114,1118],uint8_img_to_float_img:1112,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[1000,1009,1011],underwai:43,unecessari:43,unfairli:43,unifi:[40,41,950,979,980,981,982,994,1240],uniform:[40,41,1216,1217,1219,1220,1248,1250,1251,1254,1255],uniformli:[1216,1218,1220],uniniti:[908,911,912],union:[15,18,19,40,41,43,391,394,395,397,400,401,404,405,408,409,410,905,906,908,909,910,911,912,914,915,916,917,918,919,920,921,922,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,949,950,968,973,974,975,976,994,995,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1050,1051,1053,1054,1055,1058,1059,1060,1062,1063,1068,1079,1080,1085,1090,1091,1092,1094,1095,1132,1133,1136,1138,1140,1143,1144,1145,1147,1148,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1167,1168,1169,1175,1176,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205,1206,1207,1208,1209,1210,1211,1212,1213,1223,1224,1226,1227,1228,1230,1232,1233,1237,1238,1239],uniqu:[950,959,960,1163,1164,1165,1166,1167,1171],unit:[43,897,898,899,900,950,1000,1004],unitari:[1132,1144],unless:[1183,1205,1213],unlik:950,unnorm:[1216,1217],unpack:[1043,1094],unrol:[1119,1129],unset:1283,unset_debug_mod:44,unset_default_devic:950,unset_default_dtyp:922,unset_default_float_dtyp:922,unset_default_int_dtyp:922,unset_framework:[59,1283],unset_with_grad:1096,unsign:[1228,1233,1235],unstack:[40,41,144,286,450,603,774,1043],until:43,unus:[905,906],updat:[40,41,450,456,457,950,959,1043,1072,1079,1080,1096,1098,1099,1101,1103,1104,1105,1119,1129,1163,1164,1165,1167,1172,1173,1177,1178,1240,1241,1246,1247,1273,1274,1275,1276,1277,1278,1283,1286],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,908,913,920,1132,1133,1142,1216,1220],upper_depth:[1269,1270],upstream:43,usabl:[1240,1286],usag:[950,994],use:[40,41,42,43,950,959,960,985,997,1043,1086,1087,1119,1130,1153,1158,1179,1180,1240,1271,1272,1283,1286],used:[40,41,43,922,934,950,959,989,992,993,999,1043,1065,1066,1075,1079,1080,1081,1082,1096,1103,1104,1132,1135,1139,1163,1164,1165,1166,1167,1176,1183,1213,1257,1268,1273,1275,1276,1282,1283],used_dev:[950,959],used_mem_on_dev:950,useful:[40,41,950,994,1119,1128,1240,1283],user:[1240,1257,1268,1269,1270,1283,1286],uses:1240,using:[40,41,43,1096,1098,1099,1119,1127,1131,1167,1170,1174,1228,1229,1240,1257,1265,1282,1283,1286],util:[950,983,1238,1239],v_with_top_v_key_chain:[1269,1270],val:[40,41,450,452,453,454,1043,1070,1071,1072,1081,1082],valid:[922,928,1043,1086,1087,1119,1120,1121,1122,1123,1124,1125,1126,1237,1238,1239,1257,1258,1259,1260,1261,1262,1263,1264],valid_dtyp:922,valu:[40,41,908,913,914,915,916,950,962,993,994,1000,1001,1002,1012,1016,1017,1018,1019,1023,1024,1025,1034,1035,1036,1043,1050,1051,1052,1057,1063,1078,1079,1080,1081,1082,1083,1095,1096,1100,1103,1112,1118,1119,1130,1131,1132,1142,1143,1144,1145,1146,1147,1153,1154,1158,1162,1163,1164,1165,1167,1171,1172,1173,1177,1178,1179,1180,1183,1184,1185,1186,1188,1191,1193,1194,1195,1201,1203,1207,1211,1212,1216,1219,1220,1223,1224,1226,1227,1228,1230,1232,1233,1235,1257,1268,1271,1272,1273,1275],value_is_nan:1043,vanilla:[1163,1165],var_shap:1248,variabl:[15,16,17,18,19,40,41,297,459,611,791,1043,1048,1070,1071,1072,1073,1074,1088,1096,1099,1100,1101,1102,1103,1104,1105,1107,1110,1119,1130,1163,1164,1165,1166,1179,1180,1246,1247,1248,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280],variable_data:[791,1096],varianc:[40,41,1228,1236,1286],varieti:1283,variou:[43,1240],vector:[40,41,1043,1051,1119,1128,1132,1138,1144,1145,1147,1148,1183,1190,1257,1267],vector_norm:[40,41,168,314,476,624,809,1132],vector_to_skew_symmetric_matrix:[168,314,476,624,809,1132],verbos:1285,veri:[43,1240],verifi:43,version:43,via:[1167,1168,1175,1283],view:[1112,1117],vision:1240,visual:1283,volum:[1119,1124],vw_tm1:[1096,1099,1103],wai:[1283,1286],wait:[40,41,42,43],want:[43,1240,1283,1286],warn:[59,66,67,68,69,70],warp:[1112,1113],watch:1282,websit:43,weight:[1096,1098,1099,1101,1103,1104,1105,1119,1128,1129,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1269,1270,1273,1275,1276],weight_initi:[1257,1258,1259,1260,1261,1262,1263,1264,1266,1267],weights_path:[1269,1270],well:[40,41,1043,1068],were:[40,41],what:[43,1240],when:[40,41,42,43,950,1043,1049,1087,1132,1144,1183,1212,1223,1224,1228,1230,1240,1269,1270,1283,1286],where:[40,41,43,336,497,837,908,913,914,1000,1027,1132,1142,1144,1145,1153,1154,1155,1157,1162,1167,1168,1175,1183,1185,1187,1188,1198,1205,1216,1217,1237,1238,1239],wherea:43,wherebi:[1167,1176],whether:[15,18,19,40,41,42,897,898,905,906,922,933,939,940,941,949,950,968,981,985,989,994,997,999,1000,1022,1043,1044,1046,1047,1054,1057,1061,1063,1068,1069,1073,1074,1075,1088,1094,1095,1096,1099,1100,1101,1102,1103,1104,1105,1107,1119,1127,1163,1164,1165,1166,1167,1168,1169,1171,1175,1176,1183,1196,1208,1216,1217,1237,1238,1239,1240,1246,1247,1257,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278],which:[40,41,42,43,897,902,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,928,933,937,938,939,949,950,959,960,968,973,974,975,976,979,980,981,982,984,986,990,992,993,994,1000,1007,1043,1052,1054,1055,1057,1064,1076,1077,1079,1080,1094,1096,1099,1100,1101,1103,1104,1105,1107,1109,1110,1112,1114,1119,1130,1131,1132,1135,1139,1147,1153,1156,1158,1159,1167,1171,1172,1173,1177,1178,1183,1185,1189,1190,1193,1194,1195,1197,1198,1199,1205,1206,1210,1212,1213,1216,1217,1218,1219,1220,1223,1224,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1246,1247,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1279,1280,1282,1283],whilst:43,whitespac:[40,41,42],who:43,whose:[43,908,909,913,919,920,1000,1003,1005,1013,1037,1038,1043,1049,1132,1133,1134,1135,1136,1140,1142,1145,1153,1156,1228,1229,1231,1234,1236],why:[1240,1241],width:[1112,1117],wiki:1286,wikipedia:1286,window:[1112,1117,1119,1120,1121,1122,1123,1124,1125,1126,1257,1258,1259,1260,1261,1262,1263,1264],wise:[40,41,43,897,898,899,900,901,902,903,904,1000,1001,1002,1004,1006,1007,1009,1010,1011,1015,1016,1017,1019,1023,1024,1025,1029,1030,1031,1032,1034,1036,1041,1043,1062,1096,1099,1101,1103,1105,1183,1188,1191,1192,1201,1203],wish:1283,with_bia:[1257,1267],with_cal:[1043,1057],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1096,1106],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_partial_v:[1269,1270],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,1153,1159],with_to_kv_fn:[1257,1268],with_to_out_fn:[1257,1268],with_to_q_fn:[1257,1268],within:[15,18,19,43,1132,1144,1183,1185,1216,1220],without:[40,41,43,1043,1078,1083,1167,1169,1183,1207,1283],wonder:1240,word:[15,16,17,1183,1185,1216,1220,1246,1247],work:[43,1282],worker:[950,959,960],worker_class:[950,959,960],would:[43,897,902,1240,1283,1286],wrap:[15,40,41,42,43,387,411,450,497,1043,1049,1096,1110,1240],wrapper:43,write:[40,41,43,1240,1241,1286],written:[43,1240,1286],ws_new:[1096,1099,1101,1103,1104,1105],x1_i:[1000,1009,1011,1015,1019,1023,1024,1029,1030,1032,1034,1183,1191],x2_i:[1000,1009,1011,1015,1019,1023,1024,1029,1030,1032,1034,1183,1191],x_feat_dim:[1119,1130],x_i:[1000,1001,1002,1003,1005,1010,1012,1013,1018,1020,1021,1022,1026,1028,1031,1037,1038,1039,1040,1228,1230],x_in:[1240,1282],x_inv:[1132,1137],x_max:[497,1183,1188],x_min:[497,1183,1188],xkk:1286,xkkm1:1286,xkm1km1:1286,year:[1240,1286],yet:[1167,1176,1286],yield:[1183,1212],you:[43,1240,1282,1283,1286],your:[1240,1241,1282,1283,1286],your_awesome_project:1283,yourself:[43,1240],yourslef:43,youtub:43,zero:[40,41,81,243,391,540,703,908,911,913,919,920,1000,1031,1032,1043,1079,1080,1096,1098,1099,1103,1104,1119,1127,1132,1134,1138,1147,1153,1154,1162,1183,1205,1213,1223,1224,1228,1230,1233,1235,1237,1238,1239,1240,1248,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1273,1274,1275,1276],zero_pad:[327,639,826,1153],zeros_lik:[189,336,497,649,837,1183],zk_e:1286},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Activations","softmax","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Mxnet","Activations","gelu","Array api","Data types","Function and method signatures","Searching functions","Set functions","Statistical functions","Constants","Creation","array","asarray","empty","eye","linspace","logspace","ones","ones_like","tril","zeros","Data type","&lt;no title&gt;","finfo","iinfo","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","Elementwise","acos","acosh","bitwise_and","bitwise_or","ceil","floor","greater_equal","isfinite","isinf","isnan","less","logical_and","logical_not","logical_or","negative","round","sin","sinh","sqrt","square","tanh","General","array_equal","cumprod","floormod","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matrix_norm","pinv","qr","slogdet","svd","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","repeat","split","tile","zero_pad","Old","General","abs","arange","broadcast_to","cast","clip","compile","concatenate","cross","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","linear_resample","matmul","meshgrid","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Numpy","Activations","gelu","softmax","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","cumprod","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","expand_dims","flip","permute_dims","split","Old","General","arange","argmin","cast","compile","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","linear_resample","one_hot","squeeze","transpose","zeros_like","Linear algebra","Reductions","Random","multinomial","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Tensorflow","Activations","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","negative","not_equal","positive","round","sin","sinh","sqrt","square","tanh","General","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Layers","conv2d","conv3d","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","matmul","matrix_norm","matrix_transpose","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","cast","concatenate","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","linear_resample","one_hot","squeeze","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Torch","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Constants","Converters","IvyModule","to_ivy_module","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","broadcast_to","finfo","iinfo","result_type","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","equal","erf","exp","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","array_equal","container_types","copy_array","cumprod","cumsum","floormod","inplace_decrement","inplace_increment","inplace_update","is_array","scatter_flat","scatter_nd","to_list","to_numpy","to_scalar","unstack","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slogdet","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Old","General","abs","arange","argmin","broadcast_to","cast","clip","compile","concatenate","cross","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","get_num_dims","identity","indices_where","linear_resample","maximum","meshgrid","minimum","multiprocessing","one_hot","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linear algebra","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","sum","var","Utility","all","any","Ivy","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Compilation","compile","Constants","Creation","array","asarray","empty","empty_like","eye","full_like","linspace","logspace","ones","ones_like","tril","triu","zeros","Data type","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","broadcast_to","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","result_type","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Elementwise","abs","acos","acosh","asin","asinh","atan","atan2","atanh","bitwise_and","bitwise_invert","bitwise_or","ceil","cos","cosh","divide","erf","exp","floor","greater_equal","isfinite","isinf","isnan","less","less_equal","log","log10","log1p","log2","logaddexp","logical_and","logical_not","logical_or","negative","not_equal","positive","round","sin","sinh","sqrt","square","tan","tanh","General","all_equal","arg_names","array_equal","arrays_equal","assert_supports_inplace","cache_fn","clip_matrix_norm","clip_vector_norm","container_types","copy_array","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","exists","floormod","fourier_encode","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_referrers_recursive","has_nans","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","match_kwargs","num_arrays_in_memory","print_all_arrays_in_memory","queue_timeout","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape_to_tuple","stable_divide","stable_pow","supports_inplace","tmp_dir","to_list","to_numpy","to_scalar","try_else_none","unstack","value_is_nan","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Linear algebra","cholesky","det","diagonal","eigvalsh","inv","matmul","matrix_norm","matrix_transpose","pinv","qr","slodget","svd","svdvals","trace","vector_norm","vector_to_skew_symmetric_matrix","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Manipulation","constant_pad","expand_dims","flip","permute_dims","repeat","split","swapaxes","tile","zero_pad","Meta","fomaml_step","maml_step","reptile_step","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Norms","layer_norm","Old","Dtype","General","abs","arange","argmin","broadcast_to","clip","concatenate","cross","equal","floor","full","gather","gather_nd","get_num_dims","identity","indices_where","linear_resample","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","reshape","shape","squeeze","stack","transpose","where","zeros_like","Linalg","Reductions","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Searching","argmax","Set","Sorting","argsort","Statistical","einsum","max","mean","min","prod","std","sum","var","Utility","all","any","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1057,"function":[238,239,240,241],"var":[229,382,533,686,892,1236],Ones:1253,Using:1283,abs:[109,337,414,568,650,732,838,1001,1184],aco:[110,265,415,569,733,1002],acosh:[111,266,416,570,734,1003],activ:[75,234,387,538,691,897,1243],adam:1274,adam_step:1098,adam_upd:1099,algebra:[168,208,314,362,476,517,624,667,809,871,1132],all:[231,384,535,688,894,1238],all_equ:1044,all_nested_indic:1168,ani:[232,385,536,689,895,1239],api:[0,43,236],arang:[190,338,498,651,839,1185],arg_nam:1045,argmax:[218,370,522,675,881,1224],argmin:[191,499,652,840,1186],args_to_ivi:16,args_to_n:17,argsort:[221,373,525,678,884,1227],arithmet:1,arrai:[0,3,43,82,236,244,392,541,704,909],array_equ:[287,775,1046],arrays_equ:1047,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[83,245,393,542,705,910],asin:[112,417,571,735,1004],asinh:[113,418,572,736,1005],assert_supports_inplac:1048,atan2:[738,1007],atan:[737,1006],atanh:[739,1008],attribut:5,backend:[43,73],bilinear_resampl:[157,303,465,617,798,1113],binary_cross_entropi:1150,bitwis:7,bitwise_and:[114,267,419,573,740,1009],bitwise_invert:[115,420,574,741,1010],bitwise_or:[116,268,421,575,742,1011],broadcast_to:[97,339,407,556,719,841,926,1187],builder:51,cache_fn:1049,cast:[192,340,500,653,842,927],ceil:[117,269,422,576,743,1012],choleski:[169,315,477,625,810,1133],choose_random_framework:61,citat:1240,clear_framework_stack:62,clear_mem_on_dev:[725,966],clip:[341,843,1188],clip_matrix_norm:1050,clip_vector_norm:1051,closest_valid_dtyp:928,code:1286,comparison:9,compil:[342,501,844,905,906],concaten:[193,343,502,654,845,1189],constant:[77,242,390,539,699,907],constant_pad:[328,640,827,1154],contain:[40,41],container_typ:[776,1052],content:1240,contribut:43,conv1d:[161,307,469,802,1120,1258],conv1d_transpos:[162,308,470,803,1121],conv1dtranspos:1259,conv2d:[163,309,471,621,804,1122,1260],conv2d_transpos:[164,310,472,805,1123],conv2dtranspos:1261,conv3d:[165,311,473,622,806,1124,1262],conv3d_transpos:[166,312,474,807,1125],conv3dtranspos:1263,convers:15,convert:[78,700,1246],convert_dtyp:929,copy_arrai:[777,1053],copy_nest:1169,cos:[118,423,577,744,1013],cosh:[119,424,578,745,1014],cprint:1285,creat:43,creation:[81,243,391,540,703,908],cross:[344,846,1190],cross_entropi:1151,cumprod:[145,288,451,778,1054],cumsum:[779,1055],current_framework:63,current_framework_str:[847,1056],data:[95,237,254,405,554,717,922],debug_mod:45,debugg:44,default_devic:967,default_dtyp:930,default_float_dtyp:931,default_int_dtyp:932,depthwise_conv2d:[167,313,475,623,808,1126],depthwiseconv2d:1264,design:43,det:[170,316,478,626,811,1134],dev:[103,260,562,726,968],dev_clon:969,dev_clone_arrai:970,dev_clone_it:971,dev_clone_nest:972,dev_dist:973,dev_dist_arrai:974,dev_dist_it:975,dev_dist_nest:976,dev_from_str:[104,261,563,727,977],dev_to_str:[105,262,564,728,978],dev_unifi:979,dev_unify_arrai:980,dev_unify_it:981,dev_unify_nest:982,dev_util:983,devclonedit:953,devcloneditem:952,devclonednest:954,devdistit:956,devdistitem:955,devdistnest:957,devic:[20,101,258,411,560,723,950],devmapp:959,devmappermultiproc:960,diagon:[171,317,479,627,812,1135],divid:1015,document:1240,dropout:[1127,1265],dtype:[194,345,503,655,848,933,1182],dtype_bit:[195,346,504,656,849,934],dtype_from_str:[196,347,505,657,850,935],dtype_to_str:[197,348,506,658,851,936],ecosystem:52,eigvalsh:[172,318,480,628,813,1136],einops_rearrang:1058,einops_reduc:1059,einops_repeat:1060,einsum:[223,375,527,680,886,1229],elementwis:[108,264,413,567,731,1000],empti:[84,246,394,543,706,911],empty_lik:[85,395,544,707,912],equal:[120,425,579,746,1191],erf:[426,747,1016],execute_with_gradi:[154,298,460,612,792,1100],exist:1061,exp:[748,1017],expand_dim:[184,329,492,641,828,1155],eye:[86,247,396,545,708,913],finfo:[98,256,408,557,720,937],firstlayersiren:1250,flip:[185,330,493,642,829,1156],float_img_to_uint8_img:1114,floor:[121,270,427,580,749,1018,1192],floormod:[289,780,1062],fomaml_step:1164,fork:43,fourier_encod:1063,framework:59,full:[198,349,507,659,852,1193],full_lik:[87,397,546,709,914],func:72,gather:[199,350,508,660,853,1194],gather_nd:[200,351,509,661,854,1195],geglu:1244,gelu:[235,388,692,898,1245],gener:[22,144,189,286,336,450,497,603,649,774,837,1043,1183],get_all_arrays_in_memori:1064,get_all_arrays_on_dev:984,get_framework:64,get_min_bas:1065,get_min_denomin:1066,get_num_dim:[855,1196],get_referrers_recurs:1067,glorotuniform:1251,gpu_is_avail:985,gradient:[24,153,297,459,611,791,1096],gradient_descent_upd:1101,gradient_imag:[158,304,466,618,799,1115],greater_equ:[122,271,428,581,750,1019],gym:53,handler:59,has_nan:1068,ident:[201,352,510,662,856,1197],iinfo:[99,257,409,558,721,938],imag:[26,156,302,464,616,797,1112],index_nest:1170,indices_wher:[202,353,511,857,1198],initi:1248,inplac:11,inplace_arrays_support:1069,inplace_decr:[146,290,452,604,781,1070],inplace_incr:[147,291,453,605,782,1071],inplace_upd:[148,292,454,606,783,1072],inplace_variables_support:1073,inv:[814,1137],invalid_dtyp:939,is_arrai:[149,293,455,607,784,1074],is_float_dtyp:940,is_int_dtyp:941,is_vari:[155,299,461,613,793,1102],isfinit:[123,272,429,582,751,1020],isinf:[124,273,430,583,752,1021],isnan:[125,274,431,584,753,1022],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,896,1282,1283,1286],ivymodul:[79,701],jax:74,keep:43,lamb:1275,lamb_upd:1103,lar:1276,lars_upd:1104,layer:[160,306,468,620,801,1119,1257],layer_norm:1180,layernorm:1272,leaky_relu:[693,899],less:[126,275,432,585,754,1023],less_equ:[127,433,586,755,1024],linalg:[28,1214],linear:[168,208,314,362,476,517,624,667,809,871,1128,1132,1267],linear_resampl:[203,354,512,663,858,1199],linspac:[88,248,398,547,710,915],list:43,log10:[128,434,587,757,1026],log1p:[129,435,588,758,1027],log2:[130,436,589,759,1028],log:[756,1025],logaddexp:[131,437,590,760,1029],logic:30,logical_and:[132,276,438,591,761,1030],logical_not:[133,277,439,592,762,1031],logical_or:[134,278,440,593,763,1032],logspac:[89,249,399,548,711,916],loss:1149,lstm:1266,lstm_updat:1129,maml_step:1165,manipul:[183,327,491,639,826,1153],map:1171,map_nest_at_index:1172,map_nest_at_indic:1173,match_kwarg:1075,math:32,matmul:[173,355,481,629,815,1138,1200],matrix_norm:[174,319,482,630,816,1139],matrix_transpos:[175,483,631,817,1140],max:[224,376,528,681,887,1230],maximum:[859,1201],mean:[225,377,529,682,888,1231],mech:54,memori:55,meshgrid:[356,860,1202],meta:[34,1163],method:238,min:[226,378,530,683,889,1232],minimum:[861,1203],model:56,modul:[1269,1270,1282],multi_head_attent:1130,multi_index_nest:1174,multidevcontain:42,multidevit:963,multidevitem:962,multidevnest:964,multiheadattent:1268,multinomi:[211,365,520,670,874,1217],multiprocess:[862,1204],mxnet:233,nativ:1282,neg:[135,279,441,594,764,1033],nest:1167,nested_indices_wher:1175,nested_map:1176,network:1282,next:1240,norm:[1179,1271],not_equ:[136,442,595,765,1034],num_arrays_in_memori:1076,num_arrays_on_dev:986,num_cpu_cor:987,num_gpu:[106,988],numpi:386,nutshel:1240,old:[188,335,496,648,836,1181],one_hot:[204,513,664,863,1205],ones:[90,250,400,549,712,917,1206],ones_lik:[91,251,401,550,713,918],oper:[1,3,7,9,11,13,43],optim:[1273,1277],optimizer_upd:1105,overview:1240,percent_used_mem_on_dev:989,permute_dim:[186,494,643,830,1157],pinv:[320,818,1141],portabl:1286,posit:[137,443,596,766,1035],print_all_arrays_in_memori:1077,print_all_arrays_on_dev:990,prod:[227,379,531,684,890,1233],profil:[102,259,412,561,724,965],pull:43,queue_timeout:1078,randint:[212,366,671,875,1218],random:[36,210,364,519,669,873,1216],random_crop:1116,random_norm:[213,367,672,876,1219],random_uniform:[214,368,673,877,1220],reduct:[38,209,363,518,668,872,1215],reflect:13,relu:[694,900],repeat:[331,831,1158],reptile_step:1166,request:43,reshap:[864,1207],result_typ:[100,410,559,722,942],robot:57,round:[138,280,444,597,767,1036],run:1283,scaled_dot_product_attent:1131,scatter_flat:[150,294,456,608,785,1079],scatter_nd:[151,295,457,609,786,1080],search:[217,239,369,521,674,880,1223],seed:[215,878,1221],sequenti:[1279,1280],set:[219,240,371,523,676,882,1225],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:991,set_default_dtyp:943,set_default_float_dtyp:944,set_default_int_dtyp:945,set_exception_debug_mod:48,set_framework:65,set_min_bas:1081,set_min_denomin:1082,set_nest_at_index:1177,set_nest_at_indic:1178,set_queue_timeout:1083,set_split_factor:992,set_tmp_dir:1084,set_with_grad:1106,sgd:1278,shape:[865,1208],shape_to_tupl:1085,shuffl:[216,879,1222],sigmoid:[695,901],signatur:238,sin:[139,281,445,598,768,1037],sinh:[140,282,446,599,769,1038],siren:1254,slodget:1143,slogdet:[177,322,485,633,820],softmax:[76,389,696,902],softplu:[697,903],sort:[220,372,524,677,883,1226],sparse_cross_entropi:1152,split:[187,332,495,644,832,1159],split_factor:993,split_func_cal:994,sqrt:[141,283,447,600,770,1039],squar:[142,284,448,601,771,1040],squeez:[205,357,514,665,866,1209],stable_divid:1086,stable_pow:1087,stack:[358,867,1210],stack_imag:[159,305,467,619,800,1117],standard:43,statist:[222,241,374,526,679,885,1228],std:[380,1234],stop_gradi:[300,462,614,794,1107],submodul:43,sum:[228,381,532,685,891,1235],supports_inplac:1088,svd:[178,323,486,634,821,1144],svdval:[179,487,635,822,1145],swapax:[645,833,1160],tan:[772,1041],tanh:[143,285,449,602,698,773,904,1042],tensorflow:537,tile:[333,646,834,1161],tmp_dir:1089,to_dev:[107,263,565,729,995],to_ivi:18,to_ivy_modul:[80,702,1247],to_list:[787,1090],to_n:19,to_numpi:[788,1091],to_scalar:[789,1092],todo:43,torch:690,total_mem_on_dev:996,tpu_is_avail:[566,730,997],trace:[180,324,488,636,823,1146],train:1282,trainabl:1282,transpos:[206,359,515,868,1211],tree:1240,tril:[92,252,402,551,714,919],triu:[93,403,552,715,920],try_else_non:1093,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[95,237,254,405,554,717,922],uint8_img_to_float_img:1118,unset_debug_mod:49,unset_default_devic:998,unset_default_dtyp:946,unset_default_float_dtyp:947,unset_default_int_dtyp:948,unset_framework:71,unset_with_grad:1108,unstack:[152,296,458,610,790,1094],updat:43,used_mem_on_dev:999,util:[230,383,534,687,893,1237],valid_dtyp:949,value_is_nan:1095,variabl:[301,463,615,795,1109],variable_data:[796,1110],vector_norm:[181,325,489,637,824,1147],vector_to_skew_symmetric_matrix:[182,326,490,638,825,1148],verbos:1284,vision:58,where:[360,869,1212,1240],why:1286,with_grad:1111,wrapper:72,write:1283,your:43,zero:[94,253,404,553,716,921,1256],zero_pad:[334,647,835,1162],zeros_lik:[207,361,516,666,870,1213]}})